{
  "service": "networkconnectivity",
  "version": "v1",
  "base_url": "https://networkconnectivity.googleapis.com/",
  "total_endpoints": 84,
  "endpoints": [
    {
      "operation_id": "networkconnectivity.projects.locations.list",
      "resource": "projects.locations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/locations",
      "description": "Lists information about the supported locations for this service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource that owns the locations collection, if applicable.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return. If not set, the service selects a default.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "extraLocationTypes": {
          "description": "Optional. A list of extra location types that should be used as conditions for controlling the visibility of the locations.",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListLocationsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.get",
      "resource": "projects.locations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets information about a location.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Resource name for the location.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Location"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.operations.list",
      "resource": "projects.locations.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.operations.get",
      "resource": "projects.locations.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.operations.delete",
      "resource": "projects.locations.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.operations.cancel",
      "resource": "projects.locations.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleLongrunningCancelOperationRequest",
      "body_schema": {
        "id": "GoogleLongrunningCancelOperationRequest",
        "description": "The request message for Operations.CancelOperation.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionMaps.list",
      "resource": "projects.locations.serviceConnectionMaps",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/serviceConnectionMaps",
      "description": "Lists ServiceConnectionMaps in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name. ex. projects/123/locations/us-east1",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results per page that should be returned.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "A filter expression that filters the results listed in the response.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListServiceConnectionMapsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionMaps.get",
      "resource": "projects.locations.serviceConnectionMaps",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single ServiceConnectionMap.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the ServiceConnectionMap to get.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceConnectionMap"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionMaps.create",
      "resource": "projects.locations.serviceConnectionMaps",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/serviceConnectionMaps",
      "description": "Creates a new ServiceConnectionMap in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name of the ServiceConnectionMap. ex. projects/123/locations/us-east1",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "serviceConnectionMapId": {
          "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.",
          "location": "query",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "ServiceConnectionMap",
      "body_schema": {
        "id": "ServiceConnectionMap",
        "description": "The ServiceConnectionMap resource.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Time when the ServiceConnectionMap was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the ServiceConnectionMap was updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "User-defined labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "A description of this resource.",
            "type": "string"
          },
          "serviceClass": {
            "description": "The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.",
            "type": "string"
          },
          "serviceClassUri": {
            "description": "Output only. The service class uri this ServiceConnectionMap is for.",
            "readOnly": true,
            "type": "string"
          },
          "infrastructure": {
            "description": "Output only. The infrastructure used for connections between consumers/producers.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "An invalid infrastructure as the default case.",
              "Private Service Connect is used for connections."
            ],
            "enum": [
              "INFRASTRUCTURE_UNSPECIFIED",
              "PSC"
            ]
          },
          "producerPscConfigs": {
            "description": "The PSC configurations on producer side.",
            "type": "array",
            "items": {
              "$ref": "ProducerPscConfig"
            }
          },
          "consumerPscConfigs": {
            "description": "The PSC configurations on consumer side.",
            "type": "array",
            "items": {
              "$ref": "ConsumerPscConfig"
            }
          },
          "consumerPscConnections": {
            "description": "Output only. PSC connection details on consumer side.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "ConsumerPscConnection"
            }
          },
          "token": {
            "description": "The token provided by the consumer. This token authenticates that the consumer can create a connection within the specified project and network.",
            "type": "string"
          },
          "etag": {
            "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionMaps.patch",
      "resource": "projects.locations.serviceConnectionMaps",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single ServiceConnectionMap.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. Field mask is used to specify the fields to be overwritten in the ServiceConnectionMap resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "ServiceConnectionMap",
      "body_schema": {
        "id": "ServiceConnectionMap",
        "description": "The ServiceConnectionMap resource.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Time when the ServiceConnectionMap was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the ServiceConnectionMap was updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "User-defined labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "A description of this resource.",
            "type": "string"
          },
          "serviceClass": {
            "description": "The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.",
            "type": "string"
          },
          "serviceClassUri": {
            "description": "Output only. The service class uri this ServiceConnectionMap is for.",
            "readOnly": true,
            "type": "string"
          },
          "infrastructure": {
            "description": "Output only. The infrastructure used for connections between consumers/producers.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "An invalid infrastructure as the default case.",
              "Private Service Connect is used for connections."
            ],
            "enum": [
              "INFRASTRUCTURE_UNSPECIFIED",
              "PSC"
            ]
          },
          "producerPscConfigs": {
            "description": "The PSC configurations on producer side.",
            "type": "array",
            "items": {
              "$ref": "ProducerPscConfig"
            }
          },
          "consumerPscConfigs": {
            "description": "The PSC configurations on consumer side.",
            "type": "array",
            "items": {
              "$ref": "ConsumerPscConfig"
            }
          },
          "consumerPscConnections": {
            "description": "Output only. PSC connection details on consumer side.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "ConsumerPscConnection"
            }
          },
          "token": {
            "description": "The token provided by the consumer. This token authenticates that the consumer can create a connection within the specified project and network.",
            "type": "string"
          },
          "etag": {
            "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionMaps.delete",
      "resource": "projects.locations.serviceConnectionMaps",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single ServiceConnectionMap.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ServiceConnectionMap to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        },
        "etag": {
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionMaps.setIamPolicy",
      "resource": "projects.locations.serviceConnectionMaps",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionMaps.getIamPolicy",
      "resource": "projects.locations.serviceConnectionMaps",
      "action": "getIamPolicy",
      "http_method": "GET",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionMaps.testIamPermissions",
      "resource": "projects.locations.serviceConnectionMaps",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionPolicies.list",
      "resource": "projects.locations.serviceConnectionPolicies",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/serviceConnectionPolicies",
      "description": "Lists ServiceConnectionPolicies in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name. ex. projects/123/locations/us-east1",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results per page that should be returned.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "A filter expression that filters the results listed in the response.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListServiceConnectionPoliciesResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionPolicies.get",
      "resource": "projects.locations.serviceConnectionPolicies",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single ServiceConnectionPolicy.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the ServiceConnectionPolicy to get.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceConnectionPolicy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionPolicies.create",
      "resource": "projects.locations.serviceConnectionPolicies",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/serviceConnectionPolicies",
      "description": "Creates a new ServiceConnectionPolicy in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name of the ServiceConnectionPolicy. ex. projects/123/locations/us-east1",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "serviceConnectionPolicyId": {
          "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.",
          "location": "query",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "ServiceConnectionPolicy",
      "body_schema": {
        "id": "ServiceConnectionPolicy",
        "description": "The ServiceConnectionPolicy resource.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Time when the ServiceConnectionPolicy was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the ServiceConnectionPolicy was updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "User-defined labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "A description of this resource.",
            "type": "string"
          },
          "network": {
            "description": "The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.",
            "type": "string"
          },
          "serviceClass": {
            "description": "The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp or google-cloud. For example, gcp-memorystore-redis or google-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.",
            "type": "string"
          },
          "infrastructure": {
            "description": "Output only. The type of underlying resources used to create the connection.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "An invalid infrastructure as the default case.",
              "Private Service Connect is used for connections."
            ],
            "enum": [
              "INFRASTRUCTURE_UNSPECIFIED",
              "PSC"
            ]
          },
          "pscConfig": {
            "description": "Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.",
            "$ref": "PscConfig"
          },
          "pscConnections": {
            "description": "Output only. [Output only] Information about each Private Service Connect connection.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "PscConnection"
            }
          },
          "etag": {
            "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionPolicies.patch",
      "resource": "projects.locations.serviceConnectionPolicies",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single ServiceConnectionPolicy.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. Field mask is used to specify the fields to be overwritten in the ServiceConnectionPolicy resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "ServiceConnectionPolicy",
      "body_schema": {
        "id": "ServiceConnectionPolicy",
        "description": "The ServiceConnectionPolicy resource.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Time when the ServiceConnectionPolicy was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the ServiceConnectionPolicy was updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "User-defined labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "A description of this resource.",
            "type": "string"
          },
          "network": {
            "description": "The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.",
            "type": "string"
          },
          "serviceClass": {
            "description": "The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp or google-cloud. For example, gcp-memorystore-redis or google-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.",
            "type": "string"
          },
          "infrastructure": {
            "description": "Output only. The type of underlying resources used to create the connection.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "An invalid infrastructure as the default case.",
              "Private Service Connect is used for connections."
            ],
            "enum": [
              "INFRASTRUCTURE_UNSPECIFIED",
              "PSC"
            ]
          },
          "pscConfig": {
            "description": "Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.",
            "$ref": "PscConfig"
          },
          "pscConnections": {
            "description": "Output only. [Output only] Information about each Private Service Connect connection.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "PscConnection"
            }
          },
          "etag": {
            "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionPolicies.delete",
      "resource": "projects.locations.serviceConnectionPolicies",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single ServiceConnectionPolicy.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ServiceConnectionPolicy to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        },
        "etag": {
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionPolicies.setIamPolicy",
      "resource": "projects.locations.serviceConnectionPolicies",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionPolicies.getIamPolicy",
      "resource": "projects.locations.serviceConnectionPolicies",
      "action": "getIamPolicy",
      "http_method": "GET",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionPolicies.testIamPermissions",
      "resource": "projects.locations.serviceConnectionPolicies",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceClasses.list",
      "resource": "projects.locations.serviceClasses",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/serviceClasses",
      "description": "Lists ServiceClasses in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name. ex. projects/123/locations/us-east1",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results per page that should be returned.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "A filter expression that filters the results listed in the response.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListServiceClassesResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceClasses.get",
      "resource": "projects.locations.serviceClasses",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single ServiceClass.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the ServiceClass to get.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceClass"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceClasses.patch",
      "resource": "projects.locations.serviceClasses",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single ServiceClass.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. The name of a ServiceClass resource. Format: projects/{project}/locations/{location}/serviceClasses/{service_class} See: https://google.aip.dev/122#fields-representing-resource-names",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. Field mask is used to specify the fields to be overwritten in the ServiceClass resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "ServiceClass",
      "body_schema": {
        "id": "ServiceClass",
        "description": "The ServiceClass resource.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of a ServiceClass resource. Format: projects/{project}/locations/{location}/serviceClasses/{service_class} See: https://google.aip.dev/122#fields-representing-resource-names",
            "type": "string"
          },
          "serviceClass": {
            "description": "Output only. The generated service class name. Use this name to refer to the Service class in Service Connection Maps and Service Connection Policies.",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Time when the ServiceClass was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the ServiceClass was updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "User-defined labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "A description of this resource.",
            "type": "string"
          },
          "etag": {
            "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceClasses.delete",
      "resource": "projects.locations.serviceClasses",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single ServiceClass.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ServiceClass to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        },
        "etag": {
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceClasses.setIamPolicy",
      "resource": "projects.locations.serviceClasses",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceClasses.getIamPolicy",
      "resource": "projects.locations.serviceClasses",
      "action": "getIamPolicy",
      "http_method": "GET",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceClasses.testIamPermissions",
      "resource": "projects.locations.serviceClasses",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionTokens.get",
      "resource": "projects.locations.serviceConnectionTokens",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single ServiceConnectionToken.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the ServiceConnectionToken to get.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceConnectionToken"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionTokens.list",
      "resource": "projects.locations.serviceConnectionTokens",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/serviceConnectionTokens",
      "description": "Lists ServiceConnectionTokens in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name. ex. projects/123/locations/us-east1",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results per page that should be returned.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "A filter expression that filters the results listed in the response.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListServiceConnectionTokensResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionTokens.create",
      "resource": "projects.locations.serviceConnectionTokens",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/serviceConnectionTokens",
      "description": "Creates a new ServiceConnectionToken in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name of the ServiceConnectionToken. ex. projects/123/locations/us-east1",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "serviceConnectionTokenId": {
          "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.",
          "location": "query",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "ServiceConnectionToken",
      "body_schema": {
        "id": "ServiceConnectionToken",
        "description": "The ServiceConnectionToken resource.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of a ServiceConnectionToken. Format: projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token} See: https://google.aip.dev/122#fields-representing-resource-names",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Time when the ServiceConnectionToken was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the ServiceConnectionToken was updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "User-defined labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "A description of this resource.",
            "type": "string"
          },
          "network": {
            "description": "The resource path of the network associated with this token. Example: projects/{projectNumOrId}/global/networks/{resourceId}.",
            "type": "string"
          },
          "token": {
            "description": "Output only. The token generated by Automation.",
            "readOnly": true,
            "type": "string"
          },
          "expireTime": {
            "description": "Output only. The time to which this token is valid.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.serviceConnectionTokens.delete",
      "resource": "projects.locations.serviceConnectionTokens",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single ServiceConnectionToken.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ServiceConnectionToken to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        },
        "etag": {
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.list",
      "resource": "projects.locations.global.hubs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/hubs",
      "description": "Lists the Network Connectivity Center hubs associated with a given project.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name.",
          "pattern": "^projects/[^/]+/locations/global$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results per page to return.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "An expression that filters the list of results.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListHubsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.get",
      "resource": "projects.locations.global.hubs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details about a Network Connectivity Center hub.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the hub resource to get.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Hub"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.create",
      "resource": "projects.locations.global.hubs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/hubs",
      "description": "Creates a new Network Connectivity Center hub in the specified project.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource.",
          "pattern": "^projects/[^/]+/locations/global$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "hubId": {
          "description": "Required. A unique identifier for the hub.",
          "location": "query",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Hub",
      "body_schema": {
        "id": "Hub",
        "description": "A Network Connectivity Center hub is a global management resource to which you attach spokes. A single hub can contain spokes from multiple regions. However, if any of a hub's spokes use the site-to-site data transfer feature, the resources associated with those spokes must all be in the same VPC network. Spokes that do not use site-to-site data transfer can be associated with any VPC network in your project.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the hub was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The time the hub was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. An optional description of the hub.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted and another with the same name is created, the new hub is assigned a different unique_id.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The current lifecycle state of this hub.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "No state information available",
              "The resource's create operation is in progress.",
              "The resource is active",
              "The resource's delete operation is in progress.",
              "The resource's accept operation is in progress.",
              "The resource's reject operation is in progress.",
              "The resource's update operation is in progress.",
              "The resource is inactive.",
              "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.",
              "The resource is in an undefined state due to resource creation or deletion failure. You can try to delete the resource later or contact support for help."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "DELETING",
              "ACCEPTING",
              "REJECTING",
              "UPDATING",
              "INACTIVE",
              "OBSOLETE",
              "FAILED"
            ]
          },
          "routingVpcs": {
            "description": "Output only. The VPC networks associated with this hub's spokes. This field is read-only. Network Connectivity Center automatically populates it based on the set of spokes attached to the hub.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "RoutingVPC"
            }
          },
          "routeTables": {
            "description": "Output only. The route tables that belong to this hub. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}` This field is read-only. Network Connectivity Center automatically populates it based on the route tables nested under the hub.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "spokeSummary": {
            "description": "Output only. A summary of the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.",
            "readOnly": true,
            "$ref": "SpokeSummary"
          },
          "policyMode": {
            "description": "Optional. The policy mode of this hub. This field can be either PRESET or CUSTOM. If unspecified, the policy_mode defaults to PRESET.",
            "type": "string",
            "enumDescriptions": [
              "Policy mode is unspecified. It defaults to PRESET with preset_topology = MESH.",
              "Hub uses one of the preset topologies."
            ],
            "enum": [
              "POLICY_MODE_UNSPECIFIED",
              "PRESET"
            ]
          },
          "presetTopology": {
            "description": "Optional. The topology implemented in this hub. Currently, this field is only used when policy_mode = PRESET. The available preset topologies are MESH and STAR. If preset_topology is unspecified and policy_mode = PRESET, the preset_topology defaults to MESH. When policy_mode = CUSTOM, the preset_topology is set to PRESET_TOPOLOGY_UNSPECIFIED.",
            "type": "string",
            "enumDescriptions": [
              "Preset topology is unspecified. When policy_mode = PRESET, it defaults to MESH.",
              "Mesh topology is implemented. Group `default` is automatically created. All spokes in the hub are added to group `default`.",
              "Star topology is implemented. Two groups, `center` and `edge`, are automatically created along with hub creation. Spokes have to join one of the groups during creation."
            ],
            "enum": [
              "PRESET_TOPOLOGY_UNSPECIFIED",
              "MESH",
              "STAR"
            ]
          },
          "exportPsc": {
            "description": "Optional. Whether Private Service Connect connection propagation is enabled for the hub. If true, Private Service Connect endpoints in VPC spokes attached to the hub are made accessible to other VPC spokes attached to the hub. The default value is false.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.patch",
      "resource": "projects.locations.global.hubs",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the description and/or labels of a Network Connectivity Center hub.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. In the case of an update to an existing hub, field mask is used to specify the fields to be overwritten. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask, then all fields are overwritten.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "requestId": {
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Hub",
      "body_schema": {
        "id": "Hub",
        "description": "A Network Connectivity Center hub is a global management resource to which you attach spokes. A single hub can contain spokes from multiple regions. However, if any of a hub's spokes use the site-to-site data transfer feature, the resources associated with those spokes must all be in the same VPC network. Spokes that do not use site-to-site data transfer can be associated with any VPC network in your project.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the hub was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The time the hub was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. An optional description of the hub.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted and another with the same name is created, the new hub is assigned a different unique_id.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The current lifecycle state of this hub.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "No state information available",
              "The resource's create operation is in progress.",
              "The resource is active",
              "The resource's delete operation is in progress.",
              "The resource's accept operation is in progress.",
              "The resource's reject operation is in progress.",
              "The resource's update operation is in progress.",
              "The resource is inactive.",
              "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.",
              "The resource is in an undefined state due to resource creation or deletion failure. You can try to delete the resource later or contact support for help."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "DELETING",
              "ACCEPTING",
              "REJECTING",
              "UPDATING",
              "INACTIVE",
              "OBSOLETE",
              "FAILED"
            ]
          },
          "routingVpcs": {
            "description": "Output only. The VPC networks associated with this hub's spokes. This field is read-only. Network Connectivity Center automatically populates it based on the set of spokes attached to the hub.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "RoutingVPC"
            }
          },
          "routeTables": {
            "description": "Output only. The route tables that belong to this hub. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}` This field is read-only. Network Connectivity Center automatically populates it based on the route tables nested under the hub.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "spokeSummary": {
            "description": "Output only. A summary of the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.",
            "readOnly": true,
            "$ref": "SpokeSummary"
          },
          "policyMode": {
            "description": "Optional. The policy mode of this hub. This field can be either PRESET or CUSTOM. If unspecified, the policy_mode defaults to PRESET.",
            "type": "string",
            "enumDescriptions": [
              "Policy mode is unspecified. It defaults to PRESET with preset_topology = MESH.",
              "Hub uses one of the preset topologies."
            ],
            "enum": [
              "POLICY_MODE_UNSPECIFIED",
              "PRESET"
            ]
          },
          "presetTopology": {
            "description": "Optional. The topology implemented in this hub. Currently, this field is only used when policy_mode = PRESET. The available preset topologies are MESH and STAR. If preset_topology is unspecified and policy_mode = PRESET, the preset_topology defaults to MESH. When policy_mode = CUSTOM, the preset_topology is set to PRESET_TOPOLOGY_UNSPECIFIED.",
            "type": "string",
            "enumDescriptions": [
              "Preset topology is unspecified. When policy_mode = PRESET, it defaults to MESH.",
              "Mesh topology is implemented. Group `default` is automatically created. All spokes in the hub are added to group `default`.",
              "Star topology is implemented. Two groups, `center` and `edge`, are automatically created along with hub creation. Spokes have to join one of the groups during creation."
            ],
            "enum": [
              "PRESET_TOPOLOGY_UNSPECIFIED",
              "MESH",
              "STAR"
            ]
          },
          "exportPsc": {
            "description": "Optional. Whether Private Service Connect connection propagation is enabled for the hub. If true, Private Service Connect endpoints in VPC spokes attached to the hub are made accessible to other VPC spokes attached to the hub. The default value is false.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.delete",
      "resource": "projects.locations.global.hubs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Network Connectivity Center hub.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the hub to delete.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.listSpokes",
      "resource": "projects.locations.global.hubs",
      "action": "listSpokes",
      "http_method": "GET",
      "path_template": "v1/{+name}:listSpokes",
      "description": "Lists the Network Connectivity Center spokes associated with a specified hub and location. The list includes both spokes that are attached to the hub and spokes that have been proposed but not yet accepted.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the hub.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "spokeLocations": {
          "description": "A list of locations. Specify one of the following: `[global]`, a single region (for example, `[us-central1]`), or a combination of values (for example, `[global, us-central1, us-west1]`). If the spoke_locations field is populated, the list of results includes only spokes in the specified location. If the spoke_locations field is not populated, the list of results includes spokes in all locations.",
          "location": "query",
          "repeated": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return per page.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "An expression that filters the list of results.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by name or create_time.",
          "location": "query",
          "type": "string"
        },
        "view": {
          "description": "The view of the spoke to return. The view that you use determines which spoke fields are included in the response.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "The spoke view is unspecified. When the spoke view is unspecified, the API returns the same fields as the `BASIC` view.",
            "Includes `name`, `create_time`, `hub`, `unique_id`, `state`, `reasons`, and `spoke_type`. This is the default value.",
            "Includes all spoke fields except `labels`. You can use the `DETAILED` view only when you set the `spoke_locations` field to `[global]`."
          ],
          "enum": [
            "SPOKE_VIEW_UNSPECIFIED",
            "BASIC",
            "DETAILED"
          ]
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListHubSpokesResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.queryStatus",
      "resource": "projects.locations.global.hubs",
      "action": "queryStatus",
      "http_method": "GET",
      "path_template": "v1/{+name}:queryStatus",
      "description": "Query the Private Service Connect propagation status of a Network Connectivity Center hub.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the hub.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The maximum number of results to return per page.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Optional. An expression that filters the list of results. The filter can be used to filter the results by the following fields: * `psc_propagation_status.source_spoke` * `psc_propagation_status.source_group` * `psc_propagation_status.source_forwarding_rule` * `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` * `psc_propagation_status.code` * `psc_propagation_status.message`",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Optional. Sort the results in ascending order by the specified fields. A comma-separated list of any of these fields: * `psc_propagation_status.source_spoke` * `psc_propagation_status.source_group` * `psc_propagation_status.source_forwarding_rule` * `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` * `psc_propagation_status.code` If `group_by` is set, the value of the `order_by` field must be the same as or a subset of the `group_by` field.",
          "location": "query",
          "type": "string"
        },
        "groupBy": {
          "description": "Optional. Aggregate the results by the specified fields. A comma-separated list of any of these fields: * `psc_propagation_status.source_spoke` * `psc_propagation_status.source_group` * `psc_propagation_status.source_forwarding_rule` * `psc_propagation_status.target_spoke` * `psc_propagation_status.target_group` * `psc_propagation_status.code`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "QueryHubStatusResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.rejectSpoke",
      "resource": "projects.locations.global.hubs",
      "action": "rejectSpoke",
      "http_method": "POST",
      "path_template": "v1/{+name}:rejectSpoke",
      "description": "Rejects a Network Connectivity Center spoke from being attached to a hub. If the spoke was previously in the `ACTIVE` state, it transitions to the `INACTIVE` state and is no longer able to connect to other spokes that are attached to the hub.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the hub from which to reject the spoke.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RejectHubSpokeRequest",
      "body_schema": {
        "id": "RejectHubSpokeRequest",
        "description": "The request for HubService.RejectHubSpoke.",
        "type": "object",
        "properties": {
          "spokeUri": {
            "description": "Required. The URI of the spoke to reject from the hub.",
            "type": "string"
          },
          "requestId": {
            "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          },
          "details": {
            "description": "Optional. Additional information provided by the hub administrator.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.acceptSpoke",
      "resource": "projects.locations.global.hubs",
      "action": "acceptSpoke",
      "http_method": "POST",
      "path_template": "v1/{+name}:acceptSpoke",
      "description": "Accepts a proposal to attach a Network Connectivity Center spoke to a hub.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the hub into which to accept the spoke.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "AcceptHubSpokeRequest",
      "body_schema": {
        "id": "AcceptHubSpokeRequest",
        "description": "The request for HubService.AcceptHubSpoke.",
        "type": "object",
        "properties": {
          "spokeUri": {
            "description": "Required. The URI of the spoke to accept into the hub.",
            "type": "string"
          },
          "requestId": {
            "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.acceptSpokeUpdate",
      "resource": "projects.locations.global.hubs",
      "action": "acceptSpokeUpdate",
      "http_method": "POST",
      "path_template": "v1/{+name}:acceptSpokeUpdate",
      "description": "Accepts a proposal to update a Network Connectivity Center spoke in a hub.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the hub to accept spoke update.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "AcceptSpokeUpdateRequest",
      "body_schema": {
        "id": "AcceptSpokeUpdateRequest",
        "description": "The request for HubService.AcceptSpokeUpdate.",
        "type": "object",
        "properties": {
          "spokeUri": {
            "description": "Required. The URI of the spoke to accept update.",
            "type": "string"
          },
          "spokeEtag": {
            "description": "Required. The etag of the spoke to accept update.",
            "type": "string"
          },
          "requestId": {
            "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.rejectSpokeUpdate",
      "resource": "projects.locations.global.hubs",
      "action": "rejectSpokeUpdate",
      "http_method": "POST",
      "path_template": "v1/{+name}:rejectSpokeUpdate",
      "description": "Rejects a proposal to update a Network Connectivity Center spoke in a hub.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the hub to reject spoke update.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RejectSpokeUpdateRequest",
      "body_schema": {
        "id": "RejectSpokeUpdateRequest",
        "description": "The request for HubService.RejectSpokeUpdate.",
        "type": "object",
        "properties": {
          "spokeUri": {
            "description": "Required. The URI of the spoke to reject update.",
            "type": "string"
          },
          "spokeEtag": {
            "description": "Required. The etag of the spoke to reject update.",
            "type": "string"
          },
          "details": {
            "description": "Optional. Additional information provided by the hub administrator.",
            "type": "string"
          },
          "requestId": {
            "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.setIamPolicy",
      "resource": "projects.locations.global.hubs",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.getIamPolicy",
      "resource": "projects.locations.global.hubs",
      "action": "getIamPolicy",
      "http_method": "GET",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.testIamPermissions",
      "resource": "projects.locations.global.hubs",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.routeTables.get",
      "resource": "projects.locations.global.hubs.routeTables",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details about a Network Connectivity Center route table.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the route table resource.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "RouteTable"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.routeTables.list",
      "resource": "projects.locations.global.hubs.routeTables",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/routeTables",
      "description": "Lists route tables in a given hub.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return per page.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "An expression that filters the list of results.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListRouteTablesResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.routeTables.routes.get",
      "resource": "projects.locations.global.hubs.routeTables.routes",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details about the specified route.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the route resource.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+/routes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Route"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.routeTables.routes.list",
      "resource": "projects.locations.global.hubs.routeTables.routes",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/routes",
      "description": "Lists routes in a given route table.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return per page.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "An expression that filters the list of results.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListRoutesResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.groups.get",
      "resource": "projects.locations.global.hubs.groups",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details about a Network Connectivity Center group.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the route table resource.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Group"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.groups.list",
      "resource": "projects.locations.global.hubs.groups",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/groups",
      "description": "Lists groups in a given hub.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return per page.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "An expression that filters the list of results.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListGroupsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.groups.patch",
      "resource": "projects.locations.global.hubs.groups",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a Network Connectivity Center group.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. The name of the group. Group names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. In the case of an update to an existing group, field mask is used to specify the fields to be overwritten. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask, then all fields are overwritten.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "requestId": {
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Group",
      "body_schema": {
        "id": "Group",
        "description": "A group represents a subset of spokes attached to a hub.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of the group. Group names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the group was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The time the group was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. The description of the group.",
            "type": "string"
          },
          "uid": {
            "description": "Output only. The Google-generated UUID for the group. This value is unique across all group resources. If a group is deleted and another with the same name is created, the new route table is assigned a different unique_id.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The current lifecycle state of this group.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "No state information available",
              "The resource's create operation is in progress.",
              "The resource is active",
              "The resource's delete operation is in progress.",
              "The resource's accept operation is in progress.",
              "The resource's reject operation is in progress.",
              "The resource's update operation is in progress.",
              "The resource is inactive.",
              "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.",
              "The resource is in an undefined state due to resource creation or deletion failure. You can try to delete the resource later or contact support for help."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "DELETING",
              "ACCEPTING",
              "REJECTING",
              "UPDATING",
              "INACTIVE",
              "OBSOLETE",
              "FAILED"
            ]
          },
          "autoAccept": {
            "description": "Optional. The auto-accept setting for this group.",
            "$ref": "AutoAccept"
          },
          "routeTable": {
            "description": "Output only. The name of the route table that corresponds to this group. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}`",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.groups.setIamPolicy",
      "resource": "projects.locations.global.hubs.groups",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.groups.getIamPolicy",
      "resource": "projects.locations.global.hubs.groups",
      "action": "getIamPolicy",
      "http_method": "GET",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.hubs.groups.testIamPermissions",
      "resource": "projects.locations.global.hubs.groups",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.policyBasedRoutes.list",
      "resource": "projects.locations.global.policyBasedRoutes",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/policyBasedRoutes",
      "description": "Lists policy-based routes in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name.",
          "pattern": "^projects/[^/]+/locations/global$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results per page that should be returned.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "A filter expression that filters the results listed in the response.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListPolicyBasedRoutesResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.policyBasedRoutes.get",
      "resource": "projects.locations.global.policyBasedRoutes",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single policy-based route.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the PolicyBasedRoute resource to get.",
          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "PolicyBasedRoute"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.policyBasedRoutes.create",
      "resource": "projects.locations.global.policyBasedRoutes",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/policyBasedRoutes",
      "description": "Creates a new policy-based route in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name of the PolicyBasedRoute.",
          "pattern": "^projects/[^/]+/locations/global$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "policyBasedRouteId": {
          "description": "Required. Unique id for the policy-based route to create. Provided by the client when the resource is created. The name must comply with https://google.aip.dev/122#resource-id-segments. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([a-z0-9-]*[a-z0-9])?. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.",
          "location": "query",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "PolicyBasedRoute",
      "body_schema": {
        "id": "PolicyBasedRoute",
        "description": "Policy-based routes route L4 network traffic based on not just destination IP address, but also source IP address, protocol, and more. If a policy-based route conflicts with other types of routes, the policy-based route always takes precedence.",
        "type": "object",
        "properties": {
          "virtualMachine": {
            "description": "Optional. VM instances that this policy-based route applies to.",
            "$ref": "VirtualMachine"
          },
          "interconnectAttachment": {
            "description": "Optional. The interconnect attachments that this policy-based route applies to.",
            "$ref": "InterconnectAttachment"
          },
          "nextHopIlbIp": {
            "description": "Optional. The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets. For this version, only nextHopIlbIp is supported.",
            "type": "string"
          },
          "nextHopOtherRoutes": {
            "description": "Optional. Other routes that will be referenced to determine the next hop of the packet.",
            "type": "string",
            "enumDescriptions": [
              "Default value.",
              "Use the routes from the default routing tables (system-generated routes, custom routes, peering route) to determine the next hop. This effectively excludes matching packets being applied on other PBRs with a lower priority."
            ],
            "enum": [
              "OTHER_ROUTES_UNSPECIFIED",
              "DEFAULT_ROUTING"
            ]
          },
          "name": {
            "description": "Immutable. A unique name of the resource in the form of `projects/{project_number}/locations/global/PolicyBasedRoutes/{policy_based_route_id}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Time when the policy-based route was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the policy-based route was updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "User-defined labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. An optional description of this resource. Provide this field when you create the resource.",
            "type": "string"
          },
          "network": {
            "description": "Required. Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.",
            "type": "string"
          },
          "filter": {
            "description": "Required. The filter to match L4 traffic.",
            "$ref": "Filter"
          },
          "priority": {
            "description": "Optional. The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "warnings": {
            "description": "Output only. If potential misconfigurations are detected for this route, this field will be populated with warning messages.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "Warnings"
            }
          },
          "selfLink": {
            "description": "Output only. Server-defined fully-qualified URL for this resource.",
            "readOnly": true,
            "type": "string"
          },
          "kind": {
            "description": "Output only. Type of this resource. Always networkconnectivity#policyBasedRoute for policy-based Route resources.",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.policyBasedRoutes.delete",
      "resource": "projects.locations.global.policyBasedRoutes",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single policy-based route.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the policy-based route resource to delete.",
          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.policyBasedRoutes.setIamPolicy",
      "resource": "projects.locations.global.policyBasedRoutes",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.policyBasedRoutes.getIamPolicy",
      "resource": "projects.locations.global.policyBasedRoutes",
      "action": "getIamPolicy",
      "http_method": "GET",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.global.policyBasedRoutes.testIamPermissions",
      "resource": "projects.locations.global.policyBasedRoutes",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.spokes.list",
      "resource": "projects.locations.spokes",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/spokes",
      "description": "Lists the Network Connectivity Center spokes in a specified project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return per page.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "An expression that filters the list of results.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListSpokesResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.spokes.get",
      "resource": "projects.locations.spokes",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details about a Network Connectivity Center spoke.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the spoke resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Spoke"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.spokes.create",
      "resource": "projects.locations.spokes",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/spokes",
      "description": "Creates a Network Connectivity Center spoke.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "spokeId": {
          "description": "Required. Unique id for the spoke to create.",
          "location": "query",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Spoke",
      "body_schema": {
        "id": "Spoke",
        "description": "A Network Connectivity Center spoke represents one or more network connectivity resources. When you create a spoke, you associate it with a hub. You must also identify a value for exactly one of the following fields: * linked_vpn_tunnels * linked_interconnect_attachments * linked_router_appliance_instances * linked_vpc_network",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the spoke was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The time the spoke was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. An optional description of the spoke.",
            "type": "string"
          },
          "hub": {
            "description": "Immutable. The name of the hub that this spoke is attached to.",
            "type": "string"
          },
          "group": {
            "description": "Optional. The name of the group that this spoke is associated with.",
            "type": "string"
          },
          "linkedVpnTunnels": {
            "description": "Optional. VPN tunnels that are associated with the spoke.",
            "$ref": "LinkedVpnTunnels"
          },
          "linkedInterconnectAttachments": {
            "description": "Optional. VLAN attachments that are associated with the spoke.",
            "$ref": "LinkedInterconnectAttachments"
          },
          "linkedRouterApplianceInstances": {
            "description": "Optional. Router appliance instances that are associated with the spoke.",
            "$ref": "LinkedRouterApplianceInstances"
          },
          "linkedVpcNetwork": {
            "description": "Optional. VPC network that is associated with the spoke.",
            "$ref": "LinkedVpcNetwork"
          },
          "linkedProducerVpcNetwork": {
            "description": "Optional. The linked producer VPC that is associated with the spoke.",
            "$ref": "LinkedProducerVpcNetwork"
          },
          "uniqueId": {
            "description": "Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is deleted and another with the same name is created, the new spoke is assigned a different `unique_id`.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The current lifecycle state of this spoke.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "No state information available",
              "The resource's create operation is in progress.",
              "The resource is active",
              "The resource's delete operation is in progress.",
              "The resource's accept operation is in progress.",
              "The resource's reject operation is in progress.",
              "The resource's update operation is in progress.",
              "The resource is inactive.",
              "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.",
              "The resource is in an undefined state due to resource creation or deletion failure. You can try to delete the resource later or contact support for help."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "DELETING",
              "ACCEPTING",
              "REJECTING",
              "UPDATING",
              "INACTIVE",
              "OBSOLETE",
              "FAILED"
            ]
          },
          "reasons": {
            "description": "Output only. The reasons for current state of the spoke.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "StateReason"
            }
          },
          "spokeType": {
            "description": "Output only. The type of resource associated with the spoke.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Unspecified spoke type.",
              "Spokes associated with VPN tunnels.",
              "Spokes associated with VLAN attachments.",
              "Spokes associated with router appliance instances.",
              "Spokes associated with VPC networks.",
              "Spokes that are backed by a producer VPC network."
            ],
            "enum": [
              "SPOKE_TYPE_UNSPECIFIED",
              "VPN_TUNNEL",
              "INTERCONNECT_ATTACHMENT",
              "ROUTER_APPLIANCE",
              "VPC_NETWORK",
              "PRODUCER_VPC_NETWORK"
            ]
          },
          "etag": {
            "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          },
          "fieldPathsPendingUpdate": {
            "description": "Optional. The list of fields waiting for hub administration's approval.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.spokes.patch",
      "resource": "projects.locations.spokes",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a Network Connectivity Center spoke.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. In the case of an update to an existing spoke, field mask is used to specify the fields to be overwritten. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask, then all fields are overwritten.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "requestId": {
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Spoke",
      "body_schema": {
        "id": "Spoke",
        "description": "A Network Connectivity Center spoke represents one or more network connectivity resources. When you create a spoke, you associate it with a hub. You must also identify a value for exactly one of the following fields: * linked_vpn_tunnels * linked_interconnect_attachments * linked_router_appliance_instances * linked_vpc_network",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the spoke was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The time the spoke was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. An optional description of the spoke.",
            "type": "string"
          },
          "hub": {
            "description": "Immutable. The name of the hub that this spoke is attached to.",
            "type": "string"
          },
          "group": {
            "description": "Optional. The name of the group that this spoke is associated with.",
            "type": "string"
          },
          "linkedVpnTunnels": {
            "description": "Optional. VPN tunnels that are associated with the spoke.",
            "$ref": "LinkedVpnTunnels"
          },
          "linkedInterconnectAttachments": {
            "description": "Optional. VLAN attachments that are associated with the spoke.",
            "$ref": "LinkedInterconnectAttachments"
          },
          "linkedRouterApplianceInstances": {
            "description": "Optional. Router appliance instances that are associated with the spoke.",
            "$ref": "LinkedRouterApplianceInstances"
          },
          "linkedVpcNetwork": {
            "description": "Optional. VPC network that is associated with the spoke.",
            "$ref": "LinkedVpcNetwork"
          },
          "linkedProducerVpcNetwork": {
            "description": "Optional. The linked producer VPC that is associated with the spoke.",
            "$ref": "LinkedProducerVpcNetwork"
          },
          "uniqueId": {
            "description": "Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is deleted and another with the same name is created, the new spoke is assigned a different `unique_id`.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The current lifecycle state of this spoke.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "No state information available",
              "The resource's create operation is in progress.",
              "The resource is active",
              "The resource's delete operation is in progress.",
              "The resource's accept operation is in progress.",
              "The resource's reject operation is in progress.",
              "The resource's update operation is in progress.",
              "The resource is inactive.",
              "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only.",
              "The resource is in an undefined state due to resource creation or deletion failure. You can try to delete the resource later or contact support for help."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "DELETING",
              "ACCEPTING",
              "REJECTING",
              "UPDATING",
              "INACTIVE",
              "OBSOLETE",
              "FAILED"
            ]
          },
          "reasons": {
            "description": "Output only. The reasons for current state of the spoke.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "StateReason"
            }
          },
          "spokeType": {
            "description": "Output only. The type of resource associated with the spoke.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Unspecified spoke type.",
              "Spokes associated with VPN tunnels.",
              "Spokes associated with VLAN attachments.",
              "Spokes associated with router appliance instances.",
              "Spokes associated with VPC networks.",
              "Spokes that are backed by a producer VPC network."
            ],
            "enum": [
              "SPOKE_TYPE_UNSPECIFIED",
              "VPN_TUNNEL",
              "INTERCONNECT_ATTACHMENT",
              "ROUTER_APPLIANCE",
              "VPC_NETWORK",
              "PRODUCER_VPC_NETWORK"
            ]
          },
          "etag": {
            "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          },
          "fieldPathsPendingUpdate": {
            "description": "Optional. The list of fields waiting for hub administration's approval.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.spokes.delete",
      "resource": "projects.locations.spokes",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Network Connectivity Center spoke.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the spoke to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.spokes.setIamPolicy",
      "resource": "projects.locations.spokes",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.spokes.getIamPolicy",
      "resource": "projects.locations.spokes",
      "action": "getIamPolicy",
      "http_method": "GET",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.spokes.testIamPermissions",
      "resource": "projects.locations.spokes",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.internalRanges.list",
      "resource": "projects.locations.internalRanges",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/internalRanges",
      "description": "Lists internal ranges in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results per page that should be returned.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "A filter expression that filters the results listed in the response.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListInternalRangesResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.internalRanges.get",
      "resource": "projects.locations.internalRanges",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single internal range.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the InternalRange to get.",
          "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "InternalRange"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.internalRanges.create",
      "resource": "projects.locations.internalRanges",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/internalRanges",
      "description": "Creates a new internal range in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name of the internal range.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "internalRangeId": {
          "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.",
          "location": "query",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "InternalRange",
      "body_schema": {
        "id": "InternalRange",
        "description": "The internal range resource for IPAM operations within a VPC network. Used to represent a private address range along with behavioral characteristics of that range (its usage and peering behavior). Networking resources can link to this range if they are created as belonging to it.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The name of an internal range. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names",
            "type": "string"
          },
          "createTime": {
            "description": "Time when the internal range was created.",
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Time when the internal range was updated.",
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "User-defined labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. A description of this resource.",
            "type": "string"
          },
          "ipCidrRange": {
            "description": "Optional. The IP range that this internal range defines. NOTE: IPv6 ranges are limited to usage=EXTERNAL_TO_VPC and peering=FOR_SELF. NOTE: For IPv6 Ranges this field is compulsory, i.e. the address range must be specified explicitly.",
            "type": "string"
          },
          "network": {
            "description": "Immutable. The URL or resource ID of the network in which to reserve the internal range. The network cannot be deleted if there are any reserved internal ranges referring to it. Legacy networks are not supported. For example: https://www.googleapis.com/compute/v1/projects/{project}/locations/global/networks/{network} projects/{project}/locations/global/networks/{network} {network}",
            "type": "string"
          },
          "usage": {
            "description": "Optional. The type of usage set for this InternalRange.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified usage is allowed in calls which identify the resource by other fields and do not need Usage set to complete. These are, i.e.: GetInternalRange and DeleteInternalRange. Usage needs to be specified explicitly in CreateInternalRange or UpdateInternalRange calls.",
              "A VPC resource can use the reserved CIDR block by associating it with the internal range resource if usage is set to FOR_VPC.",
              "Ranges created with EXTERNAL_TO_VPC cannot be associated with VPC resources and are meant to block out address ranges for various use cases, like for example, usage on-prem, with dynamic route announcements via interconnect.",
              "Ranges created FOR_MIGRATION can be used to lock a CIDR range between a source and target subnet. If usage is set to FOR_MIGRATION, the peering value has to be set to FOR_SELF or default to FOR_SELF when unset."
            ],
            "enum": [
              "USAGE_UNSPECIFIED",
              "FOR_VPC",
              "EXTERNAL_TO_VPC",
              "FOR_MIGRATION"
            ]
          },
          "peering": {
            "description": "Optional. The type of peering set for this internal range.",
            "type": "string",
            "enumDescriptions": [
              "If Peering is left unspecified in CreateInternalRange or UpdateInternalRange, it will be defaulted to FOR_SELF.",
              "This is the default behavior and represents the case that this internal range is intended to be used in the VPC in which it is created and is accessible from its peers. This implies that peers or peers-of-peers cannot use this range.",
              "This behavior can be set when the internal range is being reserved for usage by peers. This means that no resource within the VPC in which it is being created can use this to associate with a VPC resource, but one of the peers can. This represents donating a range for peers to use.",
              "This behavior can be set when the internal range is being reserved for usage by the VPC in which it is created, but not shared with peers. In a sense, it is local to the VPC. This can be used to create internal ranges for various purposes like HTTP_INTERNAL_LOAD_BALANCER or for Interconnect routes that are not shared with peers. This also implies that peers cannot use this range in a way that is visible to this VPC, but can re-use this range as long as it is NOT_SHARED from the peer VPC, too."
            ],
            "enum": [
              "PEERING_UNSPECIFIED",
              "FOR_SELF",
              "FOR_PEER",
              "NOT_SHARED"
            ]
          },
          "prefixLength": {
            "description": "Optional. An alternate to ip_cidr_range. Can be set when trying to create an IPv4 reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size. NOTE: For IPv6 this field only works if ip_cidr_range is set as well, and both fields must match. In other words, with IPv6 this field only works as a redundant parameter.",
            "type": "integer",
            "format": "int32"
          },
          "targetCidrRange": {
            "description": "Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the \"10.0.0.0/8\" address space. This can be used to search in other rfc-1918 address spaces like \"172.16.0.0/12\" and \"192.168.0.0/16\" or non-rfc-1918 address spaces used in the VPC.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "description": "Output only. The list of resources that refer to this internal range. Resources that use the internal range for their range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "overlaps": {
            "description": "Optional. Types of resources that are allowed to overlap with the current internal range.",
            "type": "array",
            "items": {
              "type": "string",
              "enumDescriptions": [
                "No overlap overrides.",
                "Allow creation of static routes more specific that the current internal range.",
                "Allow creation of internal ranges that overlap with existing subnets."
              ],
              "enum": [
                "OVERLAP_UNSPECIFIED",
                "OVERLAP_ROUTE_RANGE",
                "OVERLAP_EXISTING_SUBNET_RANGE"
              ]
            }
          },
          "migration": {
            "description": "Optional. Must be present if usage is set to FOR_MIGRATION.",
            "$ref": "Migration"
          },
          "immutable": {
            "description": "Optional. Immutable ranges cannot have their fields modified, except for labels and description.",
            "type": "boolean"
          },
          "allocationOptions": {
            "description": "Optional. Range auto-allocation options, may be set only when auto-allocation is selected by not setting ip_cidr_range (and setting prefix_length).",
            "$ref": "AllocationOptions"
          },
          "excludeCidrRanges": {
            "description": "Optional. ExcludeCidrRanges flag. Specifies a set of CIDR blocks that allows exclusion of particular CIDR ranges from the auto-allocation process, without having to reserve these blocks",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.internalRanges.patch",
      "resource": "projects.locations.internalRanges",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single internal range.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. The name of an internal range. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names",
          "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. Field mask is used to specify the fields to be overwritten in the InternalRange resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "InternalRange",
      "body_schema": {
        "id": "InternalRange",
        "description": "The internal range resource for IPAM operations within a VPC network. Used to represent a private address range along with behavioral characteristics of that range (its usage and peering behavior). Networking resources can link to this range if they are created as belonging to it.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The name of an internal range. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names",
            "type": "string"
          },
          "createTime": {
            "description": "Time when the internal range was created.",
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Time when the internal range was updated.",
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "User-defined labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. A description of this resource.",
            "type": "string"
          },
          "ipCidrRange": {
            "description": "Optional. The IP range that this internal range defines. NOTE: IPv6 ranges are limited to usage=EXTERNAL_TO_VPC and peering=FOR_SELF. NOTE: For IPv6 Ranges this field is compulsory, i.e. the address range must be specified explicitly.",
            "type": "string"
          },
          "network": {
            "description": "Immutable. The URL or resource ID of the network in which to reserve the internal range. The network cannot be deleted if there are any reserved internal ranges referring to it. Legacy networks are not supported. For example: https://www.googleapis.com/compute/v1/projects/{project}/locations/global/networks/{network} projects/{project}/locations/global/networks/{network} {network}",
            "type": "string"
          },
          "usage": {
            "description": "Optional. The type of usage set for this InternalRange.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified usage is allowed in calls which identify the resource by other fields and do not need Usage set to complete. These are, i.e.: GetInternalRange and DeleteInternalRange. Usage needs to be specified explicitly in CreateInternalRange or UpdateInternalRange calls.",
              "A VPC resource can use the reserved CIDR block by associating it with the internal range resource if usage is set to FOR_VPC.",
              "Ranges created with EXTERNAL_TO_VPC cannot be associated with VPC resources and are meant to block out address ranges for various use cases, like for example, usage on-prem, with dynamic route announcements via interconnect.",
              "Ranges created FOR_MIGRATION can be used to lock a CIDR range between a source and target subnet. If usage is set to FOR_MIGRATION, the peering value has to be set to FOR_SELF or default to FOR_SELF when unset."
            ],
            "enum": [
              "USAGE_UNSPECIFIED",
              "FOR_VPC",
              "EXTERNAL_TO_VPC",
              "FOR_MIGRATION"
            ]
          },
          "peering": {
            "description": "Optional. The type of peering set for this internal range.",
            "type": "string",
            "enumDescriptions": [
              "If Peering is left unspecified in CreateInternalRange or UpdateInternalRange, it will be defaulted to FOR_SELF.",
              "This is the default behavior and represents the case that this internal range is intended to be used in the VPC in which it is created and is accessible from its peers. This implies that peers or peers-of-peers cannot use this range.",
              "This behavior can be set when the internal range is being reserved for usage by peers. This means that no resource within the VPC in which it is being created can use this to associate with a VPC resource, but one of the peers can. This represents donating a range for peers to use.",
              "This behavior can be set when the internal range is being reserved for usage by the VPC in which it is created, but not shared with peers. In a sense, it is local to the VPC. This can be used to create internal ranges for various purposes like HTTP_INTERNAL_LOAD_BALANCER or for Interconnect routes that are not shared with peers. This also implies that peers cannot use this range in a way that is visible to this VPC, but can re-use this range as long as it is NOT_SHARED from the peer VPC, too."
            ],
            "enum": [
              "PEERING_UNSPECIFIED",
              "FOR_SELF",
              "FOR_PEER",
              "NOT_SHARED"
            ]
          },
          "prefixLength": {
            "description": "Optional. An alternate to ip_cidr_range. Can be set when trying to create an IPv4 reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size. NOTE: For IPv6 this field only works if ip_cidr_range is set as well, and both fields must match. In other words, with IPv6 this field only works as a redundant parameter.",
            "type": "integer",
            "format": "int32"
          },
          "targetCidrRange": {
            "description": "Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the \"10.0.0.0/8\" address space. This can be used to search in other rfc-1918 address spaces like \"172.16.0.0/12\" and \"192.168.0.0/16\" or non-rfc-1918 address spaces used in the VPC.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "description": "Output only. The list of resources that refer to this internal range. Resources that use the internal range for their range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "overlaps": {
            "description": "Optional. Types of resources that are allowed to overlap with the current internal range.",
            "type": "array",
            "items": {
              "type": "string",
              "enumDescriptions": [
                "No overlap overrides.",
                "Allow creation of static routes more specific that the current internal range.",
                "Allow creation of internal ranges that overlap with existing subnets."
              ],
              "enum": [
                "OVERLAP_UNSPECIFIED",
                "OVERLAP_ROUTE_RANGE",
                "OVERLAP_EXISTING_SUBNET_RANGE"
              ]
            }
          },
          "migration": {
            "description": "Optional. Must be present if usage is set to FOR_MIGRATION.",
            "$ref": "Migration"
          },
          "immutable": {
            "description": "Optional. Immutable ranges cannot have their fields modified, except for labels and description.",
            "type": "boolean"
          },
          "allocationOptions": {
            "description": "Optional. Range auto-allocation options, may be set only when auto-allocation is selected by not setting ip_cidr_range (and setting prefix_length).",
            "$ref": "AllocationOptions"
          },
          "excludeCidrRanges": {
            "description": "Optional. ExcludeCidrRanges flag. Specifies a set of CIDR blocks that allows exclusion of particular CIDR ranges from the auto-allocation process, without having to reserve these blocks",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.internalRanges.delete",
      "resource": "projects.locations.internalRanges",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single internal range.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the internal range to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.internalRanges.setIamPolicy",
      "resource": "projects.locations.internalRanges",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.internalRanges.getIamPolicy",
      "resource": "projects.locations.internalRanges",
      "action": "getIamPolicy",
      "http_method": "GET",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.internalRanges.testIamPermissions",
      "resource": "projects.locations.internalRanges",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.regionalEndpoints.list",
      "resource": "projects.locations.regionalEndpoints",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/regionalEndpoints",
      "description": "Lists RegionalEndpoints in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name of the RegionalEndpoint.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "A filter expression that filters the results listed in the response.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Sort the results by a certain order.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListRegionalEndpointsResponse"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.regionalEndpoints.get",
      "resource": "projects.locations.regionalEndpoints",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single RegionalEndpoint.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the RegionalEndpoint resource to get. Format: `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/regionalEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "RegionalEndpoint"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.regionalEndpoints.create",
      "resource": "projects.locations.regionalEndpoints",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/regionalEndpoints",
      "description": "Creates a new RegionalEndpoint in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource's name of the RegionalEndpoint.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "regionalEndpointId": {
          "description": "Required. Unique id of the Regional Endpoint to be created. @pattern: ^[-a-z0-9](?:[-a-z0-9]{0,44})[a-z0-9]$",
          "location": "query",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "RegionalEndpoint",
      "body_schema": {
        "id": "RegionalEndpoint",
        "description": "The RegionalEndpoint resource.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The name of a RegionalEndpoint. Pattern: `projects/{project}/locations/{location}/regionalEndpoints/^[-a-z0-9](?:[-a-z0-9]{0,44})[a-z0-9]$`.",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Time when the RegionalEndpoint was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the RegionalEndpoint was updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "User-defined labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. A description of this resource.",
            "type": "string"
          },
          "targetGoogleApi": {
            "description": "Required. The service endpoint this private regional endpoint connects to. Format: `{apiname}.{region}.p.rep.googleapis.com` Example: \"cloudkms.us-central1.p.rep.googleapis.com\".",
            "type": "string"
          },
          "network": {
            "description": "The name of the VPC network for this private regional endpoint. Format: `projects/{project}/global/networks/{network}`",
            "type": "string"
          },
          "subnetwork": {
            "description": "The name of the subnetwork from which the IP address will be allocated. Format: `projects/{project}/regions/{region}/subnetworks/{subnetwork}`",
            "type": "string"
          },
          "accessType": {
            "description": "Required. The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable global access.",
            "type": "string",
            "enumDescriptions": [
              "An invalid type as the default case.",
              "This regional endpoint is accessible from all regions.",
              "This regional endpoint is only accessible from the same region where it resides."
            ],
            "enum": [
              "ACCESS_TYPE_UNSPECIFIED",
              "GLOBAL",
              "REGIONAL"
            ]
          },
          "pscForwardingRule": {
            "description": "Output only. The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format: `//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}`",
            "readOnly": true,
            "type": "string"
          },
          "ipAddress": {
            "description": "Output only. The literal IP address of the PSC Forwarding Rule created on behalf of the customer. This field is deprecated. Use address instead.",
            "readOnly": true,
            "deprecated": true,
            "type": "string"
          },
          "address": {
            "description": "Optional. The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of the following formats: * IPv4 address as in `10.0.0.1` * Address resource URI as in `projects/{project}/regions/{region}/addresses/{address_name}` for an IPv4 or IPv6 address.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "networkconnectivity.projects.locations.regionalEndpoints.delete",
      "resource": "projects.locations.regionalEndpoints",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single RegionalEndpoint.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the RegionalEndpoint to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/regionalEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    }
  ]
}