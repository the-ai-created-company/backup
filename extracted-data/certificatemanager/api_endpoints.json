{
  "service": "certificatemanager",
  "version": "v1",
  "base_url": "https://certificatemanager.googleapis.com/",
  "total_endpoints": 36,
  "endpoints": [
    {
      "operation_id": "certificatemanager.projects.locations.list",
      "resource": "projects.locations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/locations",
      "description": "Lists information about the supported locations for this service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource that owns the locations collection, if applicable.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return. If not set, the service selects a default.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "extraLocationTypes": {
          "description": "Optional. A list of extra location types that should be used as conditions for controlling the visibility of the locations.",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListLocationsResponse"
    },
    {
      "operation_id": "certificatemanager.projects.locations.get",
      "resource": "projects.locations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets information about a location.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Resource name for the location.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Location"
    },
    {
      "operation_id": "certificatemanager.projects.locations.operations.list",
      "resource": "projects.locations.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListOperationsResponse"
    },
    {
      "operation_id": "certificatemanager.projects.locations.operations.get",
      "resource": "projects.locations.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.operations.delete",
      "resource": "projects.locations.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "certificatemanager.projects.locations.operations.cancel",
      "resource": "projects.locations.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CancelOperationRequest",
      "body_schema": {
        "id": "CancelOperationRequest",
        "description": "The request message for Operations.CancelOperation.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificates.list",
      "resource": "projects.locations.certificates",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/certificates",
      "description": "Lists Certificates in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. Maximum number of certificates to return per call.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The value returned by the last `ListCertificatesResponse`. Indicates that this is a continuation of a prior `ListCertificates` call, and that the system should return the next page of data.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Optional. Filter expression to restrict the Certificates returned.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Optional. A list of Certificate field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix `\" desc\"`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListCertificatesResponse"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificates.get",
      "resource": "projects.locations.certificates",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single Certificate.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the certificate to describe. Must be in the format `projects/*/locations/*/certificates/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Certificate"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificates.create",
      "resource": "projects.locations.certificates",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/certificates",
      "description": "Creates a new Certificate in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource of the certificate. Must be in the format `projects/*/locations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "certificateId": {
          "description": "Required. A user-provided name of the certificate.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Certificate",
      "body_schema": {
        "id": "Certificate",
        "description": "Defines TLS certificate.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
            "type": "string"
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a certificate.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a Certificate.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The last update timestamp of a Certificate.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a Certificate.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "selfManaged": {
            "description": "If set, defines data of a self-managed certificate.",
            "$ref": "SelfManagedCertificate"
          },
          "managed": {
            "description": "If set, contains configuration and state of a managed certificate.",
            "$ref": "ManagedCertificate"
          },
          "sanDnsnames": {
            "description": "Output only. The list of Subject Alternative Names of dnsName type defined in the certificate (see RFC 5280 4.2.1.6). Managed certificates that haven't been provisioned yet have this field populated with a value of the managed.domains field.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pemCertificate": {
            "description": "Output only. The PEM-encoded certificate chain.",
            "readOnly": true,
            "type": "string"
          },
          "expireTime": {
            "description": "Output only. The expiry timestamp of a Certificate.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "scope": {
            "description": "Optional. Immutable. The scope of the certificate.",
            "type": "string",
            "enumDescriptions": [
              "Use the DEFAULT scope if you plan to use the certificate with global external Application Load Balancer, global external proxy Network Load Balancer, or any of the regional Google Cloud services.",
              "Use the EDGE_CACHE scope if you plan to use the certificate with Media CDN. The certificates are served from Edge Points of Presence. See https://cloud.google.com/vpc/docs/edge-locations.",
              "Use the ALL_REGIONS scope if you plan to use the certificate with cross-region internal Application Load Balancer. The certificates are served from all Google Cloud regions. See https://cloud.google.com/compute/docs/regions-zones.",
              "Associated with certificates used as client certificates in Backend mTLS."
            ],
            "enum": [
              "DEFAULT",
              "EDGE_CACHE",
              "ALL_REGIONS",
              "CLIENT_AUTH"
            ]
          },
          "usedBy": {
            "description": "Output only. The list of resources that use this Certificate.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "UsedBy"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificates.patch",
      "resource": "projects.locations.certificates",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a Certificate.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "Certificate",
      "body_schema": {
        "id": "Certificate",
        "description": "Defines TLS certificate.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
            "type": "string"
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a certificate.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a Certificate.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The last update timestamp of a Certificate.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a Certificate.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "selfManaged": {
            "description": "If set, defines data of a self-managed certificate.",
            "$ref": "SelfManagedCertificate"
          },
          "managed": {
            "description": "If set, contains configuration and state of a managed certificate.",
            "$ref": "ManagedCertificate"
          },
          "sanDnsnames": {
            "description": "Output only. The list of Subject Alternative Names of dnsName type defined in the certificate (see RFC 5280 4.2.1.6). Managed certificates that haven't been provisioned yet have this field populated with a value of the managed.domains field.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pemCertificate": {
            "description": "Output only. The PEM-encoded certificate chain.",
            "readOnly": true,
            "type": "string"
          },
          "expireTime": {
            "description": "Output only. The expiry timestamp of a Certificate.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "scope": {
            "description": "Optional. Immutable. The scope of the certificate.",
            "type": "string",
            "enumDescriptions": [
              "Use the DEFAULT scope if you plan to use the certificate with global external Application Load Balancer, global external proxy Network Load Balancer, or any of the regional Google Cloud services.",
              "Use the EDGE_CACHE scope if you plan to use the certificate with Media CDN. The certificates are served from Edge Points of Presence. See https://cloud.google.com/vpc/docs/edge-locations.",
              "Use the ALL_REGIONS scope if you plan to use the certificate with cross-region internal Application Load Balancer. The certificates are served from all Google Cloud regions. See https://cloud.google.com/compute/docs/regions-zones.",
              "Associated with certificates used as client certificates in Backend mTLS."
            ],
            "enum": [
              "DEFAULT",
              "EDGE_CACHE",
              "ALL_REGIONS",
              "CLIENT_AUTH"
            ]
          },
          "usedBy": {
            "description": "Output only. The list of resources that use this Certificate.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "UsedBy"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificates.delete",
      "resource": "projects.locations.certificates",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single Certificate.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the certificate to delete. Must be in the format `projects/*/locations/*/certificates/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateMaps.list",
      "resource": "projects.locations.certificateMaps",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/certificateMaps",
      "description": "Lists CertificateMaps in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The project and location from which the certificate maps should be listed, specified in the format `projects/*/locations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. Maximum number of certificate maps to return per call.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The value returned by the last `ListCertificateMapsResponse`. Indicates that this is a continuation of a prior `ListCertificateMaps` call, and that the system should return the next page of data.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Optional. Filter expression to restrict the Certificates Maps returned.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Optional. A list of Certificate Map field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix `\" desc\"`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListCertificateMapsResponse"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateMaps.get",
      "resource": "projects.locations.certificateMaps",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single CertificateMap.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the certificate map to describe. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "CertificateMap"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateMaps.create",
      "resource": "projects.locations.certificateMaps",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/certificateMaps",
      "description": "Creates a new CertificateMap in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource of the certificate map. Must be in the format `projects/*/locations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "certificateMapId": {
          "description": "Required. A user-provided name of the certificate map.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "CertificateMap",
      "body_schema": {
        "id": "CertificateMap",
        "description": "Defines a collection of certificate configurations.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.",
            "type": "string"
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a certificate map.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a Certificate Map.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The update timestamp of a Certificate Map.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a Certificate Map.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "gclbTargets": {
            "description": "Output only. A list of GCLB targets that use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GclbTarget"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateMaps.patch",
      "resource": "projects.locations.certificateMaps",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a CertificateMap.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "CertificateMap",
      "body_schema": {
        "id": "CertificateMap",
        "description": "Defines a collection of certificate configurations.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.",
            "type": "string"
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a certificate map.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a Certificate Map.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The update timestamp of a Certificate Map.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a Certificate Map.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "gclbTargets": {
            "description": "Output only. A list of GCLB targets that use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GclbTarget"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateMaps.delete",
      "resource": "projects.locations.certificateMaps",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single CertificateMap. A Certificate Map can't be deleted if it contains Certificate Map Entries. Remove all the entries from the map before calling this method.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the certificate map to delete. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.list",
      "resource": "projects.locations.certificateMaps.certificateMapEntries",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/certificateMapEntries",
      "description": "Lists CertificateMapEntries in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The project, location and certificate map from which the certificate map entries should be listed, specified in the format `projects/*/locations/*/certificateMaps/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. Maximum number of certificate map entries to return. The service may return fewer than this value. If unspecified, at most 50 certificate map entries will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The value returned by the last `ListCertificateMapEntriesResponse`. Indicates that this is a continuation of a prior `ListCertificateMapEntries` call, and that the system should return the next page of data.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Optional. Filter expression to restrict the returned Certificate Map Entries.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Optional. A list of Certificate Map Entry field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix `\" desc\"`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListCertificateMapEntriesResponse"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.get",
      "resource": "projects.locations.certificateMaps.certificateMapEntries",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single CertificateMapEntry.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the certificate map entry to describe. Must be in the format `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "CertificateMapEntry"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.create",
      "resource": "projects.locations.certificateMaps.certificateMapEntries",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/certificateMapEntries",
      "description": "Creates a new CertificateMapEntry in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource of the certificate map entry. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "certificateMapEntryId": {
          "description": "Required. A user-provided name of the certificate map entry.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "CertificateMapEntry",
      "body_schema": {
        "id": "CertificateMapEntry",
        "description": "Defines a certificate map entry.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
            "type": "string"
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a certificate map entry.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a Certificate Map Entry.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The update timestamp of a Certificate Map Entry.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a Certificate Map Entry.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "hostname": {
            "description": "A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.",
            "type": "string"
          },
          "matcher": {
            "description": "A predefined matcher for particular cases, other than SNI selection.",
            "type": "string",
            "enumDescriptions": [
              "A matcher has't been recognized.",
              "A primary certificate that is served when SNI wasn't specified in the request or SNI couldn't be found in the map."
            ],
            "enum": [
              "MATCHER_UNSPECIFIED",
              "PRIMARY"
            ]
          },
          "certificates": {
            "description": "Optional. A set of Certificates defines for the given `hostname`. There can be defined up to four certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*/locations/*/certificates/*`.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "state": {
            "description": "Output only. A serving state of this Certificate Map Entry.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The status is undefined.",
              "The configuration is serving.",
              "Update is in progress. Some frontends may serve this configuration."
            ],
            "enum": [
              "SERVING_STATE_UNSPECIFIED",
              "ACTIVE",
              "PENDING"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.patch",
      "resource": "projects.locations.certificateMaps.certificateMapEntries",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a CertificateMapEntry.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "CertificateMapEntry",
      "body_schema": {
        "id": "CertificateMapEntry",
        "description": "Defines a certificate map entry.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
            "type": "string"
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a certificate map entry.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a Certificate Map Entry.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The update timestamp of a Certificate Map Entry.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a Certificate Map Entry.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "hostname": {
            "description": "A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.",
            "type": "string"
          },
          "matcher": {
            "description": "A predefined matcher for particular cases, other than SNI selection.",
            "type": "string",
            "enumDescriptions": [
              "A matcher has't been recognized.",
              "A primary certificate that is served when SNI wasn't specified in the request or SNI couldn't be found in the map."
            ],
            "enum": [
              "MATCHER_UNSPECIFIED",
              "PRIMARY"
            ]
          },
          "certificates": {
            "description": "Optional. A set of Certificates defines for the given `hostname`. There can be defined up to four certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*/locations/*/certificates/*`.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "state": {
            "description": "Output only. A serving state of this Certificate Map Entry.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The status is undefined.",
              "The configuration is serving.",
              "Update is in progress. Some frontends may serve this configuration."
            ],
            "enum": [
              "SERVING_STATE_UNSPECIFIED",
              "ACTIVE",
              "PENDING"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.delete",
      "resource": "projects.locations.certificateMaps.certificateMapEntries",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single CertificateMapEntry.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the certificate map entry to delete. Must be in the format `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.dnsAuthorizations.list",
      "resource": "projects.locations.dnsAuthorizations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/dnsAuthorizations",
      "description": "Lists DnsAuthorizations in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The project and location from which the dns authorizations should be listed, specified in the format `projects/*/locations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. Maximum number of dns authorizations to return per call.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The value returned by the last `ListDnsAuthorizationsResponse`. Indicates that this is a continuation of a prior `ListDnsAuthorizations` call, and that the system should return the next page of data.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Optional. Filter expression to restrict the Dns Authorizations returned.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Optional. A list of Dns Authorization field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix `\" desc\"`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListDnsAuthorizationsResponse"
    },
    {
      "operation_id": "certificatemanager.projects.locations.dnsAuthorizations.get",
      "resource": "projects.locations.dnsAuthorizations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single DnsAuthorization.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the dns authorization to describe. Must be in the format `projects/*/locations/*/dnsAuthorizations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "DnsAuthorization"
    },
    {
      "operation_id": "certificatemanager.projects.locations.dnsAuthorizations.create",
      "resource": "projects.locations.dnsAuthorizations",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/dnsAuthorizations",
      "description": "Creates a new DnsAuthorization in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource of the dns authorization. Must be in the format `projects/*/locations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "dnsAuthorizationId": {
          "description": "Required. A user-provided name of the dns authorization.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "DnsAuthorization",
      "body_schema": {
        "id": "DnsAuthorization",
        "description": "A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a DnsAuthorization.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The last update timestamp of a DnsAuthorization.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a DnsAuthorization.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a DnsAuthorization.",
            "type": "string"
          },
          "domain": {
            "description": "Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`.",
            "type": "string"
          },
          "dnsResourceRecord": {
            "description": "Output only. DNS Resource Record that needs to be added to DNS configuration.",
            "readOnly": true,
            "$ref": "DnsResourceRecord"
          },
          "type": {
            "description": "Optional. Immutable. Type of DnsAuthorization. If unset during resource creation the following default will be used: - in location `global`: FIXED_RECORD, - in other locations: PER_PROJECT_RECORD.",
            "type": "string",
            "enumDescriptions": [
              "Type is unspecified.",
              "FIXED_RECORD DNS authorization uses DNS-01 validation method.",
              "PER_PROJECT_RECORD DNS authorization allows for independent management of Google-managed certificates with DNS authorization across multiple projects."
            ],
            "enum": [
              "TYPE_UNSPECIFIED",
              "FIXED_RECORD",
              "PER_PROJECT_RECORD"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.dnsAuthorizations.patch",
      "resource": "projects.locations.dnsAuthorizations",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a DnsAuthorization.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "DnsAuthorization",
      "body_schema": {
        "id": "DnsAuthorization",
        "description": "A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a DnsAuthorization.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The last update timestamp of a DnsAuthorization.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a DnsAuthorization.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a DnsAuthorization.",
            "type": "string"
          },
          "domain": {
            "description": "Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`.",
            "type": "string"
          },
          "dnsResourceRecord": {
            "description": "Output only. DNS Resource Record that needs to be added to DNS configuration.",
            "readOnly": true,
            "$ref": "DnsResourceRecord"
          },
          "type": {
            "description": "Optional. Immutable. Type of DnsAuthorization. If unset during resource creation the following default will be used: - in location `global`: FIXED_RECORD, - in other locations: PER_PROJECT_RECORD.",
            "type": "string",
            "enumDescriptions": [
              "Type is unspecified.",
              "FIXED_RECORD DNS authorization uses DNS-01 validation method.",
              "PER_PROJECT_RECORD DNS authorization allows for independent management of Google-managed certificates with DNS authorization across multiple projects."
            ],
            "enum": [
              "TYPE_UNSPECIFIED",
              "FIXED_RECORD",
              "PER_PROJECT_RECORD"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.dnsAuthorizations.delete",
      "resource": "projects.locations.dnsAuthorizations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single DnsAuthorization.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the dns authorization to delete. Must be in the format `projects/*/locations/*/dnsAuthorizations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateIssuanceConfigs.list",
      "resource": "projects.locations.certificateIssuanceConfigs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/certificateIssuanceConfigs",
      "description": "Lists CertificateIssuanceConfigs in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. Maximum number of certificate configs to return per call.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The value returned by the last `ListCertificateIssuanceConfigsResponse`. Indicates that this is a continuation of a prior `ListCertificateIssuanceConfigs` call, and that the system should return the next page of data.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Optional. Filter expression to restrict the Certificates Configs returned.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Optional. A list of Certificate Config field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix `\" desc\"`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListCertificateIssuanceConfigsResponse"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateIssuanceConfigs.get",
      "resource": "projects.locations.certificateIssuanceConfigs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single CertificateIssuanceConfig.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the certificate issuance config to describe. Must be in the format `projects/*/locations/*/certificateIssuanceConfigs/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateIssuanceConfigs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "CertificateIssuanceConfig"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateIssuanceConfigs.create",
      "resource": "projects.locations.certificateIssuanceConfigs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/certificateIssuanceConfigs",
      "description": "Creates a new CertificateIssuanceConfig in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource of the certificate issuance config. Must be in the format `projects/*/locations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "certificateIssuanceConfigId": {
          "description": "Required. A user-provided name of the certificate config.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "CertificateIssuanceConfig",
      "body_schema": {
        "id": "CertificateIssuanceConfig",
        "description": "CertificateIssuanceConfig specifies how to issue and manage a certificate.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*/locations/*/certificateIssuanceConfigs/*`.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a CertificateIssuanceConfig.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The last update timestamp of a CertificateIssuanceConfig.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a CertificateIssuanceConfig.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a CertificateIssuanceConfig.",
            "type": "string"
          },
          "certificateAuthorityConfig": {
            "description": "Required. The CA that issues the workload certificate. It includes the CA address, type, authentication to CA service, etc.",
            "$ref": "CertificateAuthorityConfig"
          },
          "lifetime": {
            "description": "Required. Workload certificate lifetime requested.",
            "type": "string",
            "format": "google-duration"
          },
          "rotationWindowPercentage": {
            "description": "Required. Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "keyAlgorithm": {
            "description": "Required. The key algorithm to use when generating the private key.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified key algorithm.",
              "Specifies RSA with a 2048-bit modulus.",
              "Specifies ECDSA with curve P256."
            ],
            "enum": [
              "KEY_ALGORITHM_UNSPECIFIED",
              "RSA_2048",
              "ECDSA_P256"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateIssuanceConfigs.patch",
      "resource": "projects.locations.certificateIssuanceConfigs",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a CertificateIssuanceConfig.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*/locations/*/certificateIssuanceConfigs/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateIssuanceConfigs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "CertificateIssuanceConfig",
      "body_schema": {
        "id": "CertificateIssuanceConfig",
        "description": "CertificateIssuanceConfig specifies how to issue and manage a certificate.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*/locations/*/certificateIssuanceConfigs/*`.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a CertificateIssuanceConfig.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The last update timestamp of a CertificateIssuanceConfig.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a CertificateIssuanceConfig.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a CertificateIssuanceConfig.",
            "type": "string"
          },
          "certificateAuthorityConfig": {
            "description": "Required. The CA that issues the workload certificate. It includes the CA address, type, authentication to CA service, etc.",
            "$ref": "CertificateAuthorityConfig"
          },
          "lifetime": {
            "description": "Required. Workload certificate lifetime requested.",
            "type": "string",
            "format": "google-duration"
          },
          "rotationWindowPercentage": {
            "description": "Required. Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "keyAlgorithm": {
            "description": "Required. The key algorithm to use when generating the private key.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified key algorithm.",
              "Specifies RSA with a 2048-bit modulus.",
              "Specifies ECDSA with curve P256."
            ],
            "enum": [
              "KEY_ALGORITHM_UNSPECIFIED",
              "RSA_2048",
              "ECDSA_P256"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.certificateIssuanceConfigs.delete",
      "resource": "projects.locations.certificateIssuanceConfigs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single CertificateIssuanceConfig.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the certificate issuance config to delete. Must be in the format `projects/*/locations/*/certificateIssuanceConfigs/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/certificateIssuanceConfigs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.trustConfigs.list",
      "resource": "projects.locations.trustConfigs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/trustConfigs",
      "description": "Lists TrustConfigs in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The project and location from which the TrustConfigs should be listed, specified in the format `projects/*/locations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. Maximum number of TrustConfigs to return per call.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The value returned by the last `ListTrustConfigsResponse`. Indicates that this is a continuation of a prior `ListTrustConfigs` call, and that the system should return the next page of data.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Optional. Filter expression to restrict the TrustConfigs returned.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Optional. A list of TrustConfig field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix `\" desc\"`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListTrustConfigsResponse"
    },
    {
      "operation_id": "certificatemanager.projects.locations.trustConfigs.get",
      "resource": "projects.locations.trustConfigs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single TrustConfig.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the TrustConfig to describe. Must be in the format `projects/*/locations/*/trustConfigs/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/trustConfigs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TrustConfig"
    },
    {
      "operation_id": "certificatemanager.projects.locations.trustConfigs.create",
      "resource": "projects.locations.trustConfigs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/trustConfigs",
      "description": "Creates a new TrustConfig in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource of the TrustConfig. Must be in the format `projects/*/locations/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "trustConfigId": {
          "description": "Required. A user-provided name of the TrustConfig. Must match the regexp `[a-z0-9-]{1,63}`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "TrustConfig",
      "body_schema": {
        "id": "TrustConfig",
        "description": "Defines a trust config.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a TrustConfig.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The last update timestamp of a TrustConfig.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a TrustConfig.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a TrustConfig.",
            "type": "string"
          },
          "etag": {
            "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          },
          "trustStores": {
            "description": "Optional. Set of trust stores to perform validation against. This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only one TrustStore specified is currently allowed.",
            "type": "array",
            "items": {
              "$ref": "TrustStore"
            }
          },
          "allowlistedCertificates": {
            "description": "Optional. A certificate matching an allowlisted certificate is always considered valid as long as the certificate is parseable, proof of private key possession is established, and constraints on the certificate's SAN field are met.",
            "type": "array",
            "items": {
              "$ref": "AllowlistedCertificate"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.trustConfigs.patch",
      "resource": "projects.locations.trustConfigs",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a TrustConfig.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/trustConfigs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "TrustConfig",
      "body_schema": {
        "id": "TrustConfig",
        "description": "Defines a trust config.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The creation timestamp of a TrustConfig.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. The last update timestamp of a TrustConfig.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. Set of labels associated with a TrustConfig.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. One or more paragraphs of text description of a TrustConfig.",
            "type": "string"
          },
          "etag": {
            "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          },
          "trustStores": {
            "description": "Optional. Set of trust stores to perform validation against. This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only one TrustStore specified is currently allowed.",
            "type": "array",
            "items": {
              "$ref": "TrustStore"
            }
          },
          "allowlistedCertificates": {
            "description": "Optional. A certificate matching an allowlisted certificate is always considered valid as long as the certificate is parseable, proof of private key possession is established, and constraints on the certificate's SAN field are met.",
            "type": "array",
            "items": {
              "$ref": "AllowlistedCertificate"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "certificatemanager.projects.locations.trustConfigs.delete",
      "resource": "projects.locations.trustConfigs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single TrustConfig.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A name of the TrustConfig to delete. Must be in the format `projects/*/locations/*/trustConfigs/*`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/trustConfigs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "etag": {
          "description": "Optional. The current etag of the TrustConfig. If an etag is provided and does not match the current etag of the resource, deletion will be blocked and an ABORTED error will be returned.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    }
  ]
}