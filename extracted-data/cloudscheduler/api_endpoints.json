{
  "service": "cloudscheduler",
  "version": "v1",
  "base_url": "https://cloudscheduler.googleapis.com/",
  "total_endpoints": 14,
  "endpoints": [
    {
      "operation_id": "cloudscheduler.projects.locations.list",
      "resource": "projects.locations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/locations",
      "description": "Lists information about the supported locations for this service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource that owns the locations collection, if applicable.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return. If not set, the service selects a default.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "extraLocationTypes": {
          "description": "Optional. A list of extra location types that should be used as conditions for controlling the visibility of the locations.",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListLocationsResponse"
    },
    {
      "operation_id": "cloudscheduler.projects.locations.get",
      "resource": "projects.locations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets information about a location.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Resource name for the location.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Location"
    },
    {
      "operation_id": "cloudscheduler.projects.locations.jobs.list",
      "resource": "projects.locations.jobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/jobs",
      "description": "Lists jobs.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Requested page size. The maximum page size is 500. If unspecified, the page size will be the maximum. Fewer jobs than requested might be returned, even if more jobs exist; use next_page_token to determine if more jobs exist.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A token identifying a page of results the server will return. To request the first page results, page_token must be empty. To request the next page of results, page_token must be the value of next_page_token returned from the previous call to ListJobs.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListJobsResponse"
    },
    {
      "operation_id": "cloudscheduler.projects.locations.jobs.get",
      "resource": "projects.locations.jobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a job.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Job"
    },
    {
      "operation_id": "cloudscheduler.projects.locations.jobs.create",
      "resource": "projects.locations.jobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/jobs",
      "description": "Creates a job.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Job",
      "body_schema": {
        "id": "Job",
        "description": "Configuration for a job. The maximum allowed size for a job is 1MB.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Optionally caller-specified in CreateJob, after which it becomes output only. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the job's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `JOB_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optionally caller-specified in CreateJob or UpdateJob. A human-readable description for the job. This string must not contain more than 500 characters.",
            "type": "string"
          },
          "pubsubTarget": {
            "description": "Pub/Sub target.",
            "$ref": "PubsubTarget"
          },
          "appEngineHttpTarget": {
            "description": "App Engine HTTP target.",
            "$ref": "AppEngineHttpTarget"
          },
          "httpTarget": {
            "description": "HTTP target.",
            "$ref": "HttpTarget"
          },
          "schedule": {
            "description": "Required, except when used with UpdateJob. Describes the schedule on which the job will be executed. The schedule can be either of the following types: * [Crontab](https://en.wikipedia.org/wiki/Cron#Overview) * English-like [schedule](https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules) As a general rule, execution `n + 1` of a job will not begin until execution `n` has finished. Cloud Scheduler will never allow two simultaneously outstanding executions. For example, this implies that if the `n+1`th execution is scheduled to run at 16:00 but the `n`th execution takes until 16:15, the `n+1`th execution will not start until `16:15`. A scheduled start time will be delayed if the previous execution has not ended when its scheduled time occurs. If retry_count > 0 and a job attempt fails, the job will be tried a total of retry_count times, with exponential backoff, until the next scheduled start time. If retry_count is 0, a job attempt will not be retried if it fails. Instead the Cloud Scheduler system will wait for the next scheduled execution time. Setting retry_count to 0 does not prevent failed jobs from running according to schedule after the failure.",
            "type": "string"
          },
          "timeZone": {
            "description": "Specifies the time zone to be used in interpreting schedule. The value of this field must be a time zone name from the [tz database](http://en.wikipedia.org/wiki/Tz_database). Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string \"utc\". If a time zone is not specified, the default will be in UTC (also known as GMT).",
            "type": "string"
          },
          "userUpdateTime": {
            "description": "Output only. The creation time of the job.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "state": {
            "description": "Output only. State of the job.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Unspecified state.",
              "The job is executing normally.",
              "The job is paused by the user. It will not execute. A user can intentionally pause the job using PauseJobRequest.",
              "The job is disabled by the system due to error. The user cannot directly set a job to be disabled.",
              "The job state resulting from a failed CloudScheduler.UpdateJob operation. To recover a job from this state, retry CloudScheduler.UpdateJob until a successful response is received."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ENABLED",
              "PAUSED",
              "DISABLED",
              "UPDATE_FAILED"
            ]
          },
          "status": {
            "description": "Output only. The response from the target for the last attempted execution.",
            "readOnly": true,
            "$ref": "Status"
          },
          "scheduleTime": {
            "description": "Output only. The next time the job is scheduled. Note that this may be a retry of a previously failed attempt or the next execution time according to the schedule.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "lastAttemptTime": {
            "description": "Output only. The time the last job attempt started.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "retryConfig": {
            "description": "Settings that determine the retry behavior.",
            "$ref": "RetryConfig"
          },
          "attemptDeadline": {
            "description": "The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled and the attempt is marked as a `DEADLINE_EXCEEDED` failure. The failed attempt can be viewed in execution logs. Cloud Scheduler will retry the job according to the RetryConfig. The default and the allowed values depend on the type of target: * For HTTP targets, the default is 3 minutes. The deadline must be in the interval [15 seconds, 30 minutes]. * For App Engine HTTP targets, 0 indicates that the request has the default deadline. The default deadline depends on the scaling type of the service: 10 minutes for standard apps with automatic scaling, 24 hours for standard apps with manual and basic scaling, and 60 minutes for flex apps. If the request deadline is set, it must be in the interval [15 seconds, 24 hours 15 seconds]. * For Pub/Sub targets, this field is ignored.",
            "type": "string",
            "format": "google-duration"
          },
          "satisfiesPzs": {
            "description": "Output only. Whether or not this Job satisfies the requirements of physical zone separation",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Job"
    },
    {
      "operation_id": "cloudscheduler.projects.locations.jobs.patch",
      "resource": "projects.locations.jobs",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a job. If successful, the updated Job is returned. If the job does not exist, `NOT_FOUND` is returned. If UpdateJob does not successfully return, it is possible for the job to be in an Job.State.UPDATE_FAILED state. A job in this state may not be executed. If this happens, retry the UpdateJob request until a successful response is received.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Optionally caller-specified in CreateJob, after which it becomes output only. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the job's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `JOB_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters.",
          "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "A mask used to specify which fields of the job are being updated.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "Job",
      "body_schema": {
        "id": "Job",
        "description": "Configuration for a job. The maximum allowed size for a job is 1MB.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Optionally caller-specified in CreateJob, after which it becomes output only. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the job's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `JOB_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optionally caller-specified in CreateJob or UpdateJob. A human-readable description for the job. This string must not contain more than 500 characters.",
            "type": "string"
          },
          "pubsubTarget": {
            "description": "Pub/Sub target.",
            "$ref": "PubsubTarget"
          },
          "appEngineHttpTarget": {
            "description": "App Engine HTTP target.",
            "$ref": "AppEngineHttpTarget"
          },
          "httpTarget": {
            "description": "HTTP target.",
            "$ref": "HttpTarget"
          },
          "schedule": {
            "description": "Required, except when used with UpdateJob. Describes the schedule on which the job will be executed. The schedule can be either of the following types: * [Crontab](https://en.wikipedia.org/wiki/Cron#Overview) * English-like [schedule](https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules) As a general rule, execution `n + 1` of a job will not begin until execution `n` has finished. Cloud Scheduler will never allow two simultaneously outstanding executions. For example, this implies that if the `n+1`th execution is scheduled to run at 16:00 but the `n`th execution takes until 16:15, the `n+1`th execution will not start until `16:15`. A scheduled start time will be delayed if the previous execution has not ended when its scheduled time occurs. If retry_count > 0 and a job attempt fails, the job will be tried a total of retry_count times, with exponential backoff, until the next scheduled start time. If retry_count is 0, a job attempt will not be retried if it fails. Instead the Cloud Scheduler system will wait for the next scheduled execution time. Setting retry_count to 0 does not prevent failed jobs from running according to schedule after the failure.",
            "type": "string"
          },
          "timeZone": {
            "description": "Specifies the time zone to be used in interpreting schedule. The value of this field must be a time zone name from the [tz database](http://en.wikipedia.org/wiki/Tz_database). Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string \"utc\". If a time zone is not specified, the default will be in UTC (also known as GMT).",
            "type": "string"
          },
          "userUpdateTime": {
            "description": "Output only. The creation time of the job.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "state": {
            "description": "Output only. State of the job.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Unspecified state.",
              "The job is executing normally.",
              "The job is paused by the user. It will not execute. A user can intentionally pause the job using PauseJobRequest.",
              "The job is disabled by the system due to error. The user cannot directly set a job to be disabled.",
              "The job state resulting from a failed CloudScheduler.UpdateJob operation. To recover a job from this state, retry CloudScheduler.UpdateJob until a successful response is received."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ENABLED",
              "PAUSED",
              "DISABLED",
              "UPDATE_FAILED"
            ]
          },
          "status": {
            "description": "Output only. The response from the target for the last attempted execution.",
            "readOnly": true,
            "$ref": "Status"
          },
          "scheduleTime": {
            "description": "Output only. The next time the job is scheduled. Note that this may be a retry of a previously failed attempt or the next execution time according to the schedule.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "lastAttemptTime": {
            "description": "Output only. The time the last job attempt started.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "retryConfig": {
            "description": "Settings that determine the retry behavior.",
            "$ref": "RetryConfig"
          },
          "attemptDeadline": {
            "description": "The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled and the attempt is marked as a `DEADLINE_EXCEEDED` failure. The failed attempt can be viewed in execution logs. Cloud Scheduler will retry the job according to the RetryConfig. The default and the allowed values depend on the type of target: * For HTTP targets, the default is 3 minutes. The deadline must be in the interval [15 seconds, 30 minutes]. * For App Engine HTTP targets, 0 indicates that the request has the default deadline. The default deadline depends on the scaling type of the service: 10 minutes for standard apps with automatic scaling, 24 hours for standard apps with manual and basic scaling, and 60 minutes for flex apps. If the request deadline is set, it must be in the interval [15 seconds, 24 hours 15 seconds]. * For Pub/Sub targets, this field is ignored.",
            "type": "string",
            "format": "google-duration"
          },
          "satisfiesPzs": {
            "description": "Output only. Whether or not this Job satisfies the requirements of physical zone separation",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Job"
    },
    {
      "operation_id": "cloudscheduler.projects.locations.jobs.delete",
      "resource": "projects.locations.jobs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a job.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "cloudscheduler.projects.locations.jobs.pause",
      "resource": "projects.locations.jobs",
      "action": "pause",
      "http_method": "POST",
      "path_template": "v1/{+name}:pause",
      "description": "Pauses a job. If a job is paused then the system will stop executing the job until it is re-enabled via ResumeJob. The state of the job is stored in state; if paused it will be set to Job.State.PAUSED. A job must be in Job.State.ENABLED to be paused.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "PauseJobRequest",
      "body_schema": {
        "id": "PauseJobRequest",
        "description": "Request message for PauseJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Job"
    },
    {
      "operation_id": "cloudscheduler.projects.locations.jobs.resume",
      "resource": "projects.locations.jobs",
      "action": "resume",
      "http_method": "POST",
      "path_template": "v1/{+name}:resume",
      "description": "Resume a job. This method reenables a job after it has been Job.State.PAUSED. The state of a job is stored in Job.state; after calling this method it will be set to Job.State.ENABLED. A job must be in Job.State.PAUSED to be resumed.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ResumeJobRequest",
      "body_schema": {
        "id": "ResumeJobRequest",
        "description": "Request message for ResumeJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Job"
    },
    {
      "operation_id": "cloudscheduler.projects.locations.jobs.run",
      "resource": "projects.locations.jobs",
      "action": "run",
      "http_method": "POST",
      "path_template": "v1/{+name}:run",
      "description": "Forces a job to run now. When this method is called, Cloud Scheduler will dispatch the job, even if the job is already running.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RunJobRequest",
      "body_schema": {
        "id": "RunJobRequest",
        "description": "Request message for forcing a job to run now using RunJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Job"
    },
    {
      "operation_id": "cloudscheduler.operations.list",
      "resource": "operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^operations$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [],
      "response_type": "ListOperationsResponse"
    },
    {
      "operation_id": "cloudscheduler.operations.get",
      "resource": "operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^operations/.*$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [],
      "response_type": "Operation"
    },
    {
      "operation_id": "cloudscheduler.operations.delete",
      "resource": "operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^operations/.*$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [],
      "response_type": "Empty"
    },
    {
      "operation_id": "cloudscheduler.operations.cancel",
      "resource": "operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^operations/.*$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CancelOperationRequest",
      "body_schema": {
        "id": "CancelOperationRequest",
        "description": "The request message for Operations.CancelOperation.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [],
      "response_type": "Empty"
    }
  ]
}