{
  "service": "bigquery",
  "version": "v2",
  "base_url": "https://bigquery.googleapis.com/bigquery/v2/",
  "total_endpoints": 47,
  "endpoints": [
    {
      "operation_id": "bigquery.datasets.delete",
      "resource": "datasets",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}",
      "description": "Deletes the dataset specified by the datasetId value. Before you can delete a dataset, you must delete all its tables, either manually or by specifying deleteContents. Immediately after deletion, you can create another dataset with the same name.",
      "required_params": [
        "datasetId",
        "projectId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of dataset being deleted",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "deleteContents": {
          "description": "If True, delete all the tables in the dataset. If False and the dataset contains tables, the request will fail. Default is False",
          "location": "query",
          "type": "boolean"
        },
        "projectId": {
          "description": "Required. Project ID of the dataset being deleted",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": ""
    },
    {
      "operation_id": "bigquery.datasets.get",
      "resource": "datasets",
      "action": "get",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}",
      "description": "Returns the dataset specified by datasetID.",
      "required_params": [
        "datasetId",
        "projectId"
      ],
      "parameters": {
        "accessPolicyVersion": {
          "description": "Optional. The version of the access policy schema to fetch. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for conditional access policy binding in datasets must specify version 3. Dataset with no conditional role bindings in access policy may specify any valid value or leave the field unset. This field will be mapped to [IAM Policy version] (https://cloud.google.com/iam/docs/policies#versions) and will be used to fetch policy from IAM. If unset or if 0 or 1 value is used for dataset with conditional bindings, access entry with condition will have role string appended by 'withcond' string followed by a hash value. For example : { \"access\": [ { \"role\": \"roles/bigquery.dataViewer_with_conditionalbinding_7a34awqsda\", \"userByEmail\": \"user@example.com\", } ] } Please refer https://cloud.google.com/iam/docs/troubleshooting-withcond for more details.",
          "format": "int32",
          "location": "query",
          "type": "integer"
        },
        "datasetId": {
          "description": "Required. Dataset ID of the requested dataset",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "datasetView": {
          "description": "Optional. Specifies the view that determines which dataset information is returned. By default, metadata and ACL information are returned.",
          "enum": [
            "DATASET_VIEW_UNSPECIFIED",
            "METADATA",
            "ACL",
            "FULL"
          ],
          "enumDescriptions": [
            "The default value. Default to the FULL view.",
            "View metadata information for the dataset, such as friendlyName, description, labels, etc.",
            "View ACL information for the dataset, which defines dataset access for one or more entities.",
            "View both dataset metadata and ACL information."
          ],
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the requested dataset",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "Dataset"
    },
    {
      "operation_id": "bigquery.datasets.insert",
      "resource": "datasets",
      "action": "insert",
      "http_method": "POST",
      "path_template": "projects/{+projectId}/datasets",
      "description": "Creates a new empty dataset.",
      "required_params": [
        "projectId"
      ],
      "parameters": {
        "accessPolicyVersion": {
          "description": "Optional. The version of the provided access policy schema. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. This version refers to the schema version of the access policy and not the version of access policy. This field's value can be equal or more than the access policy schema provided in the request. For example, * Requests with conditional access policy binding in datasets must specify version 3. * But dataset with no conditional role bindings in access policy may specify any valid value or leave the field unset. If unset or if 0 or 1 value is used for dataset with conditional bindings, request will be rejected. This field will be mapped to IAM Policy version (https://cloud.google.com/iam/docs/policies#versions) and will be used to set policy in IAM.",
          "format": "int32",
          "location": "query",
          "type": "integer"
        },
        "projectId": {
          "description": "Required. Project ID of the new dataset",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Dataset",
      "body_schema": {
        "description": "Represents a BigQuery dataset.",
        "id": "Dataset",
        "properties": {
          "access": {
            "description": "Optional. An array of objects that define dataset access for one or more entities. You can set this property when inserting or updating a dataset in order to control who is allowed to access the data. If unspecified at dataset creation time, BigQuery adds default dataset access for the following entities: access.specialGroup: projectReaders; access.role: READER; access.specialGroup: projectWriters; access.role: WRITER; access.specialGroup: projectOwners; access.role: OWNER; access.userByEmail: [dataset creator email]; access.role: OWNER; If you patch a dataset, then this field is overwritten by the patched dataset's access field. To add entities, you must supply the entire existing access array in addition to any new entities that you want to add.",
            "items": {
              "description": "An object that defines dataset access for an entity.",
              "properties": {
                "condition": {
                  "$ref": "Expr",
                  "description": "Optional. condition for the binding. If CEL expression in this field is true, this access binding will be considered"
                },
                "dataset": {
                  "$ref": "DatasetAccessEntry",
                  "description": "[Pick one] A grant authorizing all resources of a particular type in a particular dataset access to this dataset. Only views are supported for now. The role field is not required when this field is set. If that dataset is deleted and re-created, its access needs to be granted again via an update operation."
                },
                "domain": {
                  "description": "[Pick one] A domain to grant access to. Any users signed in with the domain specified will be granted the specified access. Example: \"example.com\". Maps to IAM policy member \"domain:DOMAIN\".",
                  "type": "string"
                },
                "groupByEmail": {
                  "description": "[Pick one] An email address of a Google Group to grant access to. Maps to IAM policy member \"group:GROUP\".",
                  "type": "string"
                },
                "iamMember": {
                  "description": "[Pick one] Some other type of member that appears in the IAM Policy but isn't a user, group, domain, or special group.",
                  "type": "string"
                },
                "role": {
                  "description": "An IAM role ID that should be granted to the user, group, or domain specified in this access entry. The following legacy mappings will be applied: * `OWNER`: `roles/bigquery.dataOwner` * `WRITER`: `roles/bigquery.dataEditor` * `READER`: `roles/bigquery.dataViewer` This field will accept any of the above formats, but will return only the legacy format. For example, if you set this field to \"roles/bigquery.dataOwner\", it will be returned back as \"OWNER\".",
                  "type": "string"
                },
                "routine": {
                  "$ref": "RoutineReference",
                  "description": "[Pick one] A routine from a different dataset to grant access to. Queries executed against that routine will have read access to views/tables/routines in this dataset. Only UDF is supported for now. The role field is not required when this field is set. If that routine is updated by any user, access to the routine needs to be granted again via an update operation."
                },
                "specialGroup": {
                  "description": "[Pick one] A special group to grant access to. Possible values include: * projectOwners: Owners of the enclosing project. * projectReaders: Readers of the enclosing project. * projectWriters: Writers of the enclosing project. * allAuthenticatedUsers: All authenticated BigQuery users. Maps to similarly-named IAM members.",
                  "type": "string"
                },
                "userByEmail": {
                  "description": "[Pick one] An email address of a user to grant access to. For example: fred@example.com. Maps to IAM policy member \"user:EMAIL\" or \"serviceAccount:EMAIL\".",
                  "type": "string"
                },
                "view": {
                  "$ref": "TableReference",
                  "description": "[Pick one] A view from a different dataset to grant access to. Queries executed against that view will have read access to views/tables/routines in this dataset. The role field is not required when this field is set. If that view is updated by any user, access to the view needs to be granted again via an update operation."
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "creationTime": {
            "description": "Output only. The time when this dataset was created, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "datasetReference": {
            "$ref": "DatasetReference",
            "description": "Required. A reference that identifies the dataset."
          },
          "defaultCollation": {
            "description": "Optional. Defines the default collation specification of future tables created in the dataset. If a table is created in this dataset without table-level default collation, then the table inherits the dataset default collation, which is applied to the string fields that do not have explicit collation specified. A change to this field affects only tables created afterwards, and does not alter the existing tables. The following values are supported: * 'und:ci': undetermined locale, case insensitive. * '': empty string. Default to case-sensitive behavior.",
            "type": "string"
          },
          "defaultEncryptionConfiguration": {
            "$ref": "EncryptionConfiguration",
            "description": "The default encryption key for all tables in the dataset. After this property is set, the encryption key of all newly-created tables in the dataset is set to this value unless the table creation request or query explicitly overrides the key."
          },
          "defaultPartitionExpirationMs": {
            "description": "This default partition expiration, expressed in milliseconds. When new time-partitioned tables are created in a dataset where this property is set, the table will inherit this value, propagated as the `TimePartitioning.expirationMs` property on the new table. If you set `TimePartitioning.expirationMs` explicitly when creating a table, the `defaultPartitionExpirationMs` of the containing dataset is ignored. When creating a partitioned table, if `defaultPartitionExpirationMs` is set, the `defaultTableExpirationMs` value is ignored and the table will not be inherit a table expiration deadline.",
            "format": "int64",
            "type": "string"
          },
          "defaultRoundingMode": {
            "description": "Optional. Defines the default rounding mode specification of new tables created within this dataset. During table creation, if this field is specified, the table within this dataset will inherit the default rounding mode of the dataset. Setting the default rounding mode on a table overrides this option. Existing tables in the dataset are unaffected. If columns are defined during that table creation, they will immediately inherit the table's default rounding mode, unless otherwise specified.",
            "enum": [
              "ROUNDING_MODE_UNSPECIFIED",
              "ROUND_HALF_AWAY_FROM_ZERO",
              "ROUND_HALF_EVEN"
            ],
            "enumDescriptions": [
              "Unspecified will default to using ROUND_HALF_AWAY_FROM_ZERO.",
              "ROUND_HALF_AWAY_FROM_ZERO rounds half values away from zero when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5, 1.6, 1.7, 1.8, 1.9 => 2",
              "ROUND_HALF_EVEN rounds half values to the nearest even value when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5 => 2 1.6, 1.7, 1.8, 1.9 => 2 2.5 => 2"
            ],
            "type": "string"
          },
          "defaultTableExpirationMs": {
            "description": "Optional. The default lifetime of all tables in the dataset, in milliseconds. The minimum lifetime value is 3600000 milliseconds (one hour). To clear an existing default expiration with a PATCH request, set to 0. Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table's expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property.",
            "format": "int64",
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-friendly description of the dataset.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. A hash of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "externalCatalogDatasetOptions": {
            "$ref": "ExternalCatalogDatasetOptions",
            "description": "Optional. Options defining open source compatible datasets living in the BigQuery catalog. Contains metadata of open source database, schema or namespace represented by the current dataset."
          },
          "externalDatasetReference": {
            "$ref": "ExternalDatasetReference",
            "description": "Optional. Reference to a read-only external dataset defined in data catalogs outside of BigQuery. Filled out when the dataset type is EXTERNAL."
          },
          "friendlyName": {
            "description": "Optional. A descriptive name for the dataset.",
            "type": "string"
          },
          "id": {
            "description": "Output only. The fully-qualified unique name of the dataset in the format projectId:datasetId. The dataset name without the project name is given in the datasetId field. When creating a new dataset, leave this field blank, and instead specify the datasetId field.",
            "readOnly": true,
            "type": "string"
          },
          "isCaseInsensitive": {
            "description": "Optional. TRUE if the dataset and its table names are case-insensitive, otherwise FALSE. By default, this is FALSE, which means the dataset and its table names are case-sensitive. This field does not affect routine references.",
            "type": "boolean"
          },
          "kind": {
            "default": "bigquery#dataset",
            "description": "Output only. The resource type.",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See [Creating and Updating Dataset Labels](https://cloud.google.com/bigquery/docs/creating-managing-labels#creating_and_updating_dataset_labels) for more information.",
            "type": "object"
          },
          "lastModifiedTime": {
            "description": "Output only. The date when this dataset was last modified, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "linkedDatasetMetadata": {
            "$ref": "LinkedDatasetMetadata",
            "description": "Output only. Metadata about the LinkedDataset. Filled out when the dataset type is LINKED.",
            "readOnly": true
          },
          "linkedDatasetSource": {
            "$ref": "LinkedDatasetSource",
            "description": "Optional. The source dataset reference when the dataset is of type LINKED. For all other dataset types it is not set. This field cannot be updated once it is set. Any attempt to update this field using Update and Patch API Operations will be ignored."
          },
          "location": {
            "description": "The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations.",
            "type": "string"
          },
          "maxTimeTravelHours": {
            "description": "Optional. Defines the time travel window in hours. The value can be from 48 to 168 hours (2 to 7 days). The default value is 168 hours if this is not set.",
            "format": "int64",
            "type": "string"
          },
          "resourceTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The [tags](https://cloud.google.com/bigquery/docs/tags) attached to this dataset. Tag keys are globally unique. Tag key is expected to be in the namespaced format, for example \"123456789012/environment\" where 123456789012 is the ID of the parent organization or project resource for this tag key. Tag value is expected to be the short name, for example \"Production\". See [Tag definitions](https://cloud.google.com/iam/docs/tags-access-control#definitions) for more details.",
            "type": "object"
          },
          "restrictions": {
            "$ref": "RestrictionConfig",
            "description": "Optional. Output only. Restriction config for all tables and dataset. If set, restrict certain accesses on the dataset and all its tables based on the config. See [Data egress](https://cloud.google.com/bigquery/docs/analytics-hub-introduction#data_egress) for more details.",
            "readOnly": true
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "selfLink": {
            "description": "Output only. A URL that can be used to access the resource again. You can use this URL in Get or Update requests to the resource.",
            "readOnly": true,
            "type": "string"
          },
          "storageBillingModel": {
            "description": "Optional. Updates storage_billing_model for the dataset.",
            "enum": [
              "STORAGE_BILLING_MODEL_UNSPECIFIED",
              "LOGICAL",
              "PHYSICAL"
            ],
            "enumDescriptions": [
              "Value not set.",
              "Billing for logical bytes.",
              "Billing for physical bytes."
            ],
            "type": "string"
          },
          "tags": {
            "deprecated": true,
            "description": "Output only. Tags for the dataset. To provide tags as inputs, use the `resourceTags` field.",
            "items": {
              "description": "A global tag managed by Resource Manager. https://cloud.google.com/iam/docs/tags-access-control#definitions",
              "properties": {
                "tagKey": {
                  "description": "Required. The namespaced friendly name of the tag key, e.g. \"12345/environment\" where 12345 is org id.",
                  "type": "string"
                },
                "tagValue": {
                  "description": "Required. The friendly short name of the tag value, e.g. \"production\".",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "type": {
            "description": "Output only. Same as `type` in `ListFormatDataset`. The type of the dataset, one of: * DEFAULT - only accessible by owner and authorized accounts, * PUBLIC - accessible by everyone, * LINKED - linked dataset, * EXTERNAL - dataset with definition in external metadata catalog.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Dataset"
    },
    {
      "operation_id": "bigquery.datasets.list",
      "resource": "datasets",
      "action": "list",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets",
      "description": "Lists all datasets in the specified project to which the user has been granted the READER dataset role.",
      "required_params": [
        "projectId"
      ],
      "parameters": {
        "all": {
          "description": "Whether to list all datasets, including hidden ones",
          "location": "query",
          "type": "boolean"
        },
        "filter": {
          "description": "An expression for filtering the results of the request by label. The syntax is `labels.[:]`. Multiple filters can be AND-ed together by connecting with a space. Example: `labels.department:receiving labels.active`. See [Filtering datasets using labels](https://cloud.google.com/bigquery/docs/filtering-labels#filtering_datasets_using_labels) for details.",
          "location": "query",
          "type": "string"
        },
        "maxResults": {
          "description": "The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection.",
          "format": "uint32",
          "location": "query",
          "type": "integer"
        },
        "pageToken": {
          "description": "Page token, returned by a previous call, to request the next page of results",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the datasets to be listed",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "DatasetList"
    },
    {
      "operation_id": "bigquery.datasets.patch",
      "resource": "datasets",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}",
      "description": "Updates information in an existing dataset. The update method replaces the entire dataset resource, whereas the patch method only replaces fields that are provided in the submitted dataset resource. This method supports RFC5789 patch semantics.",
      "required_params": [
        "datasetId",
        "projectId"
      ],
      "parameters": {
        "accessPolicyVersion": {
          "description": "Optional. The version of the provided access policy schema. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. This version refers to the schema version of the access policy and not the version of access policy. This field's value can be equal or more than the access policy schema provided in the request. For example, * Operations updating conditional access policy binding in datasets must specify version 3. Some of the operations are : - Adding a new access policy entry with condition. - Removing an access policy entry with condition. - Updating an access policy entry with condition. * But dataset with no conditional role bindings in access policy may specify any valid value or leave the field unset. If unset or if 0 or 1 value is used for dataset with conditional bindings, request will be rejected. This field will be mapped to IAM Policy version (https://cloud.google.com/iam/docs/policies#versions) and will be used to set policy in IAM.",
          "format": "int32",
          "location": "query",
          "type": "integer"
        },
        "datasetId": {
          "description": "Required. Dataset ID of the dataset being updated",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the dataset being updated",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "updateMode": {
          "description": "Optional. Specifies the fields of dataset that update/patch operation is targeting By default, both metadata and ACL fields are updated.",
          "enum": [
            "UPDATE_MODE_UNSPECIFIED",
            "UPDATE_METADATA",
            "UPDATE_ACL",
            "UPDATE_FULL"
          ],
          "enumDescriptions": [
            "The default value. Default to the UPDATE_FULL.",
            "Includes metadata information for the dataset, such as friendlyName, description, labels, etc.",
            "Includes ACL information for the dataset, which defines dataset access for one or more entities.",
            "Includes both dataset metadata and ACL information."
          ],
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Dataset",
      "body_schema": {
        "description": "Represents a BigQuery dataset.",
        "id": "Dataset",
        "properties": {
          "access": {
            "description": "Optional. An array of objects that define dataset access for one or more entities. You can set this property when inserting or updating a dataset in order to control who is allowed to access the data. If unspecified at dataset creation time, BigQuery adds default dataset access for the following entities: access.specialGroup: projectReaders; access.role: READER; access.specialGroup: projectWriters; access.role: WRITER; access.specialGroup: projectOwners; access.role: OWNER; access.userByEmail: [dataset creator email]; access.role: OWNER; If you patch a dataset, then this field is overwritten by the patched dataset's access field. To add entities, you must supply the entire existing access array in addition to any new entities that you want to add.",
            "items": {
              "description": "An object that defines dataset access for an entity.",
              "properties": {
                "condition": {
                  "$ref": "Expr",
                  "description": "Optional. condition for the binding. If CEL expression in this field is true, this access binding will be considered"
                },
                "dataset": {
                  "$ref": "DatasetAccessEntry",
                  "description": "[Pick one] A grant authorizing all resources of a particular type in a particular dataset access to this dataset. Only views are supported for now. The role field is not required when this field is set. If that dataset is deleted and re-created, its access needs to be granted again via an update operation."
                },
                "domain": {
                  "description": "[Pick one] A domain to grant access to. Any users signed in with the domain specified will be granted the specified access. Example: \"example.com\". Maps to IAM policy member \"domain:DOMAIN\".",
                  "type": "string"
                },
                "groupByEmail": {
                  "description": "[Pick one] An email address of a Google Group to grant access to. Maps to IAM policy member \"group:GROUP\".",
                  "type": "string"
                },
                "iamMember": {
                  "description": "[Pick one] Some other type of member that appears in the IAM Policy but isn't a user, group, domain, or special group.",
                  "type": "string"
                },
                "role": {
                  "description": "An IAM role ID that should be granted to the user, group, or domain specified in this access entry. The following legacy mappings will be applied: * `OWNER`: `roles/bigquery.dataOwner` * `WRITER`: `roles/bigquery.dataEditor` * `READER`: `roles/bigquery.dataViewer` This field will accept any of the above formats, but will return only the legacy format. For example, if you set this field to \"roles/bigquery.dataOwner\", it will be returned back as \"OWNER\".",
                  "type": "string"
                },
                "routine": {
                  "$ref": "RoutineReference",
                  "description": "[Pick one] A routine from a different dataset to grant access to. Queries executed against that routine will have read access to views/tables/routines in this dataset. Only UDF is supported for now. The role field is not required when this field is set. If that routine is updated by any user, access to the routine needs to be granted again via an update operation."
                },
                "specialGroup": {
                  "description": "[Pick one] A special group to grant access to. Possible values include: * projectOwners: Owners of the enclosing project. * projectReaders: Readers of the enclosing project. * projectWriters: Writers of the enclosing project. * allAuthenticatedUsers: All authenticated BigQuery users. Maps to similarly-named IAM members.",
                  "type": "string"
                },
                "userByEmail": {
                  "description": "[Pick one] An email address of a user to grant access to. For example: fred@example.com. Maps to IAM policy member \"user:EMAIL\" or \"serviceAccount:EMAIL\".",
                  "type": "string"
                },
                "view": {
                  "$ref": "TableReference",
                  "description": "[Pick one] A view from a different dataset to grant access to. Queries executed against that view will have read access to views/tables/routines in this dataset. The role field is not required when this field is set. If that view is updated by any user, access to the view needs to be granted again via an update operation."
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "creationTime": {
            "description": "Output only. The time when this dataset was created, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "datasetReference": {
            "$ref": "DatasetReference",
            "description": "Required. A reference that identifies the dataset."
          },
          "defaultCollation": {
            "description": "Optional. Defines the default collation specification of future tables created in the dataset. If a table is created in this dataset without table-level default collation, then the table inherits the dataset default collation, which is applied to the string fields that do not have explicit collation specified. A change to this field affects only tables created afterwards, and does not alter the existing tables. The following values are supported: * 'und:ci': undetermined locale, case insensitive. * '': empty string. Default to case-sensitive behavior.",
            "type": "string"
          },
          "defaultEncryptionConfiguration": {
            "$ref": "EncryptionConfiguration",
            "description": "The default encryption key for all tables in the dataset. After this property is set, the encryption key of all newly-created tables in the dataset is set to this value unless the table creation request or query explicitly overrides the key."
          },
          "defaultPartitionExpirationMs": {
            "description": "This default partition expiration, expressed in milliseconds. When new time-partitioned tables are created in a dataset where this property is set, the table will inherit this value, propagated as the `TimePartitioning.expirationMs` property on the new table. If you set `TimePartitioning.expirationMs` explicitly when creating a table, the `defaultPartitionExpirationMs` of the containing dataset is ignored. When creating a partitioned table, if `defaultPartitionExpirationMs` is set, the `defaultTableExpirationMs` value is ignored and the table will not be inherit a table expiration deadline.",
            "format": "int64",
            "type": "string"
          },
          "defaultRoundingMode": {
            "description": "Optional. Defines the default rounding mode specification of new tables created within this dataset. During table creation, if this field is specified, the table within this dataset will inherit the default rounding mode of the dataset. Setting the default rounding mode on a table overrides this option. Existing tables in the dataset are unaffected. If columns are defined during that table creation, they will immediately inherit the table's default rounding mode, unless otherwise specified.",
            "enum": [
              "ROUNDING_MODE_UNSPECIFIED",
              "ROUND_HALF_AWAY_FROM_ZERO",
              "ROUND_HALF_EVEN"
            ],
            "enumDescriptions": [
              "Unspecified will default to using ROUND_HALF_AWAY_FROM_ZERO.",
              "ROUND_HALF_AWAY_FROM_ZERO rounds half values away from zero when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5, 1.6, 1.7, 1.8, 1.9 => 2",
              "ROUND_HALF_EVEN rounds half values to the nearest even value when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5 => 2 1.6, 1.7, 1.8, 1.9 => 2 2.5 => 2"
            ],
            "type": "string"
          },
          "defaultTableExpirationMs": {
            "description": "Optional. The default lifetime of all tables in the dataset, in milliseconds. The minimum lifetime value is 3600000 milliseconds (one hour). To clear an existing default expiration with a PATCH request, set to 0. Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table's expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property.",
            "format": "int64",
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-friendly description of the dataset.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. A hash of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "externalCatalogDatasetOptions": {
            "$ref": "ExternalCatalogDatasetOptions",
            "description": "Optional. Options defining open source compatible datasets living in the BigQuery catalog. Contains metadata of open source database, schema or namespace represented by the current dataset."
          },
          "externalDatasetReference": {
            "$ref": "ExternalDatasetReference",
            "description": "Optional. Reference to a read-only external dataset defined in data catalogs outside of BigQuery. Filled out when the dataset type is EXTERNAL."
          },
          "friendlyName": {
            "description": "Optional. A descriptive name for the dataset.",
            "type": "string"
          },
          "id": {
            "description": "Output only. The fully-qualified unique name of the dataset in the format projectId:datasetId. The dataset name without the project name is given in the datasetId field. When creating a new dataset, leave this field blank, and instead specify the datasetId field.",
            "readOnly": true,
            "type": "string"
          },
          "isCaseInsensitive": {
            "description": "Optional. TRUE if the dataset and its table names are case-insensitive, otherwise FALSE. By default, this is FALSE, which means the dataset and its table names are case-sensitive. This field does not affect routine references.",
            "type": "boolean"
          },
          "kind": {
            "default": "bigquery#dataset",
            "description": "Output only. The resource type.",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See [Creating and Updating Dataset Labels](https://cloud.google.com/bigquery/docs/creating-managing-labels#creating_and_updating_dataset_labels) for more information.",
            "type": "object"
          },
          "lastModifiedTime": {
            "description": "Output only. The date when this dataset was last modified, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "linkedDatasetMetadata": {
            "$ref": "LinkedDatasetMetadata",
            "description": "Output only. Metadata about the LinkedDataset. Filled out when the dataset type is LINKED.",
            "readOnly": true
          },
          "linkedDatasetSource": {
            "$ref": "LinkedDatasetSource",
            "description": "Optional. The source dataset reference when the dataset is of type LINKED. For all other dataset types it is not set. This field cannot be updated once it is set. Any attempt to update this field using Update and Patch API Operations will be ignored."
          },
          "location": {
            "description": "The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations.",
            "type": "string"
          },
          "maxTimeTravelHours": {
            "description": "Optional. Defines the time travel window in hours. The value can be from 48 to 168 hours (2 to 7 days). The default value is 168 hours if this is not set.",
            "format": "int64",
            "type": "string"
          },
          "resourceTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The [tags](https://cloud.google.com/bigquery/docs/tags) attached to this dataset. Tag keys are globally unique. Tag key is expected to be in the namespaced format, for example \"123456789012/environment\" where 123456789012 is the ID of the parent organization or project resource for this tag key. Tag value is expected to be the short name, for example \"Production\". See [Tag definitions](https://cloud.google.com/iam/docs/tags-access-control#definitions) for more details.",
            "type": "object"
          },
          "restrictions": {
            "$ref": "RestrictionConfig",
            "description": "Optional. Output only. Restriction config for all tables and dataset. If set, restrict certain accesses on the dataset and all its tables based on the config. See [Data egress](https://cloud.google.com/bigquery/docs/analytics-hub-introduction#data_egress) for more details.",
            "readOnly": true
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "selfLink": {
            "description": "Output only. A URL that can be used to access the resource again. You can use this URL in Get or Update requests to the resource.",
            "readOnly": true,
            "type": "string"
          },
          "storageBillingModel": {
            "description": "Optional. Updates storage_billing_model for the dataset.",
            "enum": [
              "STORAGE_BILLING_MODEL_UNSPECIFIED",
              "LOGICAL",
              "PHYSICAL"
            ],
            "enumDescriptions": [
              "Value not set.",
              "Billing for logical bytes.",
              "Billing for physical bytes."
            ],
            "type": "string"
          },
          "tags": {
            "deprecated": true,
            "description": "Output only. Tags for the dataset. To provide tags as inputs, use the `resourceTags` field.",
            "items": {
              "description": "A global tag managed by Resource Manager. https://cloud.google.com/iam/docs/tags-access-control#definitions",
              "properties": {
                "tagKey": {
                  "description": "Required. The namespaced friendly name of the tag key, e.g. \"12345/environment\" where 12345 is org id.",
                  "type": "string"
                },
                "tagValue": {
                  "description": "Required. The friendly short name of the tag value, e.g. \"production\".",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "type": {
            "description": "Output only. Same as `type` in `ListFormatDataset`. The type of the dataset, one of: * DEFAULT - only accessible by owner and authorized accounts, * PUBLIC - accessible by everyone, * LINKED - linked dataset, * EXTERNAL - dataset with definition in external metadata catalog.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Dataset"
    },
    {
      "operation_id": "bigquery.datasets.undelete",
      "resource": "datasets",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}:undelete",
      "description": "Undeletes a dataset which is within time travel window based on datasetId. If a time is specified, the dataset version deleted at that time is undeleted, else the last live version is undeleted.",
      "required_params": [
        "datasetId",
        "projectId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of dataset being deleted",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the dataset to be undeleted",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteDatasetRequest",
      "body_schema": {
        "description": "Request format for undeleting a dataset.",
        "id": "UndeleteDatasetRequest",
        "properties": {
          "deletionTime": {
            "description": "Optional. The exact time when the dataset was deleted. If not specified, the most recently deleted version is undeleted. Undeleting a dataset using deletion time is not supported.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Dataset"
    },
    {
      "operation_id": "bigquery.datasets.update",
      "resource": "datasets",
      "action": "update",
      "http_method": "PUT",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}",
      "description": "Updates information in an existing dataset. The update method replaces the entire dataset resource, whereas the patch method only replaces fields that are provided in the submitted dataset resource.",
      "required_params": [
        "datasetId",
        "projectId"
      ],
      "parameters": {
        "accessPolicyVersion": {
          "description": "Optional. The version of the provided access policy schema. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. This version refers to the schema version of the access policy and not the version of access policy. This field's value can be equal or more than the access policy schema provided in the request. For example, * Operations updating conditional access policy binding in datasets must specify version 3. Some of the operations are : - Adding a new access policy entry with condition. - Removing an access policy entry with condition. - Updating an access policy entry with condition. * But dataset with no conditional role bindings in access policy may specify any valid value or leave the field unset. If unset or if 0 or 1 value is used for dataset with conditional bindings, request will be rejected. This field will be mapped to IAM Policy version (https://cloud.google.com/iam/docs/policies#versions) and will be used to set policy in IAM.",
          "format": "int32",
          "location": "query",
          "type": "integer"
        },
        "datasetId": {
          "description": "Required. Dataset ID of the dataset being updated",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the dataset being updated",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "updateMode": {
          "description": "Optional. Specifies the fields of dataset that update/patch operation is targeting By default, both metadata and ACL fields are updated.",
          "enum": [
            "UPDATE_MODE_UNSPECIFIED",
            "UPDATE_METADATA",
            "UPDATE_ACL",
            "UPDATE_FULL"
          ],
          "enumDescriptions": [
            "The default value. Default to the UPDATE_FULL.",
            "Includes metadata information for the dataset, such as friendlyName, description, labels, etc.",
            "Includes ACL information for the dataset, which defines dataset access for one or more entities.",
            "Includes both dataset metadata and ACL information."
          ],
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Dataset",
      "body_schema": {
        "description": "Represents a BigQuery dataset.",
        "id": "Dataset",
        "properties": {
          "access": {
            "description": "Optional. An array of objects that define dataset access for one or more entities. You can set this property when inserting or updating a dataset in order to control who is allowed to access the data. If unspecified at dataset creation time, BigQuery adds default dataset access for the following entities: access.specialGroup: projectReaders; access.role: READER; access.specialGroup: projectWriters; access.role: WRITER; access.specialGroup: projectOwners; access.role: OWNER; access.userByEmail: [dataset creator email]; access.role: OWNER; If you patch a dataset, then this field is overwritten by the patched dataset's access field. To add entities, you must supply the entire existing access array in addition to any new entities that you want to add.",
            "items": {
              "description": "An object that defines dataset access for an entity.",
              "properties": {
                "condition": {
                  "$ref": "Expr",
                  "description": "Optional. condition for the binding. If CEL expression in this field is true, this access binding will be considered"
                },
                "dataset": {
                  "$ref": "DatasetAccessEntry",
                  "description": "[Pick one] A grant authorizing all resources of a particular type in a particular dataset access to this dataset. Only views are supported for now. The role field is not required when this field is set. If that dataset is deleted and re-created, its access needs to be granted again via an update operation."
                },
                "domain": {
                  "description": "[Pick one] A domain to grant access to. Any users signed in with the domain specified will be granted the specified access. Example: \"example.com\". Maps to IAM policy member \"domain:DOMAIN\".",
                  "type": "string"
                },
                "groupByEmail": {
                  "description": "[Pick one] An email address of a Google Group to grant access to. Maps to IAM policy member \"group:GROUP\".",
                  "type": "string"
                },
                "iamMember": {
                  "description": "[Pick one] Some other type of member that appears in the IAM Policy but isn't a user, group, domain, or special group.",
                  "type": "string"
                },
                "role": {
                  "description": "An IAM role ID that should be granted to the user, group, or domain specified in this access entry. The following legacy mappings will be applied: * `OWNER`: `roles/bigquery.dataOwner` * `WRITER`: `roles/bigquery.dataEditor` * `READER`: `roles/bigquery.dataViewer` This field will accept any of the above formats, but will return only the legacy format. For example, if you set this field to \"roles/bigquery.dataOwner\", it will be returned back as \"OWNER\".",
                  "type": "string"
                },
                "routine": {
                  "$ref": "RoutineReference",
                  "description": "[Pick one] A routine from a different dataset to grant access to. Queries executed against that routine will have read access to views/tables/routines in this dataset. Only UDF is supported for now. The role field is not required when this field is set. If that routine is updated by any user, access to the routine needs to be granted again via an update operation."
                },
                "specialGroup": {
                  "description": "[Pick one] A special group to grant access to. Possible values include: * projectOwners: Owners of the enclosing project. * projectReaders: Readers of the enclosing project. * projectWriters: Writers of the enclosing project. * allAuthenticatedUsers: All authenticated BigQuery users. Maps to similarly-named IAM members.",
                  "type": "string"
                },
                "userByEmail": {
                  "description": "[Pick one] An email address of a user to grant access to. For example: fred@example.com. Maps to IAM policy member \"user:EMAIL\" or \"serviceAccount:EMAIL\".",
                  "type": "string"
                },
                "view": {
                  "$ref": "TableReference",
                  "description": "[Pick one] A view from a different dataset to grant access to. Queries executed against that view will have read access to views/tables/routines in this dataset. The role field is not required when this field is set. If that view is updated by any user, access to the view needs to be granted again via an update operation."
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "creationTime": {
            "description": "Output only. The time when this dataset was created, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "datasetReference": {
            "$ref": "DatasetReference",
            "description": "Required. A reference that identifies the dataset."
          },
          "defaultCollation": {
            "description": "Optional. Defines the default collation specification of future tables created in the dataset. If a table is created in this dataset without table-level default collation, then the table inherits the dataset default collation, which is applied to the string fields that do not have explicit collation specified. A change to this field affects only tables created afterwards, and does not alter the existing tables. The following values are supported: * 'und:ci': undetermined locale, case insensitive. * '': empty string. Default to case-sensitive behavior.",
            "type": "string"
          },
          "defaultEncryptionConfiguration": {
            "$ref": "EncryptionConfiguration",
            "description": "The default encryption key for all tables in the dataset. After this property is set, the encryption key of all newly-created tables in the dataset is set to this value unless the table creation request or query explicitly overrides the key."
          },
          "defaultPartitionExpirationMs": {
            "description": "This default partition expiration, expressed in milliseconds. When new time-partitioned tables are created in a dataset where this property is set, the table will inherit this value, propagated as the `TimePartitioning.expirationMs` property on the new table. If you set `TimePartitioning.expirationMs` explicitly when creating a table, the `defaultPartitionExpirationMs` of the containing dataset is ignored. When creating a partitioned table, if `defaultPartitionExpirationMs` is set, the `defaultTableExpirationMs` value is ignored and the table will not be inherit a table expiration deadline.",
            "format": "int64",
            "type": "string"
          },
          "defaultRoundingMode": {
            "description": "Optional. Defines the default rounding mode specification of new tables created within this dataset. During table creation, if this field is specified, the table within this dataset will inherit the default rounding mode of the dataset. Setting the default rounding mode on a table overrides this option. Existing tables in the dataset are unaffected. If columns are defined during that table creation, they will immediately inherit the table's default rounding mode, unless otherwise specified.",
            "enum": [
              "ROUNDING_MODE_UNSPECIFIED",
              "ROUND_HALF_AWAY_FROM_ZERO",
              "ROUND_HALF_EVEN"
            ],
            "enumDescriptions": [
              "Unspecified will default to using ROUND_HALF_AWAY_FROM_ZERO.",
              "ROUND_HALF_AWAY_FROM_ZERO rounds half values away from zero when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5, 1.6, 1.7, 1.8, 1.9 => 2",
              "ROUND_HALF_EVEN rounds half values to the nearest even value when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5 => 2 1.6, 1.7, 1.8, 1.9 => 2 2.5 => 2"
            ],
            "type": "string"
          },
          "defaultTableExpirationMs": {
            "description": "Optional. The default lifetime of all tables in the dataset, in milliseconds. The minimum lifetime value is 3600000 milliseconds (one hour). To clear an existing default expiration with a PATCH request, set to 0. Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table's expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property.",
            "format": "int64",
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-friendly description of the dataset.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. A hash of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "externalCatalogDatasetOptions": {
            "$ref": "ExternalCatalogDatasetOptions",
            "description": "Optional. Options defining open source compatible datasets living in the BigQuery catalog. Contains metadata of open source database, schema or namespace represented by the current dataset."
          },
          "externalDatasetReference": {
            "$ref": "ExternalDatasetReference",
            "description": "Optional. Reference to a read-only external dataset defined in data catalogs outside of BigQuery. Filled out when the dataset type is EXTERNAL."
          },
          "friendlyName": {
            "description": "Optional. A descriptive name for the dataset.",
            "type": "string"
          },
          "id": {
            "description": "Output only. The fully-qualified unique name of the dataset in the format projectId:datasetId. The dataset name without the project name is given in the datasetId field. When creating a new dataset, leave this field blank, and instead specify the datasetId field.",
            "readOnly": true,
            "type": "string"
          },
          "isCaseInsensitive": {
            "description": "Optional. TRUE if the dataset and its table names are case-insensitive, otherwise FALSE. By default, this is FALSE, which means the dataset and its table names are case-sensitive. This field does not affect routine references.",
            "type": "boolean"
          },
          "kind": {
            "default": "bigquery#dataset",
            "description": "Output only. The resource type.",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See [Creating and Updating Dataset Labels](https://cloud.google.com/bigquery/docs/creating-managing-labels#creating_and_updating_dataset_labels) for more information.",
            "type": "object"
          },
          "lastModifiedTime": {
            "description": "Output only. The date when this dataset was last modified, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "linkedDatasetMetadata": {
            "$ref": "LinkedDatasetMetadata",
            "description": "Output only. Metadata about the LinkedDataset. Filled out when the dataset type is LINKED.",
            "readOnly": true
          },
          "linkedDatasetSource": {
            "$ref": "LinkedDatasetSource",
            "description": "Optional. The source dataset reference when the dataset is of type LINKED. For all other dataset types it is not set. This field cannot be updated once it is set. Any attempt to update this field using Update and Patch API Operations will be ignored."
          },
          "location": {
            "description": "The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations.",
            "type": "string"
          },
          "maxTimeTravelHours": {
            "description": "Optional. Defines the time travel window in hours. The value can be from 48 to 168 hours (2 to 7 days). The default value is 168 hours if this is not set.",
            "format": "int64",
            "type": "string"
          },
          "resourceTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The [tags](https://cloud.google.com/bigquery/docs/tags) attached to this dataset. Tag keys are globally unique. Tag key is expected to be in the namespaced format, for example \"123456789012/environment\" where 123456789012 is the ID of the parent organization or project resource for this tag key. Tag value is expected to be the short name, for example \"Production\". See [Tag definitions](https://cloud.google.com/iam/docs/tags-access-control#definitions) for more details.",
            "type": "object"
          },
          "restrictions": {
            "$ref": "RestrictionConfig",
            "description": "Optional. Output only. Restriction config for all tables and dataset. If set, restrict certain accesses on the dataset and all its tables based on the config. See [Data egress](https://cloud.google.com/bigquery/docs/analytics-hub-introduction#data_egress) for more details.",
            "readOnly": true
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "selfLink": {
            "description": "Output only. A URL that can be used to access the resource again. You can use this URL in Get or Update requests to the resource.",
            "readOnly": true,
            "type": "string"
          },
          "storageBillingModel": {
            "description": "Optional. Updates storage_billing_model for the dataset.",
            "enum": [
              "STORAGE_BILLING_MODEL_UNSPECIFIED",
              "LOGICAL",
              "PHYSICAL"
            ],
            "enumDescriptions": [
              "Value not set.",
              "Billing for logical bytes.",
              "Billing for physical bytes."
            ],
            "type": "string"
          },
          "tags": {
            "deprecated": true,
            "description": "Output only. Tags for the dataset. To provide tags as inputs, use the `resourceTags` field.",
            "items": {
              "description": "A global tag managed by Resource Manager. https://cloud.google.com/iam/docs/tags-access-control#definitions",
              "properties": {
                "tagKey": {
                  "description": "Required. The namespaced friendly name of the tag key, e.g. \"12345/environment\" where 12345 is org id.",
                  "type": "string"
                },
                "tagValue": {
                  "description": "Required. The friendly short name of the tag value, e.g. \"production\".",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "type": {
            "description": "Output only. Same as `type` in `ListFormatDataset`. The type of the dataset, one of: * DEFAULT - only accessible by owner and authorized accounts, * PUBLIC - accessible by everyone, * LINKED - linked dataset, * EXTERNAL - dataset with definition in external metadata catalog.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Dataset"
    },
    {
      "operation_id": "bigquery.jobs.cancel",
      "resource": "jobs",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "projects/{+projectId}/jobs/{+jobId}/cancel",
      "description": "Requests that a job be cancelled. This call will return immediately, and the client will need to poll for the job status to see if the cancel completed successfully. Cancelled jobs may still incur costs.",
      "required_params": [
        "jobId",
        "projectId"
      ],
      "parameters": {
        "jobId": {
          "description": "Required. Job ID of the job to cancel",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "location": {
          "description": "The geographic location of the job. You must [specify the location](https://cloud.google.com/bigquery/docs/locations#specify_locations) to run the job for the following scenarios: * If the location to run a job is not in the `us` or the `eu` multi-regional location * If the job's location is in a single region (for example, `us-central1`)",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the job to cancel",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "JobCancelResponse"
    },
    {
      "operation_id": "bigquery.jobs.delete",
      "resource": "jobs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "projects/{+projectId}/jobs/{+jobId}/delete",
      "description": "Requests the deletion of the metadata of a job. This call returns when the job's metadata is deleted.",
      "required_params": [
        "jobId",
        "projectId"
      ],
      "parameters": {
        "jobId": {
          "description": "Required. Job ID of the job for which metadata is to be deleted. If this is a parent job which has child jobs, the metadata from all child jobs will be deleted as well. Direct deletion of the metadata of child jobs is not allowed.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "location": {
          "description": "The geographic location of the job. Required. For more information, see how to [specify locations](https://cloud.google.com/bigquery/docs/locations#specify_locations).",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the job for which metadata is to be deleted.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": ""
    },
    {
      "operation_id": "bigquery.jobs.get",
      "resource": "jobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/jobs/{+jobId}",
      "description": "Returns information about a specific job. Job information is available for a six month period after creation. Requires that you're the person who ran the job, or have the Is Owner project role.",
      "required_params": [
        "jobId",
        "projectId"
      ],
      "parameters": {
        "jobId": {
          "description": "Required. Job ID of the requested job.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "location": {
          "description": "The geographic location of the job. You must specify the location to run the job for the following scenarios: * If the location to run a job is not in the `us` or the `eu` multi-regional location * If the job's location is in a single region (for example, `us-central1`) For more information, see how to [specify locations](https://cloud.google.com/bigquery/docs/locations#specify_locations).",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the requested job.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "Job"
    },
    {
      "operation_id": "bigquery.jobs.getQueryResults",
      "resource": "jobs",
      "action": "getQueryResults",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/queries/{+jobId}",
      "description": "RPC to get the results of a query job.",
      "required_params": [
        "jobId",
        "projectId"
      ],
      "parameters": {
        "formatOptions.useInt64Timestamp": {
          "description": "Optional. Output timestamp as usec int64. Default is false.",
          "location": "query",
          "type": "boolean"
        },
        "jobId": {
          "description": "Required. Job ID of the query job.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "location": {
          "description": "The geographic location of the job. You must specify the location to run the job for the following scenarios: * If the location to run a job is not in the `us` or the `eu` multi-regional location * If the job's location is in a single region (for example, `us-central1`) For more information, see how to [specify locations](https://cloud.google.com/bigquery/docs/locations#specify_locations).",
          "location": "query",
          "type": "string"
        },
        "maxResults": {
          "description": "Maximum number of results to read.",
          "format": "uint32",
          "location": "query",
          "type": "integer"
        },
        "pageToken": {
          "description": "Page token, returned by a previous call, to request the next page of results.",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the query job.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "startIndex": {
          "description": "Zero-based index of the starting row.",
          "format": "uint64",
          "location": "query",
          "type": "string"
        },
        "timeoutMs": {
          "description": "Optional: Specifies the maximum amount of time, in milliseconds, that the client is willing to wait for the query to complete. By default, this limit is 10 seconds (10,000 milliseconds). If the query is complete, the jobComplete field in the response is true. If the query has not yet completed, jobComplete is false. You can request a longer timeout period in the timeoutMs field. However, the call is not guaranteed to wait for the specified timeout; it typically returns after around 200 seconds (200,000 milliseconds), even if the query is not complete. If jobComplete is false, you can continue to wait for the query to complete by calling the getQueryResults method until the jobComplete field in the getQueryResults response is true.",
          "format": "uint32",
          "location": "query",
          "type": "integer"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GetQueryResultsResponse"
    },
    {
      "operation_id": "bigquery.jobs.insert",
      "resource": "jobs",
      "action": "insert",
      "http_method": "POST",
      "path_template": "projects/{+projectId}/jobs",
      "description": "Starts a new asynchronous job. This API has two different kinds of endpoint URIs, as this method supports a variety of use cases. * The *Metadata* URI is used for most interactions, as it accepts the job configuration directly. * The *Upload* URI is ONLY for the case when you're sending both a load job configuration and a data stream together. In this case, the Upload URI accepts the job configuration and the data as two distinct multipart MIME parts.",
      "required_params": [
        "projectId"
      ],
      "parameters": {
        "projectId": {
          "description": "Project ID of project that will be billed for the job.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Job",
      "body_schema": {
        "id": "Job",
        "properties": {
          "configuration": {
            "$ref": "JobConfiguration",
            "description": "Required. Describes the job configuration."
          },
          "etag": {
            "description": "Output only. A hash of this resource.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Output only. Opaque ID field of the job.",
            "readOnly": true,
            "type": "string"
          },
          "jobCreationReason": {
            "$ref": "JobCreationReason",
            "description": "Output only. The reason why a Job was created.",
            "readOnly": true
          },
          "jobReference": {
            "$ref": "JobReference",
            "description": "Optional. Reference describing the unique-per-user name of the job."
          },
          "kind": {
            "default": "bigquery#job",
            "description": "Output only. The type of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "principal_subject": {
            "description": "Output only. [Full-projection-only] String representation of identity of requesting party. Populated for both first- and third-party identities. Only present for APIs that support third-party identities.",
            "readOnly": true,
            "type": "string"
          },
          "selfLink": {
            "description": "Output only. A URL that can be used to access the resource again.",
            "readOnly": true,
            "type": "string"
          },
          "statistics": {
            "$ref": "JobStatistics",
            "description": "Output only. Information about the job, including starting time and ending time of the job.",
            "readOnly": true
          },
          "status": {
            "$ref": "JobStatus",
            "description": "Output only. The status of this job. Examine this value when polling an asynchronous job to see if the job is complete.",
            "readOnly": true
          },
          "user_email": {
            "description": "Output only. Email address of the user who ran the job.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/devstorage.full_control",
        "https://www.googleapis.com/auth/devstorage.read_only",
        "https://www.googleapis.com/auth/devstorage.read_write"
      ],
      "response_type": "Job"
    },
    {
      "operation_id": "bigquery.jobs.list",
      "resource": "jobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/jobs",
      "description": "Lists all jobs that you started in the specified project. Job information is available for a six month period after creation. The job list is sorted in reverse chronological order, by job creation time. Requires the Can View project role, or the Is Owner project role if you set the allUsers property.",
      "required_params": [
        "projectId"
      ],
      "parameters": {
        "allUsers": {
          "description": "Whether to display jobs owned by all users in the project. Default False.",
          "location": "query",
          "type": "boolean"
        },
        "maxCreationTime": {
          "description": "Max value for job creation time, in milliseconds since the POSIX epoch. If set, only jobs created before or at this timestamp are returned.",
          "format": "uint64",
          "location": "query",
          "type": "string"
        },
        "maxResults": {
          "description": "The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection.",
          "format": "uint32",
          "location": "query",
          "type": "integer"
        },
        "minCreationTime": {
          "description": "Min value for job creation time, in milliseconds since the POSIX epoch. If set, only jobs created after or at this timestamp are returned.",
          "format": "uint64",
          "location": "query",
          "type": "string"
        },
        "pageToken": {
          "description": "Page token, returned by a previous call, to request the next page of results.",
          "location": "query",
          "type": "string"
        },
        "parentJobId": {
          "description": "If set, show only child jobs of the specified parent. Otherwise, show all top-level jobs.",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Project ID of the jobs to list.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projection": {
          "description": "Restrict information returned to a set of selected fields",
          "enum": [
            "full",
            "minimal"
          ],
          "enumDescriptions": [
            "Includes all job data",
            "Does not include the job configuration"
          ],
          "location": "query",
          "type": "string"
        },
        "stateFilter": {
          "description": "Filter for job state",
          "enum": [
            "done",
            "pending",
            "running"
          ],
          "enumDescriptions": [
            "Finished jobs",
            "Pending jobs",
            "Running jobs"
          ],
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "JobList"
    },
    {
      "operation_id": "bigquery.jobs.query",
      "resource": "jobs",
      "action": "query",
      "http_method": "POST",
      "path_template": "projects/{+projectId}/queries",
      "description": "Runs a BigQuery SQL query synchronously and returns query results if the query completes within a specified timeout.",
      "required_params": [
        "projectId"
      ],
      "parameters": {
        "projectId": {
          "description": "Required. Project ID of the query request.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "QueryRequest",
      "body_schema": {
        "description": "Describes the format of the jobs.query request.",
        "id": "QueryRequest",
        "properties": {
          "connectionProperties": {
            "description": "Optional. Connection properties which can modify the query behavior.",
            "items": {
              "$ref": "ConnectionProperty"
            },
            "type": "array"
          },
          "continuous": {
            "description": "[Optional] Specifies whether the query should be executed as a continuous query. The default value is false.",
            "type": "boolean"
          },
          "createSession": {
            "description": "Optional. If true, creates a new session using a randomly generated session_id. If false, runs query with an existing session_id passed in ConnectionProperty, otherwise runs query in non-session mode. The session location will be set to QueryRequest.location if it is present, otherwise it's set to the default location based on existing routing logic.",
            "type": "boolean"
          },
          "defaultDataset": {
            "$ref": "DatasetReference",
            "description": "Optional. Specifies the default datasetId and projectId to assume for any unqualified table names in the query. If not set, all table names in the query string must be qualified in the format 'datasetId.tableId'."
          },
          "destinationEncryptionConfiguration": {
            "$ref": "EncryptionConfiguration",
            "description": "Optional. Custom encryption configuration (e.g., Cloud KMS keys)"
          },
          "dryRun": {
            "description": "Optional. If set to true, BigQuery doesn't run the job. Instead, if the query is valid, BigQuery returns statistics about the job such as how many bytes would be processed. If the query is invalid, an error returns. The default value is false.",
            "type": "boolean"
          },
          "formatOptions": {
            "$ref": "DataFormatOptions",
            "description": "Optional. Output format adjustments."
          },
          "jobCreationMode": {
            "description": "Optional. If not set, jobs are always required. If set, the query request will follow the behavior described JobCreationMode.",
            "enum": [
              "JOB_CREATION_MODE_UNSPECIFIED",
              "JOB_CREATION_REQUIRED",
              "JOB_CREATION_OPTIONAL"
            ],
            "enumDescriptions": [
              "If unspecified JOB_CREATION_REQUIRED is the default.",
              "Default. Job creation is always required.",
              "Job creation is optional. Returning immediate results is prioritized. BigQuery will automatically determine if a Job needs to be created. The conditions under which BigQuery can decide to not create a Job are subject to change. If Job creation is required, JOB_CREATION_REQUIRED mode should be used, which is the default."
            ],
            "type": "string"
          },
          "jobTimeoutMs": {
            "description": "Optional. Job timeout in milliseconds. If this time limit is exceeded, BigQuery will attempt to stop a longer job, but may not always succeed in canceling it before the job completes. For example, a job that takes more than 60 seconds to complete has a better chance of being stopped than a job that takes 10 seconds to complete. This timeout applies to the query even if a job does not need to be created.",
            "format": "int64",
            "type": "string"
          },
          "kind": {
            "default": "bigquery#queryRequest",
            "description": "The resource type of the request.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The labels associated with this query. Labels can be used to organize and group query jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label keys must start with a letter and each label in the list must have a different key.",
            "type": "object"
          },
          "location": {
            "description": "The geographic location where the job should run. For more information, see how to [specify locations](https://cloud.google.com/bigquery/docs/locations#specify_locations).",
            "type": "string"
          },
          "maxResults": {
            "description": "Optional. The maximum number of rows of data to return per page of results. Setting this flag to a small value such as 1000 and then paging through results might improve reliability when the query result set is large. In addition to this limit, responses are also limited to 10 MB. By default, there is no maximum row count, and only the byte limit applies.",
            "format": "uint32",
            "type": "integer"
          },
          "maximumBytesBilled": {
            "description": "Optional. Limits the bytes billed for this query. Queries with bytes billed above this limit will fail (without incurring a charge). If unspecified, the project default is used.",
            "format": "int64",
            "type": "string"
          },
          "parameterMode": {
            "description": "GoogleSQL only. Set to POSITIONAL to use positional (?) query parameters or to NAMED to use named (@myparam) query parameters in this query.",
            "type": "string"
          },
          "preserveNulls": {
            "deprecated": true,
            "description": "This property is deprecated.",
            "type": "boolean"
          },
          "query": {
            "description": "Required. A query string to execute, using Google Standard SQL or legacy SQL syntax. Example: \"SELECT COUNT(f1) FROM myProjectId.myDatasetId.myTableId\".",
            "type": "string"
          },
          "queryParameters": {
            "description": "Query parameters for GoogleSQL queries.",
            "items": {
              "$ref": "QueryParameter"
            },
            "type": "array"
          },
          "requestId": {
            "description": "Optional. A unique user provided identifier to ensure idempotent behavior for queries. Note that this is different from the job_id. It has the following properties: 1. It is case-sensitive, limited to up to 36 ASCII characters. A UUID is recommended. 2. Read only queries can ignore this token since they are nullipotent by definition. 3. For the purposes of idempotency ensured by the request_id, a request is considered duplicate of another only if they have the same request_id and are actually duplicates. When determining whether a request is a duplicate of another request, all parameters in the request that may affect the result are considered. For example, query, connection_properties, query_parameters, use_legacy_sql are parameters that affect the result and are considered when determining whether a request is a duplicate, but properties like timeout_ms don't affect the result and are thus not considered. Dry run query requests are never considered duplicate of another request. 4. When a duplicate mutating query request is detected, it returns: a. the results of the mutation if it completes successfully within the timeout. b. the running operation if it is still in progress at the end of the timeout. 5. Its lifetime is limited to 15 minutes. In other words, if two requests are sent with the same request_id, but more than 15 minutes apart, idempotency is not guaranteed.",
            "type": "string"
          },
          "reservation": {
            "description": "Optional. The reservation that jobs.query request would use. User can specify a reservation to execute the job.query. The expected format is `projects/{project}/locations/{location}/reservations/{reservation}`.",
            "type": "string"
          },
          "timeoutMs": {
            "description": "Optional. Optional: Specifies the maximum amount of time, in milliseconds, that the client is willing to wait for the query to complete. By default, this limit is 10 seconds (10,000 milliseconds). If the query is complete, the jobComplete field in the response is true. If the query has not yet completed, jobComplete is false. You can request a longer timeout period in the timeoutMs field. However, the call is not guaranteed to wait for the specified timeout; it typically returns after around 200 seconds (200,000 milliseconds), even if the query is not complete. If jobComplete is false, you can continue to wait for the query to complete by calling the getQueryResults method until the jobComplete field in the getQueryResults response is true.",
            "format": "uint32",
            "type": "integer"
          },
          "useLegacySql": {
            "default": "true",
            "description": "Specifies whether to use BigQuery's legacy SQL dialect for this query. The default value is true. If set to false, the query will use BigQuery's GoogleSQL: https://cloud.google.com/bigquery/sql-reference/ When useLegacySql is set to false, the value of flattenResults is ignored; query will be run as if flattenResults is false.",
            "type": "boolean"
          },
          "useQueryCache": {
            "default": "true",
            "description": "Optional. Whether to look for the result in the query cache. The query cache is a best-effort cache that will be flushed whenever tables in the query are modified. The default value is true.",
            "type": "boolean"
          },
          "writeIncrementalResults": {
            "description": "Optional. This is only supported for SELECT query. If set, the query is allowed to write results incrementally to the temporary result table. This may incur a performance penalty. This option cannot be used with Legacy SQL. This feature is not yet available.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "QueryResponse"
    },
    {
      "operation_id": "bigquery.models.delete",
      "resource": "models",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/models/{+modelId}",
      "description": "Deletes the model specified by modelId from the dataset.",
      "required_params": [
        "datasetId",
        "modelId",
        "projectId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the model to delete.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "modelId": {
          "description": "Required. Model ID of the model to delete.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the model to delete.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": ""
    },
    {
      "operation_id": "bigquery.models.get",
      "resource": "models",
      "action": "get",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/models/{+modelId}",
      "description": "Gets the specified model resource by model ID.",
      "required_params": [
        "datasetId",
        "modelId",
        "projectId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the requested model.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "modelId": {
          "description": "Required. Model ID of the requested model.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the requested model.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "Model"
    },
    {
      "operation_id": "bigquery.models.list",
      "resource": "models",
      "action": "list",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/models",
      "description": "Lists all models in the specified dataset. Requires the READER dataset role. After retrieving the list of models, you can get information about a particular model by calling the models.get method.",
      "required_params": [
        "datasetId",
        "projectId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the models to list.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "maxResults": {
          "description": "The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection.",
          "format": "uint32",
          "location": "query",
          "type": "integer"
        },
        "pageToken": {
          "description": "Page token, returned by a previous call to request the next page of results",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the models to list.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "ListModelsResponse"
    },
    {
      "operation_id": "bigquery.models.patch",
      "resource": "models",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/models/{+modelId}",
      "description": "Patch specific fields in the specified model.",
      "required_params": [
        "datasetId",
        "modelId",
        "projectId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the model to patch.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "modelId": {
          "description": "Required. Model ID of the model to patch.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the model to patch.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Model",
      "body_schema": {
        "id": "Model",
        "properties": {
          "bestTrialId": {
            "deprecated": true,
            "description": "The best trial_id across all training runs.",
            "format": "int64",
            "type": "string"
          },
          "creationTime": {
            "description": "Output only. The time when this model was created, in millisecs since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "defaultTrialId": {
            "description": "Output only. The default trial_id to use in TVFs when the trial_id is not passed in. For single-objective [hyperparameter tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, this is the best trial ID. For multi-objective [hyperparameter tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, this is the smallest trial ID among all Pareto optimal trials.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-friendly description of this model.",
            "type": "string"
          },
          "encryptionConfiguration": {
            "$ref": "EncryptionConfiguration",
            "description": "Custom encryption configuration (e.g., Cloud KMS keys). This shows the encryption configuration of the model data while stored in BigQuery storage. This field can be used with PatchModel to update encryption key for an already encrypted model."
          },
          "etag": {
            "description": "Output only. A hash of this resource.",
            "readOnly": true,
            "type": "string"
          },
          "expirationTime": {
            "description": "Optional. The time when this model expires, in milliseconds since the epoch. If not present, the model will persist indefinitely. Expired models will be deleted and their storage reclaimed. The defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime on newly created models.",
            "format": "int64",
            "type": "string"
          },
          "featureColumns": {
            "description": "Output only. Input feature columns for the model inference. If the model is trained with TRANSFORM clause, these are the input of the TRANSFORM clause.",
            "items": {
              "$ref": "StandardSqlField"
            },
            "readOnly": true,
            "type": "array"
          },
          "friendlyName": {
            "description": "Optional. A descriptive name for this model.",
            "type": "string"
          },
          "hparamSearchSpaces": {
            "$ref": "HparamSearchSpaces",
            "description": "Output only. All hyperparameter search spaces in this model.",
            "readOnly": true
          },
          "hparamTrials": {
            "description": "Output only. Trials of a [hyperparameter tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) model sorted by trial_id.",
            "items": {
              "$ref": "HparamTuningTrial"
            },
            "readOnly": true,
            "type": "array"
          },
          "labelColumns": {
            "description": "Output only. Label columns that were used to train this model. The output of the model will have a \"predicted_\" prefix to these columns.",
            "items": {
              "$ref": "StandardSqlField"
            },
            "readOnly": true,
            "type": "array"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels associated with this model. You can use these to organize and group your models. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.",
            "type": "object"
          },
          "lastModifiedTime": {
            "description": "Output only. The time when this model was last modified, in millisecs since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Output only. The geographic location where the model resides. This value is inherited from the dataset.",
            "readOnly": true,
            "type": "string"
          },
          "modelReference": {
            "$ref": "ModelReference",
            "description": "Required. Unique identifier for this model."
          },
          "modelType": {
            "description": "Output only. Type of the model resource.",
            "enum": [
              "MODEL_TYPE_UNSPECIFIED",
              "LINEAR_REGRESSION",
              "LOGISTIC_REGRESSION",
              "KMEANS",
              "MATRIX_FACTORIZATION",
              "DNN_CLASSIFIER",
              "TENSORFLOW",
              "DNN_REGRESSOR",
              "XGBOOST",
              "BOOSTED_TREE_REGRESSOR",
              "BOOSTED_TREE_CLASSIFIER",
              "ARIMA",
              "AUTOML_REGRESSOR",
              "AUTOML_CLASSIFIER",
              "PCA",
              "DNN_LINEAR_COMBINED_CLASSIFIER",
              "DNN_LINEAR_COMBINED_REGRESSOR",
              "AUTOENCODER",
              "ARIMA_PLUS",
              "ARIMA_PLUS_XREG",
              "RANDOM_FOREST_REGRESSOR",
              "RANDOM_FOREST_CLASSIFIER",
              "TENSORFLOW_LITE",
              "ONNX",
              "TRANSFORM_ONLY",
              "CONTRIBUTION_ANALYSIS"
            ],
            "enumDescriptions": [
              "Default value.",
              "Linear regression model.",
              "Logistic regression based classification model.",
              "K-means clustering model.",
              "Matrix factorization model.",
              "DNN classifier model.",
              "An imported TensorFlow model.",
              "DNN regressor model.",
              "An imported XGBoost model.",
              "Boosted tree regressor model.",
              "Boosted tree classifier model.",
              "ARIMA model.",
              "AutoML Tables regression model.",
              "AutoML Tables classification model.",
              "Prinpical Component Analysis model.",
              "Wide-and-deep classifier model.",
              "Wide-and-deep regressor model.",
              "Autoencoder model.",
              "New name for the ARIMA model.",
              "ARIMA with external regressors.",
              "Random forest regressor model.",
              "Random forest classifier model.",
              "An imported TensorFlow Lite model.",
              "An imported ONNX model.",
              "Model to capture the columns and logic in the TRANSFORM clause along with statistics useful for ML analytic functions.",
              "The contribution analysis model."
            ],
            "readOnly": true,
            "type": "string"
          },
          "optimalTrialIds": {
            "description": "Output only. For single-objective [hyperparameter tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, it only contains the best trial. For multi-objective [hyperparameter tuning](https://cloud.google.com/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, it contains all Pareto optimal trials sorted by trial_id.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "remoteModelInfo": {
            "$ref": "RemoteModelInfo",
            "description": "Output only. Remote model info",
            "readOnly": true
          },
          "trainingRuns": {
            "description": "Information for all training runs in increasing order of start_time.",
            "items": {
              "$ref": "TrainingRun"
            },
            "type": "array"
          },
          "transformColumns": {
            "description": "Output only. This field will be populated if a TRANSFORM clause was used to train a model. TRANSFORM clause (if used) takes feature_columns as input and outputs transform_columns. transform_columns then are used to train the model.",
            "items": {
              "$ref": "TransformColumn"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Model"
    },
    {
      "operation_id": "bigquery.projects.getServiceAccount",
      "resource": "projects",
      "action": "getServiceAccount",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/serviceAccount",
      "description": "RPC to get the service account for a project used for interactions with Google Cloud KMS",
      "required_params": [
        "projectId"
      ],
      "parameters": {
        "projectId": {
          "description": "Required. ID of the project.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GetServiceAccountResponse"
    },
    {
      "operation_id": "bigquery.projects.list",
      "resource": "projects",
      "action": "list",
      "http_method": "GET",
      "path_template": "projects",
      "description": "RPC to list projects to which the user has been granted any project role. Users of this method are encouraged to consider the [Resource Manager](https://cloud.google.com/resource-manager/docs/) API, which provides the underlying data for this method and has more capabilities.",
      "required_params": [],
      "parameters": {
        "maxResults": {
          "description": "`maxResults` unset returns all results, up to 50 per page. Additionally, the number of projects in a page may be fewer than `maxResults` because projects are retrieved and then filtered to only projects with the BigQuery API enabled.",
          "format": "uint32",
          "location": "query",
          "type": "integer"
        },
        "pageToken": {
          "description": "Page token, returned by a previous call, to request the next page of results. If not present, no further pages are present.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "ProjectList"
    },
    {
      "operation_id": "bigquery.routines.delete",
      "resource": "routines",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/routines/{+routineId}",
      "description": "Deletes the routine specified by routineId from the dataset.",
      "required_params": [
        "datasetId",
        "projectId",
        "routineId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the routine to delete",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the routine to delete",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "routineId": {
          "description": "Required. Routine ID of the routine to delete",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": ""
    },
    {
      "operation_id": "bigquery.routines.get",
      "resource": "routines",
      "action": "get",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/routines/{+routineId}",
      "description": "Gets the specified routine resource by routine ID.",
      "required_params": [
        "datasetId",
        "projectId",
        "routineId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the requested routine",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the requested routine",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "readMask": {
          "description": "If set, only the Routine fields in the field mask are returned in the response. If unset, all Routine fields are returned.",
          "format": "google-fieldmask",
          "location": "query",
          "type": "string"
        },
        "routineId": {
          "description": "Required. Routine ID of the requested routine",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "Routine"
    },
    {
      "operation_id": "bigquery.routines.getIamPolicy",
      "resource": "routines",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "location": "path",
          "pattern": "^projects/[^/]+/datasets/[^/]+/routines/[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GetIamPolicyRequest",
      "body_schema": {
        "description": "Request message for `GetIamPolicy` method.",
        "id": "GetIamPolicyRequest",
        "properties": {
          "options": {
            "$ref": "GetPolicyOptions",
            "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "bigquery.routines.insert",
      "resource": "routines",
      "action": "insert",
      "http_method": "POST",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/routines",
      "description": "Creates a new routine in the dataset.",
      "required_params": [
        "datasetId",
        "projectId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the new routine",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the new routine",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Routine",
      "body_schema": {
        "description": "A user-defined function or a stored procedure.",
        "id": "Routine",
        "properties": {
          "arguments": {
            "description": "Optional.",
            "items": {
              "$ref": "Argument"
            },
            "type": "array"
          },
          "creationTime": {
            "description": "Output only. The time when this routine was created, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "dataGovernanceType": {
            "description": "Optional. If set to `DATA_MASKING`, the function is validated and made available as a masking function. For more information, see [Create custom masking routines](https://cloud.google.com/bigquery/docs/user-defined-functions#custom-mask).",
            "enum": [
              "DATA_GOVERNANCE_TYPE_UNSPECIFIED",
              "DATA_MASKING"
            ],
            "enumDescriptions": [
              "The data governance type is unspecified.",
              "The data governance type is data masking."
            ],
            "type": "string"
          },
          "definitionBody": {
            "description": "Required. The body of the routine. For functions, this is the expression in the AS clause. If language=SQL, it is the substring inside (but excluding) the parentheses. For example, for the function created with the following statement: `CREATE FUNCTION JoinLines(x string, y string) as (concat(x, \"\\n\", y))` The definition_body is `concat(x, \"\\n\", y)` (\\n is not replaced with linebreak). If language=JAVASCRIPT, it is the evaluated string in the AS clause. For example, for the function created with the following statement: `CREATE FUNCTION f() RETURNS STRING LANGUAGE js AS 'return \"\\n\";\\n'` The definition_body is `return \"\\n\";\\n` Note that both \\n are replaced with linebreaks.",
            "type": "string"
          },
          "description": {
            "description": "Optional. The description of the routine, if defined.",
            "type": "string"
          },
          "determinismLevel": {
            "description": "Optional. The determinism level of the JavaScript UDF, if defined.",
            "enum": [
              "DETERMINISM_LEVEL_UNSPECIFIED",
              "DETERMINISTIC",
              "NOT_DETERMINISTIC"
            ],
            "enumDescriptions": [
              "The determinism of the UDF is unspecified.",
              "The UDF is deterministic, meaning that 2 function calls with the same inputs always produce the same result, even across 2 query runs.",
              "The UDF is not deterministic."
            ],
            "type": "string"
          },
          "etag": {
            "description": "Output only. A hash of this resource.",
            "readOnly": true,
            "type": "string"
          },
          "externalRuntimeOptions": {
            "$ref": "ExternalRuntimeOptions",
            "description": "Optional. Options for the runtime of the external system executing the routine. This field is only applicable for Python UDFs. [Preview](https://cloud.google.com/products/#product-launch-stages)"
          },
          "importedLibraries": {
            "description": "Optional. If language = \"JAVASCRIPT\", this field stores the path of the imported JAVASCRIPT libraries.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "language": {
            "description": "Optional. Defaults to \"SQL\" if remote_function_options field is absent, not set otherwise.",
            "enum": [
              "LANGUAGE_UNSPECIFIED",
              "SQL",
              "JAVASCRIPT",
              "PYTHON",
              "JAVA",
              "SCALA"
            ],
            "enumDescriptions": [
              "Default value.",
              "SQL language.",
              "JavaScript language.",
              "Python language.",
              "Java language.",
              "Scala language."
            ],
            "type": "string"
          },
          "lastModifiedTime": {
            "description": "Output only. The time when this routine was last modified, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "pythonOptions": {
            "$ref": "PythonOptions",
            "description": "Optional. Options for Python UDF. [Preview](https://cloud.google.com/products/#product-launch-stages)"
          },
          "remoteFunctionOptions": {
            "$ref": "RemoteFunctionOptions",
            "description": "Optional. Remote function specific options."
          },
          "returnTableType": {
            "$ref": "StandardSqlTableType",
            "description": "Optional. Can be set only if routine_type = \"TABLE_VALUED_FUNCTION\". If absent, the return table type is inferred from definition_body at query time in each query that references this routine. If present, then the columns in the evaluated table result will be cast to match the column types specified in return table type, at query time."
          },
          "returnType": {
            "$ref": "StandardSqlDataType",
            "description": "Optional if language = \"SQL\"; required otherwise. Cannot be set if routine_type = \"TABLE_VALUED_FUNCTION\". If absent, the return type is inferred from definition_body at query time in each query that references this routine. If present, then the evaluated result will be cast to the specified returned type at query time. For example, for the functions created with the following statements: * `CREATE FUNCTION Add(x FLOAT64, y FLOAT64) RETURNS FLOAT64 AS (x + y);` * `CREATE FUNCTION Increment(x FLOAT64) AS (Add(x, 1));` * `CREATE FUNCTION Decrement(x FLOAT64) RETURNS FLOAT64 AS (Add(x, -1));` The return_type is `{type_kind: \"FLOAT64\"}` for `Add` and `Decrement`, and is absent for `Increment` (inferred as FLOAT64 at query time). Suppose the function `Add` is replaced by `CREATE OR REPLACE FUNCTION Add(x INT64, y INT64) AS (x + y);` Then the inferred return type of `Increment` is automatically changed to INT64 at query time, while the return type of `Decrement` remains FLOAT64."
          },
          "routineReference": {
            "$ref": "RoutineReference",
            "description": "Required. Reference describing the ID of this routine."
          },
          "routineType": {
            "description": "Required. The type of routine.",
            "enum": [
              "ROUTINE_TYPE_UNSPECIFIED",
              "SCALAR_FUNCTION",
              "PROCEDURE",
              "TABLE_VALUED_FUNCTION",
              "AGGREGATE_FUNCTION"
            ],
            "enumDescriptions": [
              "Default value.",
              "Non-built-in persistent scalar function.",
              "Stored procedure.",
              "Non-built-in persistent TVF.",
              "Non-built-in persistent aggregate function."
            ],
            "type": "string"
          },
          "securityMode": {
            "description": "Optional. The security mode of the routine, if defined. If not defined, the security mode is automatically determined from the routine's configuration.",
            "enum": [
              "SECURITY_MODE_UNSPECIFIED",
              "DEFINER",
              "INVOKER"
            ],
            "enumDescriptions": [
              "The security mode of the routine is unspecified.",
              "The routine is to be executed with the privileges of the user who defines it.",
              "The routine is to be executed with the privileges of the user who invokes it."
            ],
            "type": "string"
          },
          "sparkOptions": {
            "$ref": "SparkOptions",
            "description": "Optional. Spark specific options."
          },
          "strictMode": {
            "description": "Optional. Use this option to catch many common errors. Error checking is not exhaustive, and successfully creating a procedure doesn't guarantee that the procedure will successfully execute at runtime. If `strictMode` is set to `TRUE`, the procedure body is further checked for errors such as non-existent tables or columns. The `CREATE PROCEDURE` statement fails if the body fails any of these checks. If `strictMode` is set to `FALSE`, the procedure body is checked only for syntax. For procedures that invoke themselves recursively, specify `strictMode=FALSE` to avoid non-existent procedure errors during validation. Default value is `TRUE`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Routine"
    },
    {
      "operation_id": "bigquery.routines.list",
      "resource": "routines",
      "action": "list",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/routines",
      "description": "Lists all routines in the specified dataset. Requires the READER dataset role.",
      "required_params": [
        "datasetId",
        "projectId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the routines to list",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "If set, then only the Routines matching this filter are returned. The supported format is `routineType:{RoutineType}`, where `{RoutineType}` is a RoutineType enum. For example: `routineType:SCALAR_FUNCTION`.",
          "location": "query",
          "type": "string"
        },
        "maxResults": {
          "description": "The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection.",
          "format": "uint32",
          "location": "query",
          "type": "integer"
        },
        "pageToken": {
          "description": "Page token, returned by a previous call, to request the next page of results",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the routines to list",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "readMask": {
          "description": "If set, then only the Routine fields in the field mask, as well as project_id, dataset_id and routine_id, are returned in the response. If unset, then the following Routine fields are returned: etag, project_id, dataset_id, routine_id, routine_type, creation_time, last_modified_time, and language.",
          "format": "google-fieldmask",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "ListRoutinesResponse"
    },
    {
      "operation_id": "bigquery.routines.setIamPolicy",
      "resource": "routines",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "location": "path",
          "pattern": "^projects/[^/]+/datasets/[^/]+/routines/[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "description": "Request message for `SetIamPolicy` method.",
        "id": "SetIamPolicyRequest",
        "properties": {
          "policy": {
            "$ref": "Policy",
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "bigquery.routines.testIamPermissions",
      "resource": "routines",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "location": "path",
          "pattern": "^projects/[^/]+/datasets/[^/]+/routines/[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "description": "Request message for `TestIamPermissions` method.",
        "id": "TestIamPermissionsRequest",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "bigquery.routines.update",
      "resource": "routines",
      "action": "update",
      "http_method": "PUT",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/routines/{+routineId}",
      "description": "Updates information in an existing routine. The update method replaces the entire Routine resource.",
      "required_params": [
        "datasetId",
        "projectId",
        "routineId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the routine to update",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the routine to update",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "routineId": {
          "description": "Required. Routine ID of the routine to update",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Routine",
      "body_schema": {
        "description": "A user-defined function or a stored procedure.",
        "id": "Routine",
        "properties": {
          "arguments": {
            "description": "Optional.",
            "items": {
              "$ref": "Argument"
            },
            "type": "array"
          },
          "creationTime": {
            "description": "Output only. The time when this routine was created, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "dataGovernanceType": {
            "description": "Optional. If set to `DATA_MASKING`, the function is validated and made available as a masking function. For more information, see [Create custom masking routines](https://cloud.google.com/bigquery/docs/user-defined-functions#custom-mask).",
            "enum": [
              "DATA_GOVERNANCE_TYPE_UNSPECIFIED",
              "DATA_MASKING"
            ],
            "enumDescriptions": [
              "The data governance type is unspecified.",
              "The data governance type is data masking."
            ],
            "type": "string"
          },
          "definitionBody": {
            "description": "Required. The body of the routine. For functions, this is the expression in the AS clause. If language=SQL, it is the substring inside (but excluding) the parentheses. For example, for the function created with the following statement: `CREATE FUNCTION JoinLines(x string, y string) as (concat(x, \"\\n\", y))` The definition_body is `concat(x, \"\\n\", y)` (\\n is not replaced with linebreak). If language=JAVASCRIPT, it is the evaluated string in the AS clause. For example, for the function created with the following statement: `CREATE FUNCTION f() RETURNS STRING LANGUAGE js AS 'return \"\\n\";\\n'` The definition_body is `return \"\\n\";\\n` Note that both \\n are replaced with linebreaks.",
            "type": "string"
          },
          "description": {
            "description": "Optional. The description of the routine, if defined.",
            "type": "string"
          },
          "determinismLevel": {
            "description": "Optional. The determinism level of the JavaScript UDF, if defined.",
            "enum": [
              "DETERMINISM_LEVEL_UNSPECIFIED",
              "DETERMINISTIC",
              "NOT_DETERMINISTIC"
            ],
            "enumDescriptions": [
              "The determinism of the UDF is unspecified.",
              "The UDF is deterministic, meaning that 2 function calls with the same inputs always produce the same result, even across 2 query runs.",
              "The UDF is not deterministic."
            ],
            "type": "string"
          },
          "etag": {
            "description": "Output only. A hash of this resource.",
            "readOnly": true,
            "type": "string"
          },
          "externalRuntimeOptions": {
            "$ref": "ExternalRuntimeOptions",
            "description": "Optional. Options for the runtime of the external system executing the routine. This field is only applicable for Python UDFs. [Preview](https://cloud.google.com/products/#product-launch-stages)"
          },
          "importedLibraries": {
            "description": "Optional. If language = \"JAVASCRIPT\", this field stores the path of the imported JAVASCRIPT libraries.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "language": {
            "description": "Optional. Defaults to \"SQL\" if remote_function_options field is absent, not set otherwise.",
            "enum": [
              "LANGUAGE_UNSPECIFIED",
              "SQL",
              "JAVASCRIPT",
              "PYTHON",
              "JAVA",
              "SCALA"
            ],
            "enumDescriptions": [
              "Default value.",
              "SQL language.",
              "JavaScript language.",
              "Python language.",
              "Java language.",
              "Scala language."
            ],
            "type": "string"
          },
          "lastModifiedTime": {
            "description": "Output only. The time when this routine was last modified, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "pythonOptions": {
            "$ref": "PythonOptions",
            "description": "Optional. Options for Python UDF. [Preview](https://cloud.google.com/products/#product-launch-stages)"
          },
          "remoteFunctionOptions": {
            "$ref": "RemoteFunctionOptions",
            "description": "Optional. Remote function specific options."
          },
          "returnTableType": {
            "$ref": "StandardSqlTableType",
            "description": "Optional. Can be set only if routine_type = \"TABLE_VALUED_FUNCTION\". If absent, the return table type is inferred from definition_body at query time in each query that references this routine. If present, then the columns in the evaluated table result will be cast to match the column types specified in return table type, at query time."
          },
          "returnType": {
            "$ref": "StandardSqlDataType",
            "description": "Optional if language = \"SQL\"; required otherwise. Cannot be set if routine_type = \"TABLE_VALUED_FUNCTION\". If absent, the return type is inferred from definition_body at query time in each query that references this routine. If present, then the evaluated result will be cast to the specified returned type at query time. For example, for the functions created with the following statements: * `CREATE FUNCTION Add(x FLOAT64, y FLOAT64) RETURNS FLOAT64 AS (x + y);` * `CREATE FUNCTION Increment(x FLOAT64) AS (Add(x, 1));` * `CREATE FUNCTION Decrement(x FLOAT64) RETURNS FLOAT64 AS (Add(x, -1));` The return_type is `{type_kind: \"FLOAT64\"}` for `Add` and `Decrement`, and is absent for `Increment` (inferred as FLOAT64 at query time). Suppose the function `Add` is replaced by `CREATE OR REPLACE FUNCTION Add(x INT64, y INT64) AS (x + y);` Then the inferred return type of `Increment` is automatically changed to INT64 at query time, while the return type of `Decrement` remains FLOAT64."
          },
          "routineReference": {
            "$ref": "RoutineReference",
            "description": "Required. Reference describing the ID of this routine."
          },
          "routineType": {
            "description": "Required. The type of routine.",
            "enum": [
              "ROUTINE_TYPE_UNSPECIFIED",
              "SCALAR_FUNCTION",
              "PROCEDURE",
              "TABLE_VALUED_FUNCTION",
              "AGGREGATE_FUNCTION"
            ],
            "enumDescriptions": [
              "Default value.",
              "Non-built-in persistent scalar function.",
              "Stored procedure.",
              "Non-built-in persistent TVF.",
              "Non-built-in persistent aggregate function."
            ],
            "type": "string"
          },
          "securityMode": {
            "description": "Optional. The security mode of the routine, if defined. If not defined, the security mode is automatically determined from the routine's configuration.",
            "enum": [
              "SECURITY_MODE_UNSPECIFIED",
              "DEFINER",
              "INVOKER"
            ],
            "enumDescriptions": [
              "The security mode of the routine is unspecified.",
              "The routine is to be executed with the privileges of the user who defines it.",
              "The routine is to be executed with the privileges of the user who invokes it."
            ],
            "type": "string"
          },
          "sparkOptions": {
            "$ref": "SparkOptions",
            "description": "Optional. Spark specific options."
          },
          "strictMode": {
            "description": "Optional. Use this option to catch many common errors. Error checking is not exhaustive, and successfully creating a procedure doesn't guarantee that the procedure will successfully execute at runtime. If `strictMode` is set to `TRUE`, the procedure body is further checked for errors such as non-existent tables or columns. The `CREATE PROCEDURE` statement fails if the body fails any of these checks. If `strictMode` is set to `FALSE`, the procedure body is checked only for syntax. For procedures that invoke themselves recursively, specify `strictMode=FALSE` to avoid non-existent procedure errors during validation. Default value is `TRUE`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Routine"
    },
    {
      "operation_id": "bigquery.rowAccessPolicies.batchDelete",
      "resource": "rowAccessPolicies",
      "action": "batchDelete",
      "http_method": "POST",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}/rowAccessPolicies:batchDelete",
      "description": "Deletes provided row access policies.",
      "required_params": [
        "datasetId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the table to delete the row access policies.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the table to delete the row access policies.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the table to delete the row access policies.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "BatchDeleteRowAccessPoliciesRequest",
      "body_schema": {
        "description": "Request message for the BatchDeleteRowAccessPoliciesRequest method.",
        "id": "BatchDeleteRowAccessPoliciesRequest",
        "properties": {
          "force": {
            "description": "If set to true, it deletes the row access policy even if it's the last row access policy on the table and the deletion will widen the access rather narrowing it.",
            "type": "boolean"
          },
          "policyIds": {
            "description": "Required. Policy IDs of the row access policies.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": ""
    },
    {
      "operation_id": "bigquery.rowAccessPolicies.delete",
      "resource": "rowAccessPolicies",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}/rowAccessPolicies/{+policyId}",
      "description": "Deletes a row access policy.",
      "required_params": [
        "datasetId",
        "policyId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the table to delete the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "If set to true, it deletes the row access policy even if it's the last row access policy on the table and the deletion will widen the access rather narrowing it.",
          "location": "query",
          "type": "boolean"
        },
        "policyId": {
          "description": "Required. Policy ID of the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the table to delete the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the table to delete the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": ""
    },
    {
      "operation_id": "bigquery.rowAccessPolicies.get",
      "resource": "rowAccessPolicies",
      "action": "get",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}/rowAccessPolicies/{+policyId}",
      "description": "Gets the specified row access policy by policy ID.",
      "required_params": [
        "datasetId",
        "policyId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the table to get the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "policyId": {
          "description": "Required. Policy ID of the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the table to get the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the table to get the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "RowAccessPolicy"
    },
    {
      "operation_id": "bigquery.rowAccessPolicies.getIamPolicy",
      "resource": "rowAccessPolicies",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "location": "path",
          "pattern": "^projects/[^/]+/datasets/[^/]+/tables/[^/]+/rowAccessPolicies/[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GetIamPolicyRequest",
      "body_schema": {
        "description": "Request message for `GetIamPolicy` method.",
        "id": "GetIamPolicyRequest",
        "properties": {
          "options": {
            "$ref": "GetPolicyOptions",
            "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "bigquery.rowAccessPolicies.insert",
      "resource": "rowAccessPolicies",
      "action": "insert",
      "http_method": "POST",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}/rowAccessPolicies",
      "description": "Creates a row access policy.",
      "required_params": [
        "datasetId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the table to get the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the table to get the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the table to get the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RowAccessPolicy",
      "body_schema": {
        "description": "Represents access on a subset of rows on the specified table, defined by its filter predicate. Access to the subset of rows is controlled by its IAM policy.",
        "id": "RowAccessPolicy",
        "properties": {
          "creationTime": {
            "description": "Output only. The time when this row access policy was created, in milliseconds since the epoch.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "etag": {
            "description": "Output only. A hash of this resource.",
            "readOnly": true,
            "type": "string"
          },
          "filterPredicate": {
            "description": "Required. A SQL boolean expression that represents the rows defined by this row access policy, similar to the boolean expression in a WHERE clause of a SELECT query on a table. References to other tables, routines, and temporary functions are not supported. Examples: region=\"EU\" date_field = CAST('2019-9-27' as DATE) nullable_field is not NULL numeric_field BETWEEN 1.0 AND 5.0",
            "type": "string"
          },
          "grantees": {
            "description": "Optional. Input only. The optional list of iam_member users or groups that specifies the initial members that the row-level access policy should be created with. grantees types: - \"user:alice@example.com\": An email address that represents a specific Google account. - \"serviceAccount:my-other-app@appspot.gserviceaccount.com\": An email address that represents a service account. - \"group:admins@example.com\": An email address that represents a Google group. - \"domain:example.com\":The Google Workspace domain (primary) that represents all the users of that domain. - \"allAuthenticatedUsers\": A special identifier that represents all service accounts and all users on the internet who have authenticated with a Google Account. This identifier includes accounts that aren't connected to a Google Workspace or Cloud Identity domain, such as personal Gmail accounts. Users who aren't authenticated, such as anonymous visitors, aren't included. - \"allUsers\":A special identifier that represents anyone who is on the internet, including authenticated and unauthenticated users. Because BigQuery requires authentication before a user can access the service, allUsers includes only authenticated users.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lastModifiedTime": {
            "description": "Output only. The time when this row access policy was last modified, in milliseconds since the epoch.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "rowAccessPolicyReference": {
            "$ref": "RowAccessPolicyReference",
            "description": "Required. Reference describing the ID of this row access policy."
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "RowAccessPolicy"
    },
    {
      "operation_id": "bigquery.rowAccessPolicies.list",
      "resource": "rowAccessPolicies",
      "action": "list",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}/rowAccessPolicies",
      "description": "Lists all row access policies on the specified table.",
      "required_params": [
        "datasetId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of row access policies to list.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection.",
          "format": "int32",
          "location": "query",
          "type": "integer"
        },
        "pageToken": {
          "description": "Page token, returned by a previous call, to request the next page of results.",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the row access policies to list.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the table to list row access policies.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "ListRowAccessPoliciesResponse"
    },
    {
      "operation_id": "bigquery.rowAccessPolicies.testIamPermissions",
      "resource": "rowAccessPolicies",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "location": "path",
          "pattern": "^projects/[^/]+/datasets/[^/]+/tables/[^/]+/rowAccessPolicies/[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "description": "Request message for `TestIamPermissions` method.",
        "id": "TestIamPermissionsRequest",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "bigquery.rowAccessPolicies.update",
      "resource": "rowAccessPolicies",
      "action": "update",
      "http_method": "PUT",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}/rowAccessPolicies/{+policyId}",
      "description": "Updates a row access policy.",
      "required_params": [
        "datasetId",
        "policyId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the table to get the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "policyId": {
          "description": "Required. Policy ID of the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the table to get the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the table to get the row access policy.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RowAccessPolicy",
      "body_schema": {
        "description": "Represents access on a subset of rows on the specified table, defined by its filter predicate. Access to the subset of rows is controlled by its IAM policy.",
        "id": "RowAccessPolicy",
        "properties": {
          "creationTime": {
            "description": "Output only. The time when this row access policy was created, in milliseconds since the epoch.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "etag": {
            "description": "Output only. A hash of this resource.",
            "readOnly": true,
            "type": "string"
          },
          "filterPredicate": {
            "description": "Required. A SQL boolean expression that represents the rows defined by this row access policy, similar to the boolean expression in a WHERE clause of a SELECT query on a table. References to other tables, routines, and temporary functions are not supported. Examples: region=\"EU\" date_field = CAST('2019-9-27' as DATE) nullable_field is not NULL numeric_field BETWEEN 1.0 AND 5.0",
            "type": "string"
          },
          "grantees": {
            "description": "Optional. Input only. The optional list of iam_member users or groups that specifies the initial members that the row-level access policy should be created with. grantees types: - \"user:alice@example.com\": An email address that represents a specific Google account. - \"serviceAccount:my-other-app@appspot.gserviceaccount.com\": An email address that represents a service account. - \"group:admins@example.com\": An email address that represents a Google group. - \"domain:example.com\":The Google Workspace domain (primary) that represents all the users of that domain. - \"allAuthenticatedUsers\": A special identifier that represents all service accounts and all users on the internet who have authenticated with a Google Account. This identifier includes accounts that aren't connected to a Google Workspace or Cloud Identity domain, such as personal Gmail accounts. Users who aren't authenticated, such as anonymous visitors, aren't included. - \"allUsers\":A special identifier that represents anyone who is on the internet, including authenticated and unauthenticated users. Because BigQuery requires authentication before a user can access the service, allUsers includes only authenticated users.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lastModifiedTime": {
            "description": "Output only. The time when this row access policy was last modified, in milliseconds since the epoch.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "rowAccessPolicyReference": {
            "$ref": "RowAccessPolicyReference",
            "description": "Required. Reference describing the ID of this row access policy."
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "RowAccessPolicy"
    },
    {
      "operation_id": "bigquery.tabledata.insertAll",
      "resource": "tabledata",
      "action": "insertAll",
      "http_method": "POST",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}/insertAll",
      "description": "Streams data into BigQuery one record at a time without needing to run a load job.",
      "required_params": [
        "datasetId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the destination.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the destination.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the destination.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TableDataInsertAllRequest",
      "body_schema": {
        "description": "Request for sending a single streaming insert.",
        "id": "TableDataInsertAllRequest",
        "properties": {
          "ignoreUnknownValues": {
            "description": "Optional. Accept rows that contain values that do not match the schema. The unknown values are ignored. Default is false, which treats unknown values as errors.",
            "type": "boolean"
          },
          "kind": {
            "default": "bigquery#tableDataInsertAllRequest",
            "description": "Optional. The resource type of the response. The value is not checked at the backend. Historically, it has been set to \"bigquery#tableDataInsertAllRequest\" but you are not required to set it.",
            "type": "string"
          },
          "rows": {
            "items": {
              "description": "Data for a single insertion row.",
              "properties": {
                "insertId": {
                  "description": "Insertion ID for best-effort deduplication. This feature is not recommended, and users seeking stronger insertion semantics are encouraged to use other mechanisms such as the BigQuery Write API.",
                  "type": "string"
                },
                "json": {
                  "$ref": "JsonObject",
                  "description": "Data for a single row."
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "skipInvalidRows": {
            "description": "Optional. Insert all valid rows of a request, even if invalid rows exist. The default value is false, which causes the entire request to fail if any invalid rows exist.",
            "type": "boolean"
          },
          "templateSuffix": {
            "description": "Optional. If specified, treats the destination table as a base template, and inserts the rows into an instance table named \"{destination}{templateSuffix}\". BigQuery will manage creation of the instance table, using the schema of the base template table. See https://cloud.google.com/bigquery/streaming-data-into-bigquery#template-tables for considerations when working with templates tables.",
            "type": "string"
          },
          "traceId": {
            "description": "Optional. Unique request trace id. Used for debugging purposes only. It is case-sensitive, limited to up to 36 ASCII characters. A UUID is recommended.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/bigquery.insertdata",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TableDataInsertAllResponse"
    },
    {
      "operation_id": "bigquery.tabledata.list",
      "resource": "tabledata",
      "action": "list",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}/data",
      "description": "List the content of a table in rows.",
      "required_params": [
        "datasetId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset id of the table to list.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "formatOptions.useInt64Timestamp": {
          "description": "Optional. Output timestamp as usec int64. Default is false.",
          "location": "query",
          "type": "boolean"
        },
        "maxResults": {
          "description": "Row limit of the table.",
          "format": "uint32",
          "location": "query",
          "type": "integer"
        },
        "pageToken": {
          "description": "To retrieve the next page of table data, set this field to the string provided in the pageToken field of the response body from your previous call to tabledata.list.",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project id of the table to list.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "selectedFields": {
          "description": "Subset of fields to return, supports select into sub fields. Example: selected_fields = \"a,e.d.f\";",
          "location": "query",
          "type": "string"
        },
        "startIndex": {
          "description": "Start row index of the table.",
          "format": "uint64",
          "location": "query",
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table id of the table to list.",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "TableDataList"
    },
    {
      "operation_id": "bigquery.tables.delete",
      "resource": "tables",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}",
      "description": "Deletes the table specified by tableId from the dataset. If the table contains data, all the data will be deleted.",
      "required_params": [
        "datasetId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the table to delete",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the table to delete",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the table to delete",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": ""
    },
    {
      "operation_id": "bigquery.tables.get",
      "resource": "tables",
      "action": "get",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}",
      "description": "Gets the specified table resource by table ID. This method does not return the data in the table, it only returns the table resource, which describes the structure of this table.",
      "required_params": [
        "datasetId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the requested table",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the requested table",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "selectedFields": {
          "description": "List of table schema fields to return (comma-separated). If unspecified, all fields are returned. A fieldMask cannot be used here because the fields will automatically be converted from camelCase to snake_case and the conversion will fail if there are underscores. Since these are fields in BigQuery table schemas, underscores are allowed.",
          "location": "query",
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the requested table",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "view": {
          "description": "Optional. Specifies the view that determines which table information is returned. By default, basic table information and storage statistics (STORAGE_STATS) are returned.",
          "enum": [
            "TABLE_METADATA_VIEW_UNSPECIFIED",
            "BASIC",
            "STORAGE_STATS",
            "FULL"
          ],
          "enumDescriptions": [
            "The default value. Default to the STORAGE_STATS view.",
            "Includes basic table information including schema and partitioning specification. This view does not include storage statistics such as numRows or numBytes. This view is significantly more efficient and should be used to support high query rates.",
            "Includes all information in the BASIC view as well as storage statistics (numBytes, numLongTermBytes, numRows and lastModifiedTime).",
            "Includes all table information, including storage statistics. It returns same information as STORAGE_STATS view, but may contain additional information in the future."
          ],
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "Table"
    },
    {
      "operation_id": "bigquery.tables.getIamPolicy",
      "resource": "tables",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "location": "path",
          "pattern": "^projects/[^/]+/datasets/[^/]+/tables/[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GetIamPolicyRequest",
      "body_schema": {
        "description": "Request message for `GetIamPolicy` method.",
        "id": "GetIamPolicyRequest",
        "properties": {
          "options": {
            "$ref": "GetPolicyOptions",
            "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "bigquery.tables.insert",
      "resource": "tables",
      "action": "insert",
      "http_method": "POST",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables",
      "description": "Creates a new, empty table in the dataset.",
      "required_params": [
        "datasetId",
        "projectId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the new table",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the new table",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Table",
      "body_schema": {
        "id": "Table",
        "properties": {
          "biglakeConfiguration": {
            "$ref": "BigLakeConfiguration",
            "description": "Optional. Specifies the configuration of a BigQuery table for Apache Iceberg."
          },
          "cloneDefinition": {
            "$ref": "CloneDefinition",
            "description": "Output only. Contains information about the clone. This value is set via the clone operation.",
            "readOnly": true
          },
          "clustering": {
            "$ref": "Clustering",
            "description": "Clustering specification for the table. Must be specified with time-based partitioning, data in the table will be first partitioned and subsequently clustered."
          },
          "creationTime": {
            "description": "Output only. The time when this table was created, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "defaultCollation": {
            "description": "Optional. Defines the default collation specification of new STRING fields in the table. During table creation or update, if a STRING field is added to this table without explicit collation specified, then the table inherits the table default collation. A change to this field affects only fields added afterwards, and does not alter the existing fields. The following values are supported: * 'und:ci': undetermined locale, case insensitive. * '': empty string. Default to case-sensitive behavior.",
            "type": "string"
          },
          "defaultRoundingMode": {
            "description": "Optional. Defines the default rounding mode specification of new decimal fields (NUMERIC OR BIGNUMERIC) in the table. During table creation or update, if a decimal field is added to this table without an explicit rounding mode specified, then the field inherits the table default rounding mode. Changing this field doesn't affect existing fields.",
            "enum": [
              "ROUNDING_MODE_UNSPECIFIED",
              "ROUND_HALF_AWAY_FROM_ZERO",
              "ROUND_HALF_EVEN"
            ],
            "enumDescriptions": [
              "Unspecified will default to using ROUND_HALF_AWAY_FROM_ZERO.",
              "ROUND_HALF_AWAY_FROM_ZERO rounds half values away from zero when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5, 1.6, 1.7, 1.8, 1.9 => 2",
              "ROUND_HALF_EVEN rounds half values to the nearest even value when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5 => 2 1.6, 1.7, 1.8, 1.9 => 2 2.5 => 2"
            ],
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-friendly description of this table.",
            "type": "string"
          },
          "encryptionConfiguration": {
            "$ref": "EncryptionConfiguration",
            "description": "Custom encryption configuration (e.g., Cloud KMS keys)."
          },
          "etag": {
            "description": "Output only. A hash of this resource.",
            "readOnly": true,
            "type": "string"
          },
          "expirationTime": {
            "description": "Optional. The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed. The defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime on newly created tables.",
            "format": "int64",
            "type": "string"
          },
          "externalCatalogTableOptions": {
            "$ref": "ExternalCatalogTableOptions",
            "description": "Optional. Options defining open source compatible table."
          },
          "externalDataConfiguration": {
            "$ref": "ExternalDataConfiguration",
            "description": "Optional. Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these properties, the data source can then be queried as if it were a standard BigQuery table."
          },
          "friendlyName": {
            "description": "Optional. A descriptive name for this table.",
            "type": "string"
          },
          "id": {
            "description": "Output only. An opaque ID uniquely identifying the table.",
            "readOnly": true,
            "type": "string"
          },
          "kind": {
            "default": "bigquery#table",
            "description": "The type of resource ID.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels associated with this table. You can use these to organize and group your tables. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.",
            "type": "object"
          },
          "lastModifiedTime": {
            "description": "Output only. The time when this table was last modified, in milliseconds since the epoch.",
            "format": "uint64",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Output only. The geographic location where the table resides. This value is inherited from the dataset.",
            "readOnly": true,
            "type": "string"
          },
          "managedTableType": {
            "description": "Optional. If set, overrides the default managed table type configured in the dataset.",
            "enum": [
              "MANAGED_TABLE_TYPE_UNSPECIFIED",
              "NATIVE",
              "BIGLAKE"
            ],
            "enumDescriptions": [
              "No managed table type specified.",
              "The managed table is a native BigQuery table.",
              "The managed table is a BigLake table for Apache Iceberg in BigQuery."
            ],
            "type": "string"
          },
          "materializedView": {
            "$ref": "MaterializedViewDefinition",
            "description": "Optional. The materialized view definition."
          },
          "materializedViewStatus": {
            "$ref": "MaterializedViewStatus",
            "description": "Output only. The materialized view status.",
            "readOnly": true
          },
          "maxStaleness": {
            "description": "Optional. The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a string encoding of sql IntervalValue type.",
            "type": "string"
          },
          "model": {
            "$ref": "ModelDefinition",
            "description": "Deprecated."
          },
          "numActiveLogicalBytes": {
            "description": "Output only. Number of logical bytes that are less than 90 days old.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numActivePhysicalBytes": {
            "description": "Output only. Number of physical bytes less than 90 days old. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numBytes": {
            "description": "Output only. The size of this table in logical bytes, excluding any data in the streaming buffer.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numCurrentPhysicalBytes": {
            "description": "Output only. Number of physical bytes used by current live data storage. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numLongTermBytes": {
            "description": "Output only. The number of logical bytes in the table that are considered \"long-term storage\".",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numLongTermLogicalBytes": {
            "description": "Output only. Number of logical bytes that are more than 90 days old.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numLongTermPhysicalBytes": {
            "description": "Output only. Number of physical bytes more than 90 days old. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numPartitions": {
            "description": "Output only. The number of partitions present in the table or materialized view. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numPhysicalBytes": {
            "description": "Output only. The physical size of this table in bytes. This includes storage used for time travel.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numRows": {
            "description": "Output only. The number of rows of data in this table, excluding any data in the streaming buffer.",
            "format": "uint64",
            "readOnly": true,
            "type": "string"
          },
          "numTimeTravelPhysicalBytes": {
            "description": "Output only. Number of physical bytes used by time travel storage (deleted or changed data). This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numTotalLogicalBytes": {
            "description": "Output only. Total number of logical bytes in the table or materialized view.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numTotalPhysicalBytes": {
            "description": "Output only. The physical size of this table in bytes. This also includes storage used for time travel. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "partitionDefinition": {
            "$ref": "PartitioningDefinition",
            "description": "Optional. The partition information for all table formats, including managed partitioned tables, hive partitioned tables, iceberg partitioned, and metastore partitioned tables. This field is only populated for metastore partitioned tables. For other table formats, this is an output only field."
          },
          "rangePartitioning": {
            "$ref": "RangePartitioning",
            "description": "If specified, configures range partitioning for this table."
          },
          "replicas": {
            "description": "Optional. Output only. Table references of all replicas currently active on the table.",
            "items": {
              "$ref": "TableReference"
            },
            "readOnly": true,
            "type": "array"
          },
          "requirePartitionFilter": {
            "default": "false",
            "description": "Optional. If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified.",
            "type": "boolean"
          },
          "resourceTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "[Optional] The tags associated with this table. Tag keys are globally unique. See additional information on [tags](https://cloud.google.com/iam/docs/tags-access-control#definitions). An object containing a list of \"key\": value pairs. The key is the namespaced friendly name of the tag key, e.g. \"12345/environment\" where 12345 is parent id. The value is the friendly short name of the tag value, e.g. \"production\".",
            "type": "object"
          },
          "restrictions": {
            "$ref": "RestrictionConfig",
            "description": "Optional. Output only. Restriction config for table. If set, restrict certain accesses on the table based on the config. See [Data egress](https://cloud.google.com/bigquery/docs/analytics-hub-introduction#data_egress) for more details.",
            "readOnly": true
          },
          "schema": {
            "$ref": "TableSchema",
            "description": "Optional. Describes the schema of this table."
          },
          "selfLink": {
            "description": "Output only. A URL that can be used to access this resource again.",
            "readOnly": true,
            "type": "string"
          },
          "snapshotDefinition": {
            "$ref": "SnapshotDefinition",
            "description": "Output only. Contains information about the snapshot. This value is set via snapshot creation.",
            "readOnly": true
          },
          "streamingBuffer": {
            "$ref": "Streamingbuffer",
            "description": "Output only. Contains information regarding this table's streaming buffer, if one is present. This field will be absent if the table is not being streamed to or if there is no data in the streaming buffer.",
            "readOnly": true
          },
          "tableConstraints": {
            "$ref": "TableConstraints",
            "description": "Optional. Tables Primary Key and Foreign Key information"
          },
          "tableReference": {
            "$ref": "TableReference",
            "description": "Required. Reference describing the ID of this table."
          },
          "tableReplicationInfo": {
            "$ref": "TableReplicationInfo",
            "description": "Optional. Table replication info for table created `AS REPLICA` DDL like: `CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`"
          },
          "timePartitioning": {
            "$ref": "TimePartitioning",
            "description": "If specified, configures time-based partitioning for this table."
          },
          "type": {
            "description": "Output only. Describes the table type. The following values are supported: * `TABLE`: A normal BigQuery table. * `VIEW`: A virtual table defined by a SQL query. * `EXTERNAL`: A table that references data stored in an external storage system, such as Google Cloud Storage. * `MATERIALIZED_VIEW`: A precomputed view defined by a SQL query. * `SNAPSHOT`: An immutable BigQuery table that preserves the contents of a base table at a particular time. See additional information on [table snapshots](https://cloud.google.com/bigquery/docs/table-snapshots-intro). The default value is `TABLE`.",
            "readOnly": true,
            "type": "string"
          },
          "view": {
            "$ref": "ViewDefinition",
            "description": "Optional. The view definition."
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Table"
    },
    {
      "operation_id": "bigquery.tables.list",
      "resource": "tables",
      "action": "list",
      "http_method": "GET",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables",
      "description": "Lists all tables in the specified dataset. Requires the READER dataset role.",
      "required_params": [
        "datasetId",
        "projectId"
      ],
      "parameters": {
        "datasetId": {
          "description": "Required. Dataset ID of the tables to list",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "maxResults": {
          "description": "The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection.",
          "format": "uint32",
          "location": "query",
          "type": "integer"
        },
        "pageToken": {
          "description": "Page token, returned by a previous call, to request the next page of results",
          "location": "query",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the tables to list",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "TableList"
    },
    {
      "operation_id": "bigquery.tables.patch",
      "resource": "tables",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}",
      "description": "Updates information in an existing table. The update method replaces the entire table resource, whereas the patch method only replaces fields that are provided in the submitted table resource. This method supports RFC5789 patch semantics.",
      "required_params": [
        "datasetId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "autodetect_schema": {
          "description": "Optional.  When true will autodetect schema, else will keep original schema",
          "location": "query",
          "type": "boolean"
        },
        "datasetId": {
          "description": "Required. Dataset ID of the table to update",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the table to update",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the table to update",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Table",
      "body_schema": {
        "id": "Table",
        "properties": {
          "biglakeConfiguration": {
            "$ref": "BigLakeConfiguration",
            "description": "Optional. Specifies the configuration of a BigQuery table for Apache Iceberg."
          },
          "cloneDefinition": {
            "$ref": "CloneDefinition",
            "description": "Output only. Contains information about the clone. This value is set via the clone operation.",
            "readOnly": true
          },
          "clustering": {
            "$ref": "Clustering",
            "description": "Clustering specification for the table. Must be specified with time-based partitioning, data in the table will be first partitioned and subsequently clustered."
          },
          "creationTime": {
            "description": "Output only. The time when this table was created, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "defaultCollation": {
            "description": "Optional. Defines the default collation specification of new STRING fields in the table. During table creation or update, if a STRING field is added to this table without explicit collation specified, then the table inherits the table default collation. A change to this field affects only fields added afterwards, and does not alter the existing fields. The following values are supported: * 'und:ci': undetermined locale, case insensitive. * '': empty string. Default to case-sensitive behavior.",
            "type": "string"
          },
          "defaultRoundingMode": {
            "description": "Optional. Defines the default rounding mode specification of new decimal fields (NUMERIC OR BIGNUMERIC) in the table. During table creation or update, if a decimal field is added to this table without an explicit rounding mode specified, then the field inherits the table default rounding mode. Changing this field doesn't affect existing fields.",
            "enum": [
              "ROUNDING_MODE_UNSPECIFIED",
              "ROUND_HALF_AWAY_FROM_ZERO",
              "ROUND_HALF_EVEN"
            ],
            "enumDescriptions": [
              "Unspecified will default to using ROUND_HALF_AWAY_FROM_ZERO.",
              "ROUND_HALF_AWAY_FROM_ZERO rounds half values away from zero when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5, 1.6, 1.7, 1.8, 1.9 => 2",
              "ROUND_HALF_EVEN rounds half values to the nearest even value when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5 => 2 1.6, 1.7, 1.8, 1.9 => 2 2.5 => 2"
            ],
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-friendly description of this table.",
            "type": "string"
          },
          "encryptionConfiguration": {
            "$ref": "EncryptionConfiguration",
            "description": "Custom encryption configuration (e.g., Cloud KMS keys)."
          },
          "etag": {
            "description": "Output only. A hash of this resource.",
            "readOnly": true,
            "type": "string"
          },
          "expirationTime": {
            "description": "Optional. The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed. The defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime on newly created tables.",
            "format": "int64",
            "type": "string"
          },
          "externalCatalogTableOptions": {
            "$ref": "ExternalCatalogTableOptions",
            "description": "Optional. Options defining open source compatible table."
          },
          "externalDataConfiguration": {
            "$ref": "ExternalDataConfiguration",
            "description": "Optional. Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these properties, the data source can then be queried as if it were a standard BigQuery table."
          },
          "friendlyName": {
            "description": "Optional. A descriptive name for this table.",
            "type": "string"
          },
          "id": {
            "description": "Output only. An opaque ID uniquely identifying the table.",
            "readOnly": true,
            "type": "string"
          },
          "kind": {
            "default": "bigquery#table",
            "description": "The type of resource ID.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels associated with this table. You can use these to organize and group your tables. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.",
            "type": "object"
          },
          "lastModifiedTime": {
            "description": "Output only. The time when this table was last modified, in milliseconds since the epoch.",
            "format": "uint64",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Output only. The geographic location where the table resides. This value is inherited from the dataset.",
            "readOnly": true,
            "type": "string"
          },
          "managedTableType": {
            "description": "Optional. If set, overrides the default managed table type configured in the dataset.",
            "enum": [
              "MANAGED_TABLE_TYPE_UNSPECIFIED",
              "NATIVE",
              "BIGLAKE"
            ],
            "enumDescriptions": [
              "No managed table type specified.",
              "The managed table is a native BigQuery table.",
              "The managed table is a BigLake table for Apache Iceberg in BigQuery."
            ],
            "type": "string"
          },
          "materializedView": {
            "$ref": "MaterializedViewDefinition",
            "description": "Optional. The materialized view definition."
          },
          "materializedViewStatus": {
            "$ref": "MaterializedViewStatus",
            "description": "Output only. The materialized view status.",
            "readOnly": true
          },
          "maxStaleness": {
            "description": "Optional. The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a string encoding of sql IntervalValue type.",
            "type": "string"
          },
          "model": {
            "$ref": "ModelDefinition",
            "description": "Deprecated."
          },
          "numActiveLogicalBytes": {
            "description": "Output only. Number of logical bytes that are less than 90 days old.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numActivePhysicalBytes": {
            "description": "Output only. Number of physical bytes less than 90 days old. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numBytes": {
            "description": "Output only. The size of this table in logical bytes, excluding any data in the streaming buffer.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numCurrentPhysicalBytes": {
            "description": "Output only. Number of physical bytes used by current live data storage. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numLongTermBytes": {
            "description": "Output only. The number of logical bytes in the table that are considered \"long-term storage\".",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numLongTermLogicalBytes": {
            "description": "Output only. Number of logical bytes that are more than 90 days old.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numLongTermPhysicalBytes": {
            "description": "Output only. Number of physical bytes more than 90 days old. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numPartitions": {
            "description": "Output only. The number of partitions present in the table or materialized view. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numPhysicalBytes": {
            "description": "Output only. The physical size of this table in bytes. This includes storage used for time travel.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numRows": {
            "description": "Output only. The number of rows of data in this table, excluding any data in the streaming buffer.",
            "format": "uint64",
            "readOnly": true,
            "type": "string"
          },
          "numTimeTravelPhysicalBytes": {
            "description": "Output only. Number of physical bytes used by time travel storage (deleted or changed data). This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numTotalLogicalBytes": {
            "description": "Output only. Total number of logical bytes in the table or materialized view.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numTotalPhysicalBytes": {
            "description": "Output only. The physical size of this table in bytes. This also includes storage used for time travel. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "partitionDefinition": {
            "$ref": "PartitioningDefinition",
            "description": "Optional. The partition information for all table formats, including managed partitioned tables, hive partitioned tables, iceberg partitioned, and metastore partitioned tables. This field is only populated for metastore partitioned tables. For other table formats, this is an output only field."
          },
          "rangePartitioning": {
            "$ref": "RangePartitioning",
            "description": "If specified, configures range partitioning for this table."
          },
          "replicas": {
            "description": "Optional. Output only. Table references of all replicas currently active on the table.",
            "items": {
              "$ref": "TableReference"
            },
            "readOnly": true,
            "type": "array"
          },
          "requirePartitionFilter": {
            "default": "false",
            "description": "Optional. If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified.",
            "type": "boolean"
          },
          "resourceTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "[Optional] The tags associated with this table. Tag keys are globally unique. See additional information on [tags](https://cloud.google.com/iam/docs/tags-access-control#definitions). An object containing a list of \"key\": value pairs. The key is the namespaced friendly name of the tag key, e.g. \"12345/environment\" where 12345 is parent id. The value is the friendly short name of the tag value, e.g. \"production\".",
            "type": "object"
          },
          "restrictions": {
            "$ref": "RestrictionConfig",
            "description": "Optional. Output only. Restriction config for table. If set, restrict certain accesses on the table based on the config. See [Data egress](https://cloud.google.com/bigquery/docs/analytics-hub-introduction#data_egress) for more details.",
            "readOnly": true
          },
          "schema": {
            "$ref": "TableSchema",
            "description": "Optional. Describes the schema of this table."
          },
          "selfLink": {
            "description": "Output only. A URL that can be used to access this resource again.",
            "readOnly": true,
            "type": "string"
          },
          "snapshotDefinition": {
            "$ref": "SnapshotDefinition",
            "description": "Output only. Contains information about the snapshot. This value is set via snapshot creation.",
            "readOnly": true
          },
          "streamingBuffer": {
            "$ref": "Streamingbuffer",
            "description": "Output only. Contains information regarding this table's streaming buffer, if one is present. This field will be absent if the table is not being streamed to or if there is no data in the streaming buffer.",
            "readOnly": true
          },
          "tableConstraints": {
            "$ref": "TableConstraints",
            "description": "Optional. Tables Primary Key and Foreign Key information"
          },
          "tableReference": {
            "$ref": "TableReference",
            "description": "Required. Reference describing the ID of this table."
          },
          "tableReplicationInfo": {
            "$ref": "TableReplicationInfo",
            "description": "Optional. Table replication info for table created `AS REPLICA` DDL like: `CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`"
          },
          "timePartitioning": {
            "$ref": "TimePartitioning",
            "description": "If specified, configures time-based partitioning for this table."
          },
          "type": {
            "description": "Output only. Describes the table type. The following values are supported: * `TABLE`: A normal BigQuery table. * `VIEW`: A virtual table defined by a SQL query. * `EXTERNAL`: A table that references data stored in an external storage system, such as Google Cloud Storage. * `MATERIALIZED_VIEW`: A precomputed view defined by a SQL query. * `SNAPSHOT`: An immutable BigQuery table that preserves the contents of a base table at a particular time. See additional information on [table snapshots](https://cloud.google.com/bigquery/docs/table-snapshots-intro). The default value is `TABLE`.",
            "readOnly": true,
            "type": "string"
          },
          "view": {
            "$ref": "ViewDefinition",
            "description": "Optional. The view definition."
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Table"
    },
    {
      "operation_id": "bigquery.tables.setIamPolicy",
      "resource": "tables",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "location": "path",
          "pattern": "^projects/[^/]+/datasets/[^/]+/tables/[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "description": "Request message for `SetIamPolicy` method.",
        "id": "SetIamPolicyRequest",
        "properties": {
          "policy": {
            "$ref": "Policy",
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "bigquery.tables.testIamPermissions",
      "resource": "tables",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "location": "path",
          "pattern": "^projects/[^/]+/datasets/[^/]+/tables/[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "description": "Request message for `TestIamPermissions` method.",
        "id": "TestIamPermissionsRequest",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "bigquery.tables.update",
      "resource": "tables",
      "action": "update",
      "http_method": "PUT",
      "path_template": "projects/{+projectId}/datasets/{+datasetId}/tables/{+tableId}",
      "description": "Updates information in an existing table. The update method replaces the entire Table resource, whereas the patch method only replaces fields that are provided in the submitted Table resource.",
      "required_params": [
        "datasetId",
        "projectId",
        "tableId"
      ],
      "parameters": {
        "autodetect_schema": {
          "description": "Optional.  When true will autodetect schema, else will keep original schema",
          "location": "query",
          "type": "boolean"
        },
        "datasetId": {
          "description": "Required. Dataset ID of the table to update",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "projectId": {
          "description": "Required. Project ID of the table to update",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        },
        "tableId": {
          "description": "Required. Table ID of the table to update",
          "location": "path",
          "pattern": "^[^/]+$",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Table",
      "body_schema": {
        "id": "Table",
        "properties": {
          "biglakeConfiguration": {
            "$ref": "BigLakeConfiguration",
            "description": "Optional. Specifies the configuration of a BigQuery table for Apache Iceberg."
          },
          "cloneDefinition": {
            "$ref": "CloneDefinition",
            "description": "Output only. Contains information about the clone. This value is set via the clone operation.",
            "readOnly": true
          },
          "clustering": {
            "$ref": "Clustering",
            "description": "Clustering specification for the table. Must be specified with time-based partitioning, data in the table will be first partitioned and subsequently clustered."
          },
          "creationTime": {
            "description": "Output only. The time when this table was created, in milliseconds since the epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "defaultCollation": {
            "description": "Optional. Defines the default collation specification of new STRING fields in the table. During table creation or update, if a STRING field is added to this table without explicit collation specified, then the table inherits the table default collation. A change to this field affects only fields added afterwards, and does not alter the existing fields. The following values are supported: * 'und:ci': undetermined locale, case insensitive. * '': empty string. Default to case-sensitive behavior.",
            "type": "string"
          },
          "defaultRoundingMode": {
            "description": "Optional. Defines the default rounding mode specification of new decimal fields (NUMERIC OR BIGNUMERIC) in the table. During table creation or update, if a decimal field is added to this table without an explicit rounding mode specified, then the field inherits the table default rounding mode. Changing this field doesn't affect existing fields.",
            "enum": [
              "ROUNDING_MODE_UNSPECIFIED",
              "ROUND_HALF_AWAY_FROM_ZERO",
              "ROUND_HALF_EVEN"
            ],
            "enumDescriptions": [
              "Unspecified will default to using ROUND_HALF_AWAY_FROM_ZERO.",
              "ROUND_HALF_AWAY_FROM_ZERO rounds half values away from zero when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5, 1.6, 1.7, 1.8, 1.9 => 2",
              "ROUND_HALF_EVEN rounds half values to the nearest even value when applying precision and scale upon writing of NUMERIC and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5 => 2 1.6, 1.7, 1.8, 1.9 => 2 2.5 => 2"
            ],
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-friendly description of this table.",
            "type": "string"
          },
          "encryptionConfiguration": {
            "$ref": "EncryptionConfiguration",
            "description": "Custom encryption configuration (e.g., Cloud KMS keys)."
          },
          "etag": {
            "description": "Output only. A hash of this resource.",
            "readOnly": true,
            "type": "string"
          },
          "expirationTime": {
            "description": "Optional. The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed. The defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime on newly created tables.",
            "format": "int64",
            "type": "string"
          },
          "externalCatalogTableOptions": {
            "$ref": "ExternalCatalogTableOptions",
            "description": "Optional. Options defining open source compatible table."
          },
          "externalDataConfiguration": {
            "$ref": "ExternalDataConfiguration",
            "description": "Optional. Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these properties, the data source can then be queried as if it were a standard BigQuery table."
          },
          "friendlyName": {
            "description": "Optional. A descriptive name for this table.",
            "type": "string"
          },
          "id": {
            "description": "Output only. An opaque ID uniquely identifying the table.",
            "readOnly": true,
            "type": "string"
          },
          "kind": {
            "default": "bigquery#table",
            "description": "The type of resource ID.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels associated with this table. You can use these to organize and group your tables. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.",
            "type": "object"
          },
          "lastModifiedTime": {
            "description": "Output only. The time when this table was last modified, in milliseconds since the epoch.",
            "format": "uint64",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Output only. The geographic location where the table resides. This value is inherited from the dataset.",
            "readOnly": true,
            "type": "string"
          },
          "managedTableType": {
            "description": "Optional. If set, overrides the default managed table type configured in the dataset.",
            "enum": [
              "MANAGED_TABLE_TYPE_UNSPECIFIED",
              "NATIVE",
              "BIGLAKE"
            ],
            "enumDescriptions": [
              "No managed table type specified.",
              "The managed table is a native BigQuery table.",
              "The managed table is a BigLake table for Apache Iceberg in BigQuery."
            ],
            "type": "string"
          },
          "materializedView": {
            "$ref": "MaterializedViewDefinition",
            "description": "Optional. The materialized view definition."
          },
          "materializedViewStatus": {
            "$ref": "MaterializedViewStatus",
            "description": "Output only. The materialized view status.",
            "readOnly": true
          },
          "maxStaleness": {
            "description": "Optional. The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a string encoding of sql IntervalValue type.",
            "type": "string"
          },
          "model": {
            "$ref": "ModelDefinition",
            "description": "Deprecated."
          },
          "numActiveLogicalBytes": {
            "description": "Output only. Number of logical bytes that are less than 90 days old.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numActivePhysicalBytes": {
            "description": "Output only. Number of physical bytes less than 90 days old. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numBytes": {
            "description": "Output only. The size of this table in logical bytes, excluding any data in the streaming buffer.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numCurrentPhysicalBytes": {
            "description": "Output only. Number of physical bytes used by current live data storage. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numLongTermBytes": {
            "description": "Output only. The number of logical bytes in the table that are considered \"long-term storage\".",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numLongTermLogicalBytes": {
            "description": "Output only. Number of logical bytes that are more than 90 days old.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numLongTermPhysicalBytes": {
            "description": "Output only. Number of physical bytes more than 90 days old. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numPartitions": {
            "description": "Output only. The number of partitions present in the table or materialized view. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numPhysicalBytes": {
            "description": "Output only. The physical size of this table in bytes. This includes storage used for time travel.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numRows": {
            "description": "Output only. The number of rows of data in this table, excluding any data in the streaming buffer.",
            "format": "uint64",
            "readOnly": true,
            "type": "string"
          },
          "numTimeTravelPhysicalBytes": {
            "description": "Output only. Number of physical bytes used by time travel storage (deleted or changed data). This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numTotalLogicalBytes": {
            "description": "Output only. Total number of logical bytes in the table or materialized view.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "numTotalPhysicalBytes": {
            "description": "Output only. The physical size of this table in bytes. This also includes storage used for time travel. This data is not kept in real time, and might be delayed by a few seconds to a few minutes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "partitionDefinition": {
            "$ref": "PartitioningDefinition",
            "description": "Optional. The partition information for all table formats, including managed partitioned tables, hive partitioned tables, iceberg partitioned, and metastore partitioned tables. This field is only populated for metastore partitioned tables. For other table formats, this is an output only field."
          },
          "rangePartitioning": {
            "$ref": "RangePartitioning",
            "description": "If specified, configures range partitioning for this table."
          },
          "replicas": {
            "description": "Optional. Output only. Table references of all replicas currently active on the table.",
            "items": {
              "$ref": "TableReference"
            },
            "readOnly": true,
            "type": "array"
          },
          "requirePartitionFilter": {
            "default": "false",
            "description": "Optional. If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified.",
            "type": "boolean"
          },
          "resourceTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "[Optional] The tags associated with this table. Tag keys are globally unique. See additional information on [tags](https://cloud.google.com/iam/docs/tags-access-control#definitions). An object containing a list of \"key\": value pairs. The key is the namespaced friendly name of the tag key, e.g. \"12345/environment\" where 12345 is parent id. The value is the friendly short name of the tag value, e.g. \"production\".",
            "type": "object"
          },
          "restrictions": {
            "$ref": "RestrictionConfig",
            "description": "Optional. Output only. Restriction config for table. If set, restrict certain accesses on the table based on the config. See [Data egress](https://cloud.google.com/bigquery/docs/analytics-hub-introduction#data_egress) for more details.",
            "readOnly": true
          },
          "schema": {
            "$ref": "TableSchema",
            "description": "Optional. Describes the schema of this table."
          },
          "selfLink": {
            "description": "Output only. A URL that can be used to access this resource again.",
            "readOnly": true,
            "type": "string"
          },
          "snapshotDefinition": {
            "$ref": "SnapshotDefinition",
            "description": "Output only. Contains information about the snapshot. This value is set via snapshot creation.",
            "readOnly": true
          },
          "streamingBuffer": {
            "$ref": "Streamingbuffer",
            "description": "Output only. Contains information regarding this table's streaming buffer, if one is present. This field will be absent if the table is not being streamed to or if there is no data in the streaming buffer.",
            "readOnly": true
          },
          "tableConstraints": {
            "$ref": "TableConstraints",
            "description": "Optional. Tables Primary Key and Foreign Key information"
          },
          "tableReference": {
            "$ref": "TableReference",
            "description": "Required. Reference describing the ID of this table."
          },
          "tableReplicationInfo": {
            "$ref": "TableReplicationInfo",
            "description": "Optional. Table replication info for table created `AS REPLICA` DDL like: `CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`"
          },
          "timePartitioning": {
            "$ref": "TimePartitioning",
            "description": "If specified, configures time-based partitioning for this table."
          },
          "type": {
            "description": "Output only. Describes the table type. The following values are supported: * `TABLE`: A normal BigQuery table. * `VIEW`: A virtual table defined by a SQL query. * `EXTERNAL`: A table that references data stored in an external storage system, such as Google Cloud Storage. * `MATERIALIZED_VIEW`: A precomputed view defined by a SQL query. * `SNAPSHOT`: An immutable BigQuery table that preserves the contents of a base table at a particular time. See additional information on [table snapshots](https://cloud.google.com/bigquery/docs/table-snapshots-intro). The default value is `TABLE`.",
            "readOnly": true,
            "type": "string"
          },
          "view": {
            "$ref": "ViewDefinition",
            "description": "Optional. The view definition."
          }
        },
        "type": "object"
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/bigquery",
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Table"
    }
  ]
}