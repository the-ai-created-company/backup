{
  "service": "cloudtrace",
  "version": "v2",
  "base_url": "https://cloudtrace.googleapis.com/",
  "total_endpoints": 2,
  "endpoints": [
    {
      "operation_id": "cloudtrace.projects.traces.batchWrite",
      "resource": "projects.traces",
      "action": "batchWrite",
      "http_method": "POST",
      "path_template": "v2/{+name}/traces:batchWrite",
      "description": "Batch writes new spans to new or existing traces. You cannot update existing spans. If a span ID already exists, an additional copy of the span will be stored.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the project where the spans belong. The format is `projects/[PROJECT_ID]`.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "BatchWriteSpansRequest",
      "body_schema": {
        "id": "BatchWriteSpansRequest",
        "description": "The request message for the `BatchWriteSpans` method.",
        "type": "object",
        "properties": {
          "spans": {
            "description": "Required. A list of new spans. The span names must not match existing spans, otherwise the results are undefined.",
            "type": "array",
            "items": {
              "$ref": "Span"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/trace.append"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "cloudtrace.projects.traces.spans.createSpan",
      "resource": "projects.traces.spans",
      "action": "createSpan",
      "http_method": "POST",
      "path_template": "v2/{+name}",
      "description": "Creates a new span. If a span ID already exists, an additional copy of the span will be stored.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the span in the following format: * `projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/[SPAN_ID]` `[TRACE_ID]` is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array. It should not be zero. `[SPAN_ID]` is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array. It should not be zero. .",
          "pattern": "^projects/[^/]+/traces/[^/]+/spans/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Span",
      "body_schema": {
        "id": "Span",
        "description": "A span represents a single operation within a trace. Spans can be nested to form a trace tree. Often, a trace contains a root span that describes the end-to-end latency, and one or more subspans for its sub-operations. A trace can also contain multiple root spans, or none at all. Spans do not need to be contiguous. There might be gaps or overlaps between spans in a trace.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the span in the following format: * `projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/[SPAN_ID]` `[TRACE_ID]` is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array. It should not be zero. `[SPAN_ID]` is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array. It should not be zero. .",
            "type": "string"
          },
          "spanId": {
            "description": "Required. The `[SPAN_ID]` portion of the span's resource name.",
            "type": "string"
          },
          "parentSpanId": {
            "description": "The `[SPAN_ID]` of this span's parent span. If this is a root span, then this field must be empty.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. A description of the span's operation (up to 128 bytes). Cloud Trace displays the description in the Cloud console. For example, the display name can be a qualified method name or a file name and a line number where the operation is called. A best practice is to use the same display name within an application and at the same call point. This makes it easier to correlate spans in different traces.",
            "$ref": "TruncatableString"
          },
          "startTime": {
            "description": "Required. The start time of the span. On the client side, this is the time kept by the local machine where the span execution starts. On the server side, this is the time when the server's application handler starts running.",
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Required. The end time of the span. On the client side, this is the time kept by the local machine where the span execution ends. On the server side, this is the time when the server application handler stops running.",
            "type": "string",
            "format": "google-datetime"
          },
          "attributes": {
            "description": "A set of attributes on the span. You can have up to 32 attributes per span.",
            "$ref": "Attributes"
          },
          "stackTrace": {
            "description": "Stack trace captured at the start of the span.",
            "$ref": "StackTrace"
          },
          "timeEvents": {
            "description": "A set of time events. You can have up to 32 annotations and 128 message events per span.",
            "$ref": "TimeEvents"
          },
          "links": {
            "description": "Links associated with the span. You can have up to 128 links per Span.",
            "$ref": "Links"
          },
          "status": {
            "description": "Optional. The final status for this span.",
            "$ref": "Status"
          },
          "sameProcessAsParentSpan": {
            "description": "Optional. Set this parameter to indicate whether this span is in the same process as its parent. If you do not set this parameter, Trace is unable to take advantage of this helpful information.",
            "type": "boolean"
          },
          "childSpanCount": {
            "description": "Optional. The number of child spans that were generated while this span was active. If set, allows implementation to detect missing child spans.",
            "type": "integer",
            "format": "int32"
          },
          "spanKind": {
            "description": "Optional. Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using `CLIENT` (caller) and `SERVER` (callee) to identify an RPC call.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified. Do NOT use as default. Implementations MAY assume SpanKind.INTERNAL to be default.",
              "Indicates that the span is used internally. Default value.",
              "Indicates that the span covers server-side handling of an RPC or other remote network request.",
              "Indicates that the span covers the client-side wrapper around an RPC or other remote request.",
              "Indicates that the span describes producer sending a message to a broker. Unlike client and server, there is no direct critical path latency relationship between producer and consumer spans (e.g. publishing a message to a pubsub service).",
              "Indicates that the span describes consumer receiving a message from a broker. Unlike client and server, there is no direct critical path latency relationship between producer and consumer spans (e.g. receiving a message from a pubsub service subscription)."
            ],
            "enum": [
              "SPAN_KIND_UNSPECIFIED",
              "INTERNAL",
              "SERVER",
              "CLIENT",
              "PRODUCER",
              "CONSUMER"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/trace.append"
      ],
      "response_type": "Span"
    }
  ]
}