{
  "service": "iam",
  "version": "v1",
  "base_url": "https://iam.googleapis.com/",
  "total_endpoints": 122,
  "endpoints": [
    {
      "operation_id": "iam.projects.locations.oauthClients.list",
      "resource": "projects.locations.oauthClients",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/oauthClients",
      "description": "Lists all non-deleted OauthClients in a project. If `show_deleted` is set to `true`, then deleted OauthClients are also listed.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent to list OauthClients for.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The maximum number of OauthClients to return. If unspecified, at most 50 OauthClients will be returned. The maximum value is 100; values above 100 are truncated to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. A page token, received from a previous `ListOauthClients` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "showDeleted": {
          "description": "Optional. Whether to return soft-deleted OauthClients.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListOauthClientsResponse"
    },
    {
      "operation_id": "iam.projects.locations.oauthClients.get",
      "resource": "projects.locations.oauthClients",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an individual OauthClient.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the OauthClient to retrieve. Format: `projects/{project}/locations/{location}/oauthClients/{oauth_client}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/oauthClients/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "OauthClient"
    },
    {
      "operation_id": "iam.projects.locations.oauthClients.create",
      "resource": "projects.locations.oauthClients",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/oauthClients",
      "description": "Creates a new OauthClient. You cannot reuse the name of a deleted OauthClient until 30 days after deletion.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource to create the OauthClient in. The only supported location is `global`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "oauthClientId": {
          "description": "Required. The ID to use for the OauthClient, which becomes the final component of the resource name. This value should be a string of 6 to 63 lowercase letters, digits, or hyphens. It must start with a letter, and cannot have a trailing hyphen. The prefix `gcp-` is reserved for use by Google, and may not be specified.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "OauthClient",
      "body_schema": {
        "id": "OauthClient",
        "description": "Represents an OauthClient. Used to access Google Cloud resources on behalf of a Workforce Identity Federation user by using OAuth 2.0 Protocol to obtain an access token from Google Cloud.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Identifier. The resource name of the OauthClient. Format:`projects/{project}/locations/{location}/oauthClients/{oauth_client}`.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the OauthClient.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Default value. This value is unused.",
              "The OauthClient is active.",
              "The OauthClient is soft-deleted. Soft-deleted OauthClient is permanently deleted after approximately 30 days unless restored via `UndeleteOauthClient`."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Optional. Whether the OauthClient is disabled. You cannot use a disabled OAuth client.",
            "type": "boolean"
          },
          "clientId": {
            "description": "Output only. The system-generated OauthClient id.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A user-specified display name of the OauthClient. Cannot exceed 32 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-specified description of the OauthClient. Cannot exceed 256 characters.",
            "type": "string"
          },
          "clientType": {
            "description": "Immutable. The type of OauthClient. Either public or private. For private clients, the client secret can be managed using the dedicated OauthClientCredential resource.",
            "type": "string",
            "enumDescriptions": [
              "Should not be used.",
              "Public client has no secret.",
              "Private client."
            ],
            "enum": [
              "CLIENT_TYPE_UNSPECIFIED",
              "PUBLIC_CLIENT",
              "CONFIDENTIAL_CLIENT"
            ]
          },
          "allowedGrantTypes": {
            "description": "Required. The list of OAuth grant types is allowed for the OauthClient.",
            "type": "array",
            "items": {
              "type": "string",
              "enumDescriptions": [
                "Should not be used.",
                "Authorization code grant.",
                "Refresh token grant."
              ],
              "enum": [
                "GRANT_TYPE_UNSPECIFIED",
                "AUTHORIZATION_CODE_GRANT",
                "REFRESH_TOKEN_GRANT"
              ]
            }
          },
          "allowedScopes": {
            "description": "Required. The list of scopes that the OauthClient is allowed to request during OAuth flows. The following scopes are supported: * `https://www.googleapis.com/auth/cloud-platform`: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. * `openid`: The OAuth client can associate you with your personal information on Google Cloud. * `email`: The OAuth client can read a federated identity's email address. * `groups`: The OAuth client can read a federated identity's groups.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowedRedirectUris": {
            "description": "Required. The list of redirect uris that is allowed to redirect back when authorization process is completed.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expireTime": {
            "description": "Output only. Time after which the OauthClient will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "OauthClient"
    },
    {
      "operation_id": "iam.projects.locations.oauthClients.patch",
      "resource": "projects.locations.oauthClients",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an existing OauthClient.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. Identifier. The resource name of the OauthClient. Format:`projects/{project}/locations/{location}/oauthClients/{oauth_client}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/oauthClients/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "OauthClient",
      "body_schema": {
        "id": "OauthClient",
        "description": "Represents an OauthClient. Used to access Google Cloud resources on behalf of a Workforce Identity Federation user by using OAuth 2.0 Protocol to obtain an access token from Google Cloud.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Identifier. The resource name of the OauthClient. Format:`projects/{project}/locations/{location}/oauthClients/{oauth_client}`.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the OauthClient.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Default value. This value is unused.",
              "The OauthClient is active.",
              "The OauthClient is soft-deleted. Soft-deleted OauthClient is permanently deleted after approximately 30 days unless restored via `UndeleteOauthClient`."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Optional. Whether the OauthClient is disabled. You cannot use a disabled OAuth client.",
            "type": "boolean"
          },
          "clientId": {
            "description": "Output only. The system-generated OauthClient id.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A user-specified display name of the OauthClient. Cannot exceed 32 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-specified description of the OauthClient. Cannot exceed 256 characters.",
            "type": "string"
          },
          "clientType": {
            "description": "Immutable. The type of OauthClient. Either public or private. For private clients, the client secret can be managed using the dedicated OauthClientCredential resource.",
            "type": "string",
            "enumDescriptions": [
              "Should not be used.",
              "Public client has no secret.",
              "Private client."
            ],
            "enum": [
              "CLIENT_TYPE_UNSPECIFIED",
              "PUBLIC_CLIENT",
              "CONFIDENTIAL_CLIENT"
            ]
          },
          "allowedGrantTypes": {
            "description": "Required. The list of OAuth grant types is allowed for the OauthClient.",
            "type": "array",
            "items": {
              "type": "string",
              "enumDescriptions": [
                "Should not be used.",
                "Authorization code grant.",
                "Refresh token grant."
              ],
              "enum": [
                "GRANT_TYPE_UNSPECIFIED",
                "AUTHORIZATION_CODE_GRANT",
                "REFRESH_TOKEN_GRANT"
              ]
            }
          },
          "allowedScopes": {
            "description": "Required. The list of scopes that the OauthClient is allowed to request during OAuth flows. The following scopes are supported: * `https://www.googleapis.com/auth/cloud-platform`: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account. * `openid`: The OAuth client can associate you with your personal information on Google Cloud. * `email`: The OAuth client can read a federated identity's email address. * `groups`: The OAuth client can read a federated identity's groups.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowedRedirectUris": {
            "description": "Required. The list of redirect uris that is allowed to redirect back when authorization process is completed.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expireTime": {
            "description": "Output only. Time after which the OauthClient will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "OauthClient"
    },
    {
      "operation_id": "iam.projects.locations.oauthClients.delete",
      "resource": "projects.locations.oauthClients",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes an OauthClient. You cannot use a deleted OauthClient. However, deletion does not revoke access tokens that have already been issued. They continue to grant access. Deletion does revoke refresh tokens that have already been issued. They cannot be used to renew an access token. If the OauthClient is undeleted, and the refresh tokens are not expired, they are valid for token exchange again. You can undelete an OauthClient for 30 days. After 30 days, deletion is permanent. You cannot update deleted OauthClients. However, you can view and list them.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the OauthClient to delete. Format: `projects/{project}/locations/{location}/oauthClients/{oauth_client}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/oauthClients/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "OauthClient"
    },
    {
      "operation_id": "iam.projects.locations.oauthClients.undelete",
      "resource": "projects.locations.oauthClients",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes an OauthClient, as long as it was deleted fewer than 30 days ago.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the OauthClient to undelete. Format: `projects/{project}/locations/{location}/oauthClients/{oauth_client}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/oauthClients/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteOauthClientRequest",
      "body_schema": {
        "id": "UndeleteOauthClientRequest",
        "description": "Request message for UndeleteOauthClient.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "OauthClient"
    },
    {
      "operation_id": "iam.projects.locations.oauthClients.credentials.list",
      "resource": "projects.locations.oauthClients.credentials",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/credentials",
      "description": "Lists all OauthClientCredentials in an OauthClient.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent to list OauthClientCredentials for.",
          "pattern": "^projects/[^/]+/locations/[^/]+/oauthClients/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListOauthClientCredentialsResponse"
    },
    {
      "operation_id": "iam.projects.locations.oauthClients.credentials.get",
      "resource": "projects.locations.oauthClients.credentials",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an individual OauthClientCredential.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the OauthClientCredential to retrieve. Format: `projects/{project}/locations/{location}/oauthClients/{oauth_client}/credentials/{credential}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/oauthClients/[^/]+/credentials/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "OauthClientCredential"
    },
    {
      "operation_id": "iam.projects.locations.oauthClients.credentials.create",
      "resource": "projects.locations.oauthClients.credentials",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/credentials",
      "description": "Creates a new OauthClientCredential.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource to create the OauthClientCredential in.",
          "pattern": "^projects/[^/]+/locations/[^/]+/oauthClients/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "oauthClientCredentialId": {
          "description": "Required. The ID to use for the OauthClientCredential, which becomes the final component of the resource name. This value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and may not be specified.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "OauthClientCredential",
      "body_schema": {
        "id": "OauthClientCredential",
        "description": "Represents an OauthClientCredential. Used to authenticate an OauthClient while accessing Google Cloud resources on behalf of a user by using OAuth 2.0 Protocol.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Identifier. The resource name of the OauthClientCredential. Format: `projects/{project}/locations/{location}/oauthClients/{oauth_client}/credentials/{credential}`",
            "type": "string"
          },
          "disabled": {
            "description": "Optional. Whether the OauthClientCredential is disabled. You cannot use a disabled OauthClientCredential.",
            "type": "boolean"
          },
          "clientSecret": {
            "description": "Output only. The system-generated OAuth client secret. The client secret must be stored securely. If the client secret is leaked, you must delete and re-create the client credential. To learn more, see [OAuth client and credential security risks and mitigations](https://cloud.google.com/iam/docs/workforce-oauth-app#security)",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A user-specified display name of the OauthClientCredential. Cannot exceed 32 characters.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "OauthClientCredential"
    },
    {
      "operation_id": "iam.projects.locations.oauthClients.credentials.patch",
      "resource": "projects.locations.oauthClients.credentials",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an existing OauthClientCredential.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. Identifier. The resource name of the OauthClientCredential. Format: `projects/{project}/locations/{location}/oauthClients/{oauth_client}/credentials/{credential}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/oauthClients/[^/]+/credentials/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "OauthClientCredential",
      "body_schema": {
        "id": "OauthClientCredential",
        "description": "Represents an OauthClientCredential. Used to authenticate an OauthClient while accessing Google Cloud resources on behalf of a user by using OAuth 2.0 Protocol.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Identifier. The resource name of the OauthClientCredential. Format: `projects/{project}/locations/{location}/oauthClients/{oauth_client}/credentials/{credential}`",
            "type": "string"
          },
          "disabled": {
            "description": "Optional. Whether the OauthClientCredential is disabled. You cannot use a disabled OauthClientCredential.",
            "type": "boolean"
          },
          "clientSecret": {
            "description": "Output only. The system-generated OAuth client secret. The client secret must be stored securely. If the client secret is leaked, you must delete and re-create the client credential. To learn more, see [OAuth client and credential security risks and mitigations](https://cloud.google.com/iam/docs/workforce-oauth-app#security)",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A user-specified display name of the OauthClientCredential. Cannot exceed 32 characters.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "OauthClientCredential"
    },
    {
      "operation_id": "iam.projects.locations.oauthClients.credentials.delete",
      "resource": "projects.locations.oauthClients.credentials",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes an OauthClientCredential. Before deleting an OauthClientCredential, it should first be disabled.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the OauthClientCredential to delete. Format: `projects/{project}/locations/{location}/oauthClients/{oauth_client}/credentials/{credential}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/oauthClients/[^/]+/credentials/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.list",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/workloadIdentityPools",
      "description": "Lists all non-deleted WorkloadIdentityPools in a project. If `show_deleted` is set to `true`, then deleted pools are also listed.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource to list pools for.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of pools to return. If unspecified, at most 50 pools are returned. The maximum value is 1000; values above are 1000 truncated to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous `ListWorkloadIdentityPools` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "showDeleted": {
          "description": "Whether to return soft-deleted pools.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListWorkloadIdentityPoolsResponse"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.get",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an individual WorkloadIdentityPool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the pool to retrieve.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "WorkloadIdentityPool"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.create",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/workloadIdentityPools",
      "description": "Creates a new WorkloadIdentityPool. You cannot reuse the name of a deleted pool until 30 days after deletion.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource to create the pool in. The only supported location is `global`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "workloadIdentityPoolId": {
          "description": "Required. The ID to use for the pool, which becomes the final component of the resource name. This value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and may not be specified.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "WorkloadIdentityPool",
      "body_schema": {
        "id": "WorkloadIdentityPool",
        "description": "Represents a collection of workload identities. You can define IAM policies to grant these identities access to Google Cloud resources.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the pool.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A display name for the pool. Cannot exceed 32 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A description of the pool. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the pool.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The pool is active, and may be used in Google Cloud policies.",
              "The pool is soft-deleted. Soft-deleted pools are permanently deleted after approximately 30 days. You can restore a soft-deleted pool using UndeleteWorkloadIdentityPool. You cannot reuse the ID of a soft-deleted pool until it is permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or use existing tokens to access resources. If the pool is undeleted, existing tokens grant access again."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Optional. Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.",
            "type": "boolean"
          },
          "mode": {
            "description": "Immutable. The mode the pool is operating in.",
            "type": "string",
            "enumDescriptions": [
              "State unspecified. New pools should not use this mode. Pools with an unspecified mode will operate as if they are in federation-only mode.",
              "Federation-only mode. Federation-only pools can only be used for federating external workload identities into Google Cloud. Unless otherwise noted, no structure or format constraints are applied to workload identities in a federation-only pool, and you cannot create any resources within the pool besides providers.",
              "Trust-domain mode. Trust-domain pools can be used to assign identities to Google Cloud workloads. All identities within a trust-domain pool must consist of a single namespace and individual workload identifier. The subject identifier for all identities must conform to the following format: `ns//sa/` WorkloadIdentityPoolProviders cannot be created within trust-domain pools."
            ],
            "enum": [
              "MODE_UNSPECIFIED",
              "FEDERATION_ONLY",
              "TRUST_DOMAIN"
            ]
          },
          "expireTime": {
            "description": "Output only. Time after which the workload identity pool will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "inlineCertificateIssuanceConfig": {
            "description": "Optional. Defines the Certificate Authority (CA) pool resources and configurations required for issuance and rotation of mTLS workload certificates.",
            "$ref": "InlineCertificateIssuanceConfig"
          },
          "inlineTrustConfig": {
            "description": "Optional. Represents config to add additional trusted trust domains.",
            "$ref": "InlineTrustConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.patch",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an existing WorkloadIdentityPool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the pool.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "WorkloadIdentityPool",
      "body_schema": {
        "id": "WorkloadIdentityPool",
        "description": "Represents a collection of workload identities. You can define IAM policies to grant these identities access to Google Cloud resources.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the pool.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A display name for the pool. Cannot exceed 32 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A description of the pool. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the pool.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The pool is active, and may be used in Google Cloud policies.",
              "The pool is soft-deleted. Soft-deleted pools are permanently deleted after approximately 30 days. You can restore a soft-deleted pool using UndeleteWorkloadIdentityPool. You cannot reuse the ID of a soft-deleted pool until it is permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or use existing tokens to access resources. If the pool is undeleted, existing tokens grant access again."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Optional. Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.",
            "type": "boolean"
          },
          "mode": {
            "description": "Immutable. The mode the pool is operating in.",
            "type": "string",
            "enumDescriptions": [
              "State unspecified. New pools should not use this mode. Pools with an unspecified mode will operate as if they are in federation-only mode.",
              "Federation-only mode. Federation-only pools can only be used for federating external workload identities into Google Cloud. Unless otherwise noted, no structure or format constraints are applied to workload identities in a federation-only pool, and you cannot create any resources within the pool besides providers.",
              "Trust-domain mode. Trust-domain pools can be used to assign identities to Google Cloud workloads. All identities within a trust-domain pool must consist of a single namespace and individual workload identifier. The subject identifier for all identities must conform to the following format: `ns//sa/` WorkloadIdentityPoolProviders cannot be created within trust-domain pools."
            ],
            "enum": [
              "MODE_UNSPECIFIED",
              "FEDERATION_ONLY",
              "TRUST_DOMAIN"
            ]
          },
          "expireTime": {
            "description": "Output only. Time after which the workload identity pool will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "inlineCertificateIssuanceConfig": {
            "description": "Optional. Defines the Certificate Authority (CA) pool resources and configurations required for issuance and rotation of mTLS workload certificates.",
            "$ref": "InlineCertificateIssuanceConfig"
          },
          "inlineTrustConfig": {
            "description": "Optional. Represents config to add additional trusted trust domains.",
            "$ref": "InlineTrustConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.delete",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a WorkloadIdentityPool. You cannot use a deleted pool to exchange external credentials for Google Cloud credentials. However, deletion does not revoke credentials that have already been issued. Credentials issued for a deleted pool do not grant access to resources. If the pool is undeleted, and the credentials are not expired, they grant access again. You can undelete a pool for 30 days. After 30 days, deletion is permanent. You cannot update deleted pools. However, you can view and list them.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the pool to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.undelete",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes a WorkloadIdentityPool, as long as it was deleted fewer than 30 days ago.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the pool to undelete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteWorkloadIdentityPoolRequest",
      "body_schema": {
        "id": "UndeleteWorkloadIdentityPoolRequest",
        "description": "Request message for UndeleteWorkloadIdentityPool.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.setIamPolicy",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the IAM policies on a WorkloadIdentityPool",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.getIamPolicy",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the IAM policy of a WorkloadIdentityPool.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GetIamPolicyRequest",
      "body_schema": {
        "id": "GetIamPolicyRequest",
        "description": "Request message for `GetIamPolicy` method.",
        "type": "object",
        "properties": {
          "options": {
            "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
            "$ref": "GetPolicyOptions"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.testIamPermissions",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns the caller's permissions on a WorkloadIdentityPool",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.addAttestationRule",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "addAttestationRule",
      "http_method": "POST",
      "path_template": "v1/{+resource}:addAttestationRule",
      "description": "Add an AttestationRule on a WorkloadIdentityPoolManagedIdentity. The total attestation rules after addition must not exceed 50.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "Required. The resource name of the managed identity or namespace resource to add an attestation rule to.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "AddAttestationRuleRequest",
      "body_schema": {
        "id": "AddAttestationRuleRequest",
        "description": "Request message for AddAttestationRule.",
        "type": "object",
        "properties": {
          "attestationRule": {
            "description": "Required. The attestation rule to be added.",
            "$ref": "AttestationRule"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.removeAttestationRule",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "removeAttestationRule",
      "http_method": "POST",
      "path_template": "v1/{+resource}:removeAttestationRule",
      "description": "Remove an AttestationRule on a WorkloadIdentityPoolManagedIdentity.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "Required. The resource name of the managed identity or namespace resource to remove an attestation rule from.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RemoveAttestationRuleRequest",
      "body_schema": {
        "id": "RemoveAttestationRuleRequest",
        "description": "Request message for RemoveAttestationRule.",
        "type": "object",
        "properties": {
          "attestationRule": {
            "description": "Required. The attestation rule to be removed.",
            "$ref": "AttestationRule"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.setAttestationRules",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "setAttestationRules",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setAttestationRules",
      "description": "Set all AttestationRule on a WorkloadIdentityPoolManagedIdentity. A maximum of 50 AttestationRules can be set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "Required. The resource name of the managed identity or namespace resource to add an attestation rule to.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetAttestationRulesRequest",
      "body_schema": {
        "id": "SetAttestationRulesRequest",
        "description": "Request message for SetAttestationRules.",
        "type": "object",
        "properties": {
          "attestationRules": {
            "description": "Required. The attestation rules to be set. At most 50 attestation rules can be set.",
            "type": "array",
            "items": {
              "$ref": "AttestationRule"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.listAttestationRules",
      "resource": "projects.locations.workloadIdentityPools",
      "action": "listAttestationRules",
      "http_method": "GET",
      "path_template": "v1/{+resource}:listAttestationRules",
      "description": "List all AttestationRule on a WorkloadIdentityPoolManagedIdentity.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "Required. The resource name of the managed identity or namespace resource to list attestation rules of.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. A query filter. Supports the following function: * `container_ids()`: Returns only the AttestationRules under the specific container ids. The function expects a comma-delimited list with only project numbers and must use the format `projects/`. For example: `container_ids(projects/, projects/,...)`.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The maximum number of AttestationRules to return. If unspecified, at most 50 AttestationRules are returned. The maximum value is 100; values above 100 are truncated to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. A page token, received from a previous `ListWorkloadIdentityPoolProviderKeys` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListAttestationRulesResponse"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.operations.get",
      "resource": "projects.locations.workloadIdentityPools.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.list",
      "resource": "projects.locations.workloadIdentityPools.namespaces",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/namespaces",
      "description": "Lists all non-deleted WorkloadIdentityPoolNamespaces in a workload identity pool. If `show_deleted` is set to `true`, then deleted namespaces are also listed.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource to list namespaces for.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of namespaces to return. If unspecified, at most 50 namespaces are returned. The maximum value is 1000; values above are 1000 truncated to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous `ListWorkloadIdentityPoolNamespaces` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "showDeleted": {
          "description": "Whether to return soft-deleted namespaces.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListWorkloadIdentityPoolNamespacesResponse"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.get",
      "resource": "projects.locations.workloadIdentityPools.namespaces",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an individual WorkloadIdentityPoolNamespace.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the namespace to retrieve.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "WorkloadIdentityPoolNamespace"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.create",
      "resource": "projects.locations.workloadIdentityPools.namespaces",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/namespaces",
      "description": "Creates a new WorkloadIdentityPoolNamespace in a WorkloadIdentityPool.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource to create the namespace in. The only supported location is `global`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "workloadIdentityPoolNamespaceId": {
          "description": "Required. The ID to use for the namespace. This value must: * contain at most 63 characters * contain only lowercase alphanumeric characters or `-` * start with an alphanumeric character * end with an alphanumeric character The prefix \"gcp-\" will be reserved for future uses.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "WorkloadIdentityPoolNamespace",
      "body_schema": {
        "id": "WorkloadIdentityPoolNamespace",
        "description": "Represents a namespace for a workload identity pool. Namespaces are used to segment identities within the pool.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the namespace.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "A description of the namespace. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the namespace.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The namespace is active.",
              "The namespace is soft-deleted. Soft-deleted namespaces are permanently deleted after approximately 30 days. You can restore a soft-deleted namespace using UndeleteWorkloadIdentityPoolNamespace. You cannot reuse the ID of a soft-deleted namespace until it is permanently deleted."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Whether the namespace is disabled. If disabled, credentials may no longer be issued for identities within this namespace, however existing credentials will still be accepted until they expire.",
            "type": "boolean"
          },
          "expireTime": {
            "description": "Output only. Time after which the namespace will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "ownerService": {
            "description": "Output only. The Google Cloud service that owns this namespace.",
            "readOnly": true,
            "$ref": "OwnerService"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.patch",
      "resource": "projects.locations.workloadIdentityPools.namespaces",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an existing WorkloadIdentityPoolNamespace in a WorkloadIdentityPool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the namespace.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "WorkloadIdentityPoolNamespace",
      "body_schema": {
        "id": "WorkloadIdentityPoolNamespace",
        "description": "Represents a namespace for a workload identity pool. Namespaces are used to segment identities within the pool.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the namespace.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "A description of the namespace. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the namespace.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The namespace is active.",
              "The namespace is soft-deleted. Soft-deleted namespaces are permanently deleted after approximately 30 days. You can restore a soft-deleted namespace using UndeleteWorkloadIdentityPoolNamespace. You cannot reuse the ID of a soft-deleted namespace until it is permanently deleted."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Whether the namespace is disabled. If disabled, credentials may no longer be issued for identities within this namespace, however existing credentials will still be accepted until they expire.",
            "type": "boolean"
          },
          "expireTime": {
            "description": "Output only. Time after which the namespace will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "ownerService": {
            "description": "Output only. The Google Cloud service that owns this namespace.",
            "readOnly": true,
            "$ref": "OwnerService"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.delete",
      "resource": "projects.locations.workloadIdentityPools.namespaces",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a WorkloadIdentityPoolNamespace. You can undelete a namespace for 30 days. After 30 days, deletion is permanent.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the namespace to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.undelete",
      "resource": "projects.locations.workloadIdentityPools.namespaces",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes a WorkloadIdentityPoolNamespace, as long as it was deleted fewer than 30 days ago.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the namespace to undelete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteWorkloadIdentityPoolNamespaceRequest",
      "body_schema": {
        "id": "UndeleteWorkloadIdentityPoolNamespaceRequest",
        "description": "Request message for UndeleteWorkloadIdentityPoolNamespace.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.operations.get",
      "resource": "projects.locations.workloadIdentityPools.namespaces.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.list",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/managedIdentities",
      "description": "Lists all non-deleted WorkloadIdentityPoolManagedIdentitys in a namespace. If `show_deleted` is set to `true`, then deleted managed identities are also listed.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource to list managed identities for.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of managed identities to return. If unspecified, at most 50 managed identities are returned. The maximum value is 1000; values above are 1000 truncated to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous `ListWorkloadIdentityPoolManagedIdentities` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "showDeleted": {
          "description": "Whether to return soft-deleted managed identities.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListWorkloadIdentityPoolManagedIdentitiesResponse"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.get",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an individual WorkloadIdentityPoolManagedIdentity.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the managed identity to retrieve.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/managedIdentities/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "WorkloadIdentityPoolManagedIdentity"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.create",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/managedIdentities",
      "description": "Creates a new WorkloadIdentityPoolManagedIdentity in a WorkloadIdentityPoolNamespace.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource to create the manage identity in. The only supported location is `global`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "workloadIdentityPoolManagedIdentityId": {
          "description": "Required. The ID to use for the managed identity. This value must: * contain at most 63 characters * contain only lowercase alphanumeric characters or `-` * start with an alphanumeric character * end with an alphanumeric character The prefix \"gcp-\" will be reserved for future uses.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "WorkloadIdentityPoolManagedIdentity",
      "body_schema": {
        "id": "WorkloadIdentityPoolManagedIdentity",
        "description": "Represents a managed identity for a workload identity pool namespace.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the managed identity.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "A description of the managed identity. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the managed identity.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The managed identity is active.",
              "The managed identity is soft-deleted. Soft-deleted managed identities are permanently deleted after approximately 30 days. You can restore a soft-deleted managed identity using UndeleteWorkloadIdentityPoolManagedIdentity. You cannot reuse the ID of a soft-deleted managed identity until it is permanently deleted."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Whether the managed identity is disabled. If disabled, credentials may no longer be issued for the identity, however existing credentials will still be accepted until they expire.",
            "type": "boolean"
          },
          "expireTime": {
            "description": "Output only. Time after which the managed identity will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.patch",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an existing WorkloadIdentityPoolManagedIdentity in a WorkloadIdentityPoolNamespace.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the managed identity.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/managedIdentities/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "WorkloadIdentityPoolManagedIdentity",
      "body_schema": {
        "id": "WorkloadIdentityPoolManagedIdentity",
        "description": "Represents a managed identity for a workload identity pool namespace.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the managed identity.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "A description of the managed identity. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the managed identity.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The managed identity is active.",
              "The managed identity is soft-deleted. Soft-deleted managed identities are permanently deleted after approximately 30 days. You can restore a soft-deleted managed identity using UndeleteWorkloadIdentityPoolManagedIdentity. You cannot reuse the ID of a soft-deleted managed identity until it is permanently deleted."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Whether the managed identity is disabled. If disabled, credentials may no longer be issued for the identity, however existing credentials will still be accepted until they expire.",
            "type": "boolean"
          },
          "expireTime": {
            "description": "Output only. Time after which the managed identity will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.delete",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a WorkloadIdentityPoolManagedIdentity. You can undelete a managed identity for 30 days. After 30 days, deletion is permanent.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the managed identity to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/managedIdentities/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.undelete",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes a WorkloadIdentityPoolManagedIdentity, as long as it was deleted fewer than 30 days ago.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the managed identity to undelete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/managedIdentities/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteWorkloadIdentityPoolManagedIdentityRequest",
      "body_schema": {
        "id": "UndeleteWorkloadIdentityPoolManagedIdentityRequest",
        "description": "Request message for UndeleteWorkloadIdentityPoolManagedIdentity.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.addAttestationRule",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities",
      "action": "addAttestationRule",
      "http_method": "POST",
      "path_template": "v1/{+resource}:addAttestationRule",
      "description": "Add an AttestationRule on a WorkloadIdentityPoolManagedIdentity. The total attestation rules after addition must not exceed 50.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "Required. The resource name of the managed identity or namespace resource to add an attestation rule to.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/managedIdentities/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "AddAttestationRuleRequest",
      "body_schema": {
        "id": "AddAttestationRuleRequest",
        "description": "Request message for AddAttestationRule.",
        "type": "object",
        "properties": {
          "attestationRule": {
            "description": "Required. The attestation rule to be added.",
            "$ref": "AttestationRule"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.removeAttestationRule",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities",
      "action": "removeAttestationRule",
      "http_method": "POST",
      "path_template": "v1/{+resource}:removeAttestationRule",
      "description": "Remove an AttestationRule on a WorkloadIdentityPoolManagedIdentity.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "Required. The resource name of the managed identity or namespace resource to remove an attestation rule from.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/managedIdentities/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RemoveAttestationRuleRequest",
      "body_schema": {
        "id": "RemoveAttestationRuleRequest",
        "description": "Request message for RemoveAttestationRule.",
        "type": "object",
        "properties": {
          "attestationRule": {
            "description": "Required. The attestation rule to be removed.",
            "$ref": "AttestationRule"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.setAttestationRules",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities",
      "action": "setAttestationRules",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setAttestationRules",
      "description": "Set all AttestationRule on a WorkloadIdentityPoolManagedIdentity. A maximum of 50 AttestationRules can be set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "Required. The resource name of the managed identity or namespace resource to add an attestation rule to.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/managedIdentities/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetAttestationRulesRequest",
      "body_schema": {
        "id": "SetAttestationRulesRequest",
        "description": "Request message for SetAttestationRules.",
        "type": "object",
        "properties": {
          "attestationRules": {
            "description": "Required. The attestation rules to be set. At most 50 attestation rules can be set.",
            "type": "array",
            "items": {
              "$ref": "AttestationRule"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.listAttestationRules",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities",
      "action": "listAttestationRules",
      "http_method": "GET",
      "path_template": "v1/{+resource}:listAttestationRules",
      "description": "List all AttestationRule on a WorkloadIdentityPoolManagedIdentity.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "Required. The resource name of the managed identity or namespace resource to list attestation rules of.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/managedIdentities/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. A query filter. Supports the following function: * `container_ids()`: Returns only the AttestationRules under the specific container ids. The function expects a comma-delimited list with only project numbers and must use the format `projects/`. For example: `container_ids(projects/, projects/,...)`.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The maximum number of AttestationRules to return. If unspecified, at most 50 AttestationRules are returned. The maximum value is 100; values above 100 are truncated to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. A page token, received from a previous `ListWorkloadIdentityPoolProviderKeys` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListAttestationRulesResponse"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.operations.get",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/managedIdentities/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.namespaces.managedIdentities.workloadSources.operations.get",
      "resource": "projects.locations.workloadIdentityPools.namespaces.managedIdentities.workloadSources.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/namespaces/[^/]+/managedIdentities/[^/]+/workloadSources/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.list",
      "resource": "projects.locations.workloadIdentityPools.providers",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/providers",
      "description": "Lists all non-deleted WorkloadIdentityPoolProviders in a WorkloadIdentityPool. If `show_deleted` is set to `true`, then deleted providers are also listed.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The pool to list providers for.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of providers to return. If unspecified, at most 50 providers are returned. The maximum value is 100; values above 100 are truncated to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous `ListWorkloadIdentityPoolProviders` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "showDeleted": {
          "description": "Whether to return soft-deleted providers.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListWorkloadIdentityPoolProvidersResponse"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.get",
      "resource": "projects.locations.workloadIdentityPools.providers",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an individual WorkloadIdentityPoolProvider.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the provider to retrieve.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "WorkloadIdentityPoolProvider"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.create",
      "resource": "projects.locations.workloadIdentityPools.providers",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/providers",
      "description": "Creates a new WorkloadIdentityPoolProvider in a WorkloadIdentityPool. You cannot reuse the name of a deleted provider until 30 days after deletion.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The pool to create this provider in.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "workloadIdentityPoolProviderId": {
          "description": "Required. The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and may not be specified.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "WorkloadIdentityPoolProvider",
      "body_schema": {
        "id": "WorkloadIdentityPoolProvider",
        "description": "A configuration for an external identity provider.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the provider.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A display name for the provider. Cannot exceed 32 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A description for the provider. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the provider.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The provider is active, and may be used to validate authentication credentials.",
              "The provider is soft-deleted. Soft-deleted providers are permanently deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider. You cannot reuse the ID of a soft-deleted provider until it is permanently deleted."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Optional. Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still grant access.",
            "type": "boolean"
          },
          "attributeMapping": {
            "description": "Optional. Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such as `subject` and `segment`. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following keys are supported: * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 bytes. * `google.groups`: Groups the external identity belongs to. You can grant groups access to resources using an IAM `principalSet` binding; access applies to all members of the group. You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where `{custom_attribute}` is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained access for a workload to Google Cloud resources. For example: * `google.subject`: `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}` * `google.groups`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}` * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}` Each value must be a [Common Expression Language] (https://opensource.google/projects/cel) function that maps an identity provider credential to the normalized attribute specified by the corresponding map key. You can use the `assertion` keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped attributes must not exceed 8KB. For AWS providers, if no attribute mapping is defined, the following default mapping applies: ``` { \"google.subject\":\"assertion.arn\", \"attribute.aws_role\": \"assertion.arn.contains('assumed-role')\" \" ? assertion.arn.extract('{account_arn}assumed-role/')\" \" + 'assumed-role/'\" \" + assertion.arn.extract('assumed-role/{role_name}/')\" \" : assertion.arn\", } ``` If any custom attribute mappings are defined, they must include a mapping to the `google.subject` attribute. For OIDC providers, you must supply a custom mapping, which must include the `google.subject` attribute. For example, the following maps the `sub` claim of the incoming credential to the `subject` attribute on a Google token: ``` {\"google.subject\": \"assertion.sub\"} ```",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "attributeCondition": {
            "description": "Optional. [A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: * `assertion`: JSON representing the authentication credential issued by the provider. * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`. * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`. The maximum length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credential are accepted. The following example shows how to only allow credentials with a mapped `google.groups` value of `admins`: ``` \"'admins' in google.groups\" ```",
            "type": "string"
          },
          "aws": {
            "description": "An Amazon Web Services identity provider.",
            "$ref": "Aws"
          },
          "oidc": {
            "description": "An OpenId Connect 1.0 identity provider.",
            "$ref": "Oidc"
          },
          "saml": {
            "description": "An SAML 2.0 identity provider.",
            "$ref": "Saml"
          },
          "x509": {
            "description": "An X.509-type identity provider.",
            "$ref": "X509"
          },
          "expireTime": {
            "description": "Output only. Time after which the workload identity pool provider will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.patch",
      "resource": "projects.locations.workloadIdentityPools.providers",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an existing WorkloadIdentityPoolProvider.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the provider.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "WorkloadIdentityPoolProvider",
      "body_schema": {
        "id": "WorkloadIdentityPoolProvider",
        "description": "A configuration for an external identity provider.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the provider.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A display name for the provider. Cannot exceed 32 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A description for the provider. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the provider.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The provider is active, and may be used to validate authentication credentials.",
              "The provider is soft-deleted. Soft-deleted providers are permanently deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider. You cannot reuse the ID of a soft-deleted provider until it is permanently deleted."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Optional. Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still grant access.",
            "type": "boolean"
          },
          "attributeMapping": {
            "description": "Optional. Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such as `subject` and `segment`. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following keys are supported: * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 bytes. * `google.groups`: Groups the external identity belongs to. You can grant groups access to resources using an IAM `principalSet` binding; access applies to all members of the group. You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where `{custom_attribute}` is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained access for a workload to Google Cloud resources. For example: * `google.subject`: `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}` * `google.groups`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}` * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}` Each value must be a [Common Expression Language] (https://opensource.google/projects/cel) function that maps an identity provider credential to the normalized attribute specified by the corresponding map key. You can use the `assertion` keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped attributes must not exceed 8KB. For AWS providers, if no attribute mapping is defined, the following default mapping applies: ``` { \"google.subject\":\"assertion.arn\", \"attribute.aws_role\": \"assertion.arn.contains('assumed-role')\" \" ? assertion.arn.extract('{account_arn}assumed-role/')\" \" + 'assumed-role/'\" \" + assertion.arn.extract('assumed-role/{role_name}/')\" \" : assertion.arn\", } ``` If any custom attribute mappings are defined, they must include a mapping to the `google.subject` attribute. For OIDC providers, you must supply a custom mapping, which must include the `google.subject` attribute. For example, the following maps the `sub` claim of the incoming credential to the `subject` attribute on a Google token: ``` {\"google.subject\": \"assertion.sub\"} ```",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "attributeCondition": {
            "description": "Optional. [A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: * `assertion`: JSON representing the authentication credential issued by the provider. * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`. * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`. The maximum length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credential are accepted. The following example shows how to only allow credentials with a mapped `google.groups` value of `admins`: ``` \"'admins' in google.groups\" ```",
            "type": "string"
          },
          "aws": {
            "description": "An Amazon Web Services identity provider.",
            "$ref": "Aws"
          },
          "oidc": {
            "description": "An OpenId Connect 1.0 identity provider.",
            "$ref": "Oidc"
          },
          "saml": {
            "description": "An SAML 2.0 identity provider.",
            "$ref": "Saml"
          },
          "x509": {
            "description": "An X.509-type identity provider.",
            "$ref": "X509"
          },
          "expireTime": {
            "description": "Output only. Time after which the workload identity pool provider will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.delete",
      "resource": "projects.locations.workloadIdentityPools.providers",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a WorkloadIdentityPoolProvider. Deleting a provider does not revoke credentials that have already been issued; they continue to grant access. You can undelete a provider for 30 days. After 30 days, deletion is permanent. You cannot update deleted providers. However, you can view and list them.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the provider to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.undelete",
      "resource": "projects.locations.workloadIdentityPools.providers",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes a WorkloadIdentityPoolProvider, as long as it was deleted fewer than 30 days ago.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the provider to undelete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteWorkloadIdentityPoolProviderRequest",
      "body_schema": {
        "id": "UndeleteWorkloadIdentityPoolProviderRequest",
        "description": "Request message for UndeleteWorkloadIdentityPoolProvider.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.operations.get",
      "resource": "projects.locations.workloadIdentityPools.providers.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.keys.list",
      "resource": "projects.locations.workloadIdentityPools.providers.keys",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/keys",
      "description": "Lists all non-deleted WorkloadIdentityPoolProviderKeys in a project. If show_deleted is set to `true`, then deleted pools are also listed.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent provider resource to list encryption keys for.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of keys to return. If unspecified, all keys are returned. The maximum value is 10; values above 10 are truncated to 10.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous `ListWorkloadIdentityPoolProviderKeys` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "showDeleted": {
          "description": "Whether to return soft deleted resources as well.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListWorkloadIdentityPoolProviderKeysResponse"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.keys.get",
      "resource": "projects.locations.workloadIdentityPools.providers.keys",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an individual WorkloadIdentityPoolProviderKey.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the key to retrieve.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+/keys/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "WorkloadIdentityPoolProviderKey"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.keys.create",
      "resource": "projects.locations.workloadIdentityPools.providers.keys",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/keys",
      "description": "Create a new WorkloadIdentityPoolProviderKey in a WorkloadIdentityPoolProvider.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent provider resource to create the key in.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "workloadIdentityPoolProviderKeyId": {
          "description": "Required. The ID to use for the key, which becomes the final component of the resource name. This value should be 4-32 characters, and may contain the characters [a-z0-9-].",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "WorkloadIdentityPoolProviderKey",
      "body_schema": {
        "id": "WorkloadIdentityPoolProviderKey",
        "description": "Represents a public key configuration for your workload identity pool provider. The key can be configured in your identity provider to encrypt the SAML assertions. Google holds the corresponding private key which it uses to decrypt encrypted tokens.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the key.",
            "readOnly": true,
            "type": "string"
          },
          "keyData": {
            "description": "Immutable. Public half of the asymmetric key.",
            "$ref": "KeyData"
          },
          "state": {
            "description": "Output only. The state of the key.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The key is active.",
              "The key is soft-deleted. Soft-deleted keys are permanently deleted after approximately 30 days. You can restore a soft-deleted key using UndeleteWorkloadIdentityPoolProviderKey. While a key is deleted, you cannot use it during the federation."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "use": {
            "description": "Required. The purpose of the key.",
            "type": "string",
            "enumDescriptions": [
              "The key use is not known.",
              "The public key is used for encryption purposes."
            ],
            "enum": [
              "KEY_USE_UNSPECIFIED",
              "ENCRYPTION"
            ]
          },
          "expireTime": {
            "description": "Output only. Time after which the key will be permanently purged and cannot be recovered. Note that the key may get purged before this timestamp if the total limit of keys per provider is crossed.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.keys.delete",
      "resource": "projects.locations.workloadIdentityPools.providers.keys",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes an WorkloadIdentityPoolProviderKey. You can undelete a key for 30 days. After 30 days, deletion is permanent.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the encryption key to delete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+/keys/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.keys.undelete",
      "resource": "projects.locations.workloadIdentityPools.providers.keys",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes an WorkloadIdentityPoolProviderKey, as long as it was deleted fewer than 30 days ago.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the encryption key to undelete.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+/keys/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteWorkloadIdentityPoolProviderKeyRequest",
      "body_schema": {
        "id": "UndeleteWorkloadIdentityPoolProviderKeyRequest",
        "description": "Request message for UndeleteWorkloadIdentityPoolProviderKey.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.locations.workloadIdentityPools.providers.keys.operations.get",
      "resource": "projects.locations.workloadIdentityPools.providers.keys.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+/keys/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.list",
      "resource": "projects.serviceAccounts",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/serviceAccounts",
      "description": "Lists every ServiceAccount that belongs to a specific project.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the project associated with the service accounts, such as `projects/my-project-123`.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional limit on the number of service accounts to include in the response. Further accounts can subsequently be obtained by including the ListServiceAccountsResponse.next_page_token in a subsequent request. The default is 20, and the maximum is 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional pagination token returned in an earlier ListServiceAccountsResponse.next_page_token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListServiceAccountsResponse"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.get",
      "resource": "projects.serviceAccounts",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a ServiceAccount.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceAccount"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.create",
      "resource": "projects.serviceAccounts",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+name}/serviceAccounts",
      "description": "Creates a ServiceAccount.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the project associated with the service accounts, such as `projects/my-project-123`.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CreateServiceAccountRequest",
      "body_schema": {
        "id": "CreateServiceAccountRequest",
        "description": "The service account create request.",
        "type": "object",
        "properties": {
          "accountId": {
            "description": "Required. The account id that is used to generate the service account email address and a stable unique id. It is unique within a project, must be 6-30 characters long, and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.",
            "type": "string"
          },
          "serviceAccount": {
            "description": "The ServiceAccount resource to create. Currently, only the following values are user assignable: `display_name` and `description`.",
            "$ref": "ServiceAccount"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceAccount"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.update",
      "resource": "projects.serviceAccounts",
      "action": "update",
      "http_method": "PUT",
      "path_template": "v1/{+name}",
      "description": "**Note:** We are in the process of deprecating this method. Use PatchServiceAccount instead. Updates a ServiceAccount. You can update only the `display_name` field.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ServiceAccount",
      "body_schema": {
        "id": "ServiceAccount",
        "description": "An IAM service account. A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](https://cloud.google.com/iam/help/service-accounts/overview). When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account. //",
        "type": "object",
        "properties": {
          "name": {
            "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
            "type": "string"
          },
          "projectId": {
            "description": "Output only. The ID of the project that owns the service account.",
            "readOnly": true,
            "type": "string"
          },
          "uniqueId": {
            "description": "Output only. The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account.",
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "description": "Output only. The email address of the service account.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes.",
            "type": "string"
          },
          "etag": {
            "description": "Deprecated. Do not use.",
            "deprecated": true,
            "type": "string",
            "format": "byte"
          },
          "description": {
            "description": "Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes.",
            "type": "string"
          },
          "oauth2ClientId": {
            "description": "Output only. The OAuth 2.0 client ID for the service account.",
            "readOnly": true,
            "type": "string"
          },
          "disabled": {
            "description": "Output only. Whether the service account is disabled.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceAccount"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.patch",
      "resource": "projects.serviceAccounts",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Patches a ServiceAccount.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "PatchServiceAccountRequest",
      "body_schema": {
        "id": "PatchServiceAccountRequest",
        "description": "The service account patch request. You can patch only the `display_name` and `description` fields. You must use the `update_mask` field to specify which of these fields you want to patch. Only the fields specified in the request are guaranteed to be returned in the response. Other fields may be empty in the response.",
        "type": "object",
        "properties": {
          "serviceAccount": {
            "$ref": "ServiceAccount"
          },
          "updateMask": {
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceAccount"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.delete",
      "resource": "projects.serviceAccounts",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a ServiceAccount. **Warning:** After you delete a service account, you might not be able to undelete it. If you know that you need to re-enable the service account in the future, use DisableServiceAccount instead. If you delete a service account, IAM permanently removes the service account 30 days later. Google Cloud cannot recover the service account after it is permanently removed, even if you file a support request. To help avoid unplanned outages, we recommend that you disable the service account before you delete it. Use DisableServiceAccount to disable the service account, then wait at least 24 hours and watch for unintended consequences. If there are no unintended consequences, you can delete the service account.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.undelete",
      "resource": "projects.serviceAccounts",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Restores a deleted ServiceAccount. **Important:** It is not always possible to restore a deleted service account. Use this method only as a last resort. After you delete a service account, IAM permanently removes the service account 30 days later. There is no way to restore a deleted service account that has been permanently removed.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteServiceAccountRequest",
      "body_schema": {
        "id": "UndeleteServiceAccountRequest",
        "description": "The service account undelete request.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "UndeleteServiceAccountResponse"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.enable",
      "resource": "projects.serviceAccounts",
      "action": "enable",
      "http_method": "POST",
      "path_template": "v1/{+name}:enable",
      "description": "Enables a ServiceAccount that was disabled by DisableServiceAccount. If the service account is already enabled, then this method has no effect. If the service account was disabled by other means\u2014for example, if Google disabled the service account because it was compromised\u2014you cannot use this method to enable the service account.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "EnableServiceAccountRequest",
      "body_schema": {
        "id": "EnableServiceAccountRequest",
        "description": "The service account enable request.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.disable",
      "resource": "projects.serviceAccounts",
      "action": "disable",
      "http_method": "POST",
      "path_template": "v1/{+name}:disable",
      "description": "Disables a ServiceAccount immediately. If an application uses the service account to authenticate, that application can no longer call Google APIs or access Google Cloud resources. Existing access tokens for the service account are rejected, and requests for new access tokens will fail. To re-enable the service account, use EnableServiceAccount. After you re-enable the service account, its existing access tokens will be accepted, and you can request new access tokens. To help avoid unplanned outages, we recommend that you disable the service account before you delete it. Use this method to disable the service account, then wait at least 24 hours and watch for unintended consequences. If there are no unintended consequences, you can delete the service account with DeleteServiceAccount.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "DisableServiceAccountRequest",
      "body_schema": {
        "id": "DisableServiceAccountRequest",
        "description": "The service account disable request.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.signBlob",
      "resource": "projects.serviceAccounts",
      "action": "signBlob",
      "http_method": "POST",
      "path_template": "v1/{+name}:signBlob",
      "description": " Signs a blob using the system-managed private key for a ServiceAccount.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SignBlobRequest",
      "body_schema": {
        "id": "SignBlobRequest",
        "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The service account sign blob request.",
        "type": "object",
        "properties": {
          "bytesToSign": {
            "description": "Required. Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The bytes to sign.",
            "deprecated": true,
            "type": "string",
            "format": "byte"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "SignBlobResponse"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.signJwt",
      "resource": "projects.serviceAccounts",
      "action": "signJwt",
      "http_method": "POST",
      "path_template": "v1/{+name}:signJwt",
      "description": " Signs a JSON Web Token (JWT) using the system-managed private key for a ServiceAccount.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SignJwtRequest",
      "body_schema": {
        "id": "SignJwtRequest",
        "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The service account sign JWT request.",
        "type": "object",
        "properties": {
          "payload": {
            "description": "Required. Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The JWT payload to sign. Must be a serialized JSON object that contains a JWT Claims Set. For example: `{\"sub\": \"user@example.com\", \"iat\": 313435}` If the JWT Claims Set contains an expiration time (`exp`) claim, it must be an integer timestamp that is not in the past and no more than 12 hours in the future. If the JWT Claims Set does not contain an expiration time (`exp`) claim, this claim is added automatically, with a timestamp that is 1 hour in the future.",
            "deprecated": true,
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "SignJwtResponse"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.getIamPolicy",
      "resource": "projects.serviceAccounts",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the IAM policy that is attached to a ServiceAccount. This IAM policy specifies which principals have access to the service account. This method does not tell you whether the service account has been granted any roles on other resources. To check whether a service account has role grants on a resource, use the `getIamPolicy` method for that resource. For example, to view the role grants for a project, call the Resource Manager API's [projects.getIamPolicy](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy) method.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.setIamPolicy",
      "resource": "projects.serviceAccounts",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the IAM policy that is attached to a ServiceAccount. Use this method to grant or revoke access to the service account. For example, you could grant a principal the ability to impersonate the service account. This method does not enable the service account to access other resources. To grant roles to a service account on a resource, follow these steps: 1. Call the resource's `getIamPolicy` method to get its current IAM policy. 2. Edit the policy so that it binds the service account to an IAM role for the resource. 3. Call the resource's `setIamPolicy` method to update its IAM policy. For detailed instructions, see [Manage access to project, folders, and organizations](https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts) or [Manage access to other resources](https://cloud.google.com/iam/help/access/manage-other-resources).",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.testIamPermissions",
      "resource": "projects.serviceAccounts",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Tests whether the caller has the specified permissions on a ServiceAccount.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.keys.list",
      "resource": "projects.serviceAccounts.keys",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/keys",
      "description": "Lists every ServiceAccountKey for a service account.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "keyTypes": {
          "description": "Filters the types of keys the user wants to include in the list response. Duplicate key types are not allowed. If no key type is provided, all keys are returned.",
          "location": "query",
          "repeated": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified key type. The presence of this in the message will immediately result in an error.",
            "User-managed keys (managed and rotated by the user).",
            "System-managed keys (managed and rotated by Google)."
          ],
          "enum": [
            "KEY_TYPE_UNSPECIFIED",
            "USER_MANAGED",
            "SYSTEM_MANAGED"
          ]
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListServiceAccountKeysResponse"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.keys.get",
      "resource": "projects.serviceAccounts.keys",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a ServiceAccountKey.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the service account key. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}/keys/{KEY_ID}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}/keys/{KEY_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}/keys/{KEY_ID}` * `projects/-/serviceAccounts/{UNIQUE_ID}/keys/{KEY_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account key `projects/-/serviceAccounts/fake@example.com/keys/fake-key`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+/keys/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "publicKeyType": {
          "description": "Optional. The output format of the public key. The default is `TYPE_NONE`, which means that the public key is not returned.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "Do not return the public key.",
            "X509 PEM format.",
            "Raw public key."
          ],
          "enum": [
            "TYPE_NONE",
            "TYPE_X509_PEM_FILE",
            "TYPE_RAW_PUBLIC_KEY"
          ]
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceAccountKey"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.keys.create",
      "resource": "projects.serviceAccounts.keys",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+name}/keys",
      "description": "Creates a ServiceAccountKey.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CreateServiceAccountKeyRequest",
      "body_schema": {
        "id": "CreateServiceAccountKeyRequest",
        "description": "The service account key create request.",
        "type": "object",
        "properties": {
          "privateKeyType": {
            "description": "The output format of the private key. The default value is `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File format.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.",
              "PKCS12 format. The password for the PKCS12 file is `notasecret`. For more information, see https://tools.ietf.org/html/rfc7292.",
              "Google Credentials File format."
            ],
            "enum": [
              "TYPE_UNSPECIFIED",
              "TYPE_PKCS12_FILE",
              "TYPE_GOOGLE_CREDENTIALS_FILE"
            ]
          },
          "keyAlgorithm": {
            "description": "Which type of key and algorithm to use for the key. The default is currently a 2K RSA key. However this may change in the future.",
            "type": "string",
            "enumDescriptions": [
              "An unspecified key algorithm.",
              "1k RSA Key.",
              "2k RSA Key."
            ],
            "enum": [
              "KEY_ALG_UNSPECIFIED",
              "KEY_ALG_RSA_1024",
              "KEY_ALG_RSA_2048"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceAccountKey"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.keys.upload",
      "resource": "projects.serviceAccounts.keys",
      "action": "upload",
      "http_method": "POST",
      "path_template": "v1/{+name}/keys:upload",
      "description": "Uploads the public key portion of a key pair that you manage, and associates the public key with a ServiceAccount. After you upload the public key, you can use the private key from the key pair as a service account key.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource name of the service account key. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UploadServiceAccountKeyRequest",
      "body_schema": {
        "id": "UploadServiceAccountKeyRequest",
        "description": "The service account key upload request.",
        "type": "object",
        "properties": {
          "publicKeyData": {
            "description": "The public key to associate with the service account. Must be an RSA public key that is wrapped in an X.509 v3 certificate. Include the first line, `-----BEGIN CERTIFICATE-----`, and the last line, `-----END CERTIFICATE-----`.",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ServiceAccountKey"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.keys.delete",
      "resource": "projects.serviceAccounts.keys",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a ServiceAccountKey. Deleting a service account key does not revoke short-lived credentials that have been issued based on the service account key.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the service account key. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}/keys/{KEY_ID}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}/keys/{KEY_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}/keys/{KEY_ID}` * `projects/-/serviceAccounts/{UNIQUE_ID}/keys/{KEY_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account key `projects/-/serviceAccounts/fake@example.com/keys/fake-key`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+/keys/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.keys.disable",
      "resource": "projects.serviceAccounts.keys",
      "action": "disable",
      "http_method": "POST",
      "path_template": "v1/{+name}:disable",
      "description": "Disable a ServiceAccountKey. A disabled service account key can be re-enabled with EnableServiceAccountKey.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the service account key. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}/keys/{KEY_ID}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}/keys/{KEY_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}/keys/{KEY_ID}` * `projects/-/serviceAccounts/{UNIQUE_ID}/keys/{KEY_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account key `projects/-/serviceAccounts/fake@example.com/keys/fake-key`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+/keys/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "DisableServiceAccountKeyRequest",
      "body_schema": {
        "id": "DisableServiceAccountKeyRequest",
        "description": "The service account key disable request.",
        "type": "object",
        "properties": {
          "serviceAccountKeyDisableReason": {
            "description": "Optional. Describes the reason this key is being disabled. If unspecified, the default value of SERVICE_ACCOUNT_KEY_DISABLE_REASON_USER_INITIATED will be used.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified disable reason",
              "Disabled by the user",
              "Google detected this Service Account external key's private key data as exposed, typically in a public repository on GitHub or similar.",
              "This service account external key was detected as compromised and used by an attacker."
            ],
            "enum": [
              "SERVICE_ACCOUNT_KEY_DISABLE_REASON_UNSPECIFIED",
              "SERVICE_ACCOUNT_KEY_DISABLE_REASON_USER_INITIATED",
              "SERVICE_ACCOUNT_KEY_DISABLE_REASON_EXPOSED",
              "SERVICE_ACCOUNT_KEY_DISABLE_REASON_COMPROMISE_DETECTED"
            ]
          },
          "extendedStatusMessage": {
            "description": "Optional. Usable by internal google services only. An extended_status_message can be used to include additional information about the key, such as its private key data being exposed on a public repository like GitHub.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "iam.projects.serviceAccounts.keys.enable",
      "resource": "projects.serviceAccounts.keys",
      "action": "enable",
      "http_method": "POST",
      "path_template": "v1/{+name}:enable",
      "description": "Enable a ServiceAccountKey.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the service account key. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}/keys/{KEY_ID}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}/keys/{KEY_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}/keys/{KEY_ID}` * `projects/-/serviceAccounts/{UNIQUE_ID}/keys/{KEY_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to access the service account key `projects/-/serviceAccounts/fake@example.com/keys/fake-key`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "pattern": "^projects/[^/]+/serviceAccounts/[^/]+/keys/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "EnableServiceAccountKeyRequest",
      "body_schema": {
        "id": "EnableServiceAccountKeyRequest",
        "description": "The service account key enable request.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "iam.projects.roles.list",
      "resource": "projects.roles",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/roles",
      "description": "Lists every predefined Role that IAM supports, or every custom role that is defined for an organization or project.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "The `parent` parameter's value depends on the target resource for the request, namely [roles](https://cloud.google.com/iam/docs/reference/rest/v1/roles), [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles), or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `parent` value format is described below: * [roles.list](https://cloud.google.com/iam/docs/reference/rest/v1/roles/list): An empty string. This method doesn't require a resource; it simply returns all [predefined roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles) in IAM. Example request URL: `https://iam.googleapis.com/v1/roles` * [projects.roles.list](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list): `projects/{PROJECT_ID}`. This method lists all project-level [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` * [organizations.roles.list](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list): `organizations/{ORGANIZATION_ID}`. This method lists all organization-level [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional limit on the number of roles to include in the response. The default is 300, and the maximum is 1,000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional pagination token returned in an earlier ListRolesResponse.",
          "location": "query",
          "type": "string"
        },
        "view": {
          "description": "Optional view for the returned Role objects. When `FULL` is specified, the `includedPermissions` field is returned, which includes a list of all permissions in the role. The default value is `BASIC`, which does not return the `includedPermissions` field.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "Omits the `included_permissions` field. This is the default value.",
            "Returns all fields."
          ],
          "enum": [
            "BASIC",
            "FULL"
          ]
        },
        "showDeleted": {
          "description": "Include Roles that have been deleted.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListRolesResponse"
    },
    {
      "operation_id": "iam.projects.roles.get",
      "resource": "projects.roles",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the definition of a Role.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The `name` parameter's value depends on the target resource for the request, namely [roles](https://cloud.google.com/iam/docs/reference/rest/v1/roles), [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles), or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [roles.get](https://cloud.google.com/iam/docs/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`. This method returns results from all [predefined roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles) in IAM. Example request URL: `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` * [projects.roles.get](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/get): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [organizations.roles.get](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/get): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^projects/[^/]+/roles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.projects.roles.create",
      "resource": "projects.roles",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/roles",
      "description": "Creates a new custom Role.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "The `parent` parameter's value depends on the target resource for the request, namely [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles) or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `parent` value format is described below: * [projects.roles.create](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/create): `projects/{PROJECT_ID}`. This method creates project-level [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` * [organizations.roles.create](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/create): `organizations/{ORGANIZATION_ID}`. This method creates organization-level [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CreateRoleRequest",
      "body_schema": {
        "id": "CreateRoleRequest",
        "description": "The request to create a new role.",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The role ID to use for this role. A role ID may contain alphanumeric characters, underscores (`_`), and periods (`.`). It must contain a minimum of 3 characters and a maximum of 64 characters.",
            "type": "string"
          },
          "role": {
            "description": "The Role resource to create.",
            "$ref": "Role"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.projects.roles.patch",
      "resource": "projects.roles",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the definition of a custom Role.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The `name` parameter's value depends on the target resource for the request, namely [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles) or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [projects.roles.patch](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/patch): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [organizations.roles.patch](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/patch): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^projects/[^/]+/roles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "A mask describing which fields in the Role have changed.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "Role",
      "body_schema": {
        "id": "Role",
        "description": "A role in the Identity and Access Management API.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the role. When `Role` is used in `CreateRole`, the role name must not be set. When `Role` is used in output and other input such as `UpdateRole`, the role name is the complete path. For example, `roles/logging.viewer` for predefined roles, `organizations/{ORGANIZATION_ID}/roles/myRole` for organization-level custom roles, and `projects/{PROJECT_ID}/roles/myRole` for project-level custom roles.",
            "type": "string"
          },
          "title": {
            "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A human-readable description for the role.",
            "type": "string"
          },
          "includedPermissions": {
            "description": "The names of the permissions this role grants when bound in an IAM policy.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stage": {
            "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
            "type": "string",
            "enumDescriptions": [
              "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
              "The user has indicated this role is currently in a Beta phase.",
              "The user has indicated this role is generally available.",
              "The user has indicated this role is being deprecated.",
              "This role is disabled and will not contribute permissions to any principals it is granted to in policies.",
              "The user has indicated this role is currently in an EAP phase."
            ],
            "enum": [
              "ALPHA",
              "BETA",
              "GA",
              "DEPRECATED",
              "DISABLED",
              "EAP"
            ]
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write.",
            "type": "string",
            "format": "byte"
          },
          "deleted": {
            "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.projects.roles.delete",
      "resource": "projects.roles",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a custom Role. When you delete a custom role, the following changes occur immediately: * You cannot bind a principal to the custom role in an IAM Policy. * Existing bindings to the custom role are not changed, but they have no effect. * By default, the response from ListRoles does not include the custom role. A deleted custom role still counts toward the [custom role limit](https://cloud.google.com/iam/help/limits) until it is permanently deleted. You have 7 days to undelete the custom role. After 7 days, the following changes occur: * The custom role is permanently deleted and cannot be recovered. * If an IAM policy contains a binding to the custom role, the binding is permanently removed. * The custom role no longer counts toward your custom role limit.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The `name` parameter's value depends on the target resource for the request, namely [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles) or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [projects.roles.delete](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/delete): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [organizations.roles.delete](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/delete): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^projects/[^/]+/roles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "etag": {
          "description": "Used to perform a consistent read-modify-write.",
          "location": "query",
          "type": "string",
          "format": "byte"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.projects.roles.undelete",
      "resource": "projects.roles",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes a custom Role.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The `name` parameter's value depends on the target resource for the request, namely [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles) or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [projects.roles.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/undelete): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [organizations.roles.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/undelete): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^projects/[^/]+/roles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteRoleRequest",
      "body_schema": {
        "id": "UndeleteRoleRequest",
        "description": "The request to undelete an existing role.",
        "type": "object",
        "properties": {
          "etag": {
            "description": "Used to perform a consistent read-modify-write.",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.locations.workforcePools.list",
      "resource": "locations.workforcePools",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+location}/workforcePools",
      "description": "Lists all non-deleted WorkforcePools under the specified parent. If `show_deleted` is set to `true`, then deleted pools are also listed.",
      "required_params": [
        "location"
      ],
      "parameters": {
        "location": {
          "description": "The location of the pool. Format: `locations/{location}`.",
          "pattern": "^locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "parent": {
          "description": "Required. The parent resource to list pools for. Format: `organizations/{org-id}`.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of pools to return. If unspecified, at most 50 pools will be returned. The maximum value is 1000; values above 1000 are truncated to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous `ListWorkforcePools` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "showDeleted": {
          "description": "Whether to return soft-deleted pools.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListWorkforcePoolsResponse"
    },
    {
      "operation_id": "iam.locations.workforcePools.get",
      "resource": "locations.workforcePools",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an individual WorkforcePool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the pool to retrieve. Format: `locations/{location}/workforcePools/{workforce_pool_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "WorkforcePool"
    },
    {
      "operation_id": "iam.locations.workforcePools.create",
      "resource": "locations.workforcePools",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+location}/workforcePools",
      "description": "Creates a new WorkforcePool. You cannot reuse the name of a deleted pool until 30 days after deletion.",
      "required_params": [
        "location"
      ],
      "parameters": {
        "location": {
          "description": "Optional. The location of the pool to create. Format: `locations/{location}`.",
          "pattern": "^locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "workforcePoolId": {
          "description": "Optional. The ID to use for the pool, which becomes the final component of the resource name. The IDs must be a globally unique string of 6 to 63 lowercase letters, digits, or hyphens. It must start with a letter, and cannot have a trailing hyphen. The prefix `gcp-` is reserved for use by Google, and may not be specified.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "WorkforcePool",
      "body_schema": {
        "id": "WorkforcePool",
        "description": "Represents a collection of external workforces. Provides namespaces for federated users that can be referenced in IAM policies.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The resource name of the pool. Format: `locations/{location}/workforcePools/{workforce_pool_id}`",
            "type": "string"
          },
          "parent": {
            "description": "Immutable. The resource name of the parent. Format: `organizations/{org-id}`.",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A user-specified display name of the pool in Google Cloud Console. Cannot exceed 32 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-specified description of the pool. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the pool.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The pool is active and may be used in Google Cloud policies.",
              "The pool is soft-deleted. Soft-deleted pools are permanently deleted after approximately 30 days. You can restore a soft-deleted pool using UndeleteWorkforcePool. You cannot reuse the ID of a soft-deleted pool until it is permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or use existing tokens to access resources. If the pool is undeleted, existing tokens grant access again."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Optional. Disables the workforce pool. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.",
            "type": "boolean"
          },
          "sessionDuration": {
            "description": "Optional. Duration that the Google Cloud access tokens, console sign-in sessions, and `gcloud` sign-in sessions from this pool are valid. Must be greater than 15 minutes (900s) and less than 12 hours (43200s). If `session_duration` is not configured, minted credentials have a default duration of one hour (3600s). For SAML providers, the lifetime of the token is the minimum of the `session_duration` and the `SessionNotOnOrAfter` claim in the SAML assertion.",
            "type": "string",
            "format": "google-duration"
          },
          "expireTime": {
            "description": "Output only. Time after which the workforce pool will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "accessRestrictions": {
            "description": "Optional. Configure access restrictions on the workforce pool users. This is an optional field. If specified web sign-in can be restricted to given set of services or programmatic sign-in can be disabled for pool users.",
            "$ref": "AccessRestrictions"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.patch",
      "resource": "locations.workforcePools",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an existing WorkforcePool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. The resource name of the pool. Format: `locations/{location}/workforcePools/{workforce_pool_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "WorkforcePool",
      "body_schema": {
        "id": "WorkforcePool",
        "description": "Represents a collection of external workforces. Provides namespaces for federated users that can be referenced in IAM policies.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The resource name of the pool. Format: `locations/{location}/workforcePools/{workforce_pool_id}`",
            "type": "string"
          },
          "parent": {
            "description": "Immutable. The resource name of the parent. Format: `organizations/{org-id}`.",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A user-specified display name of the pool in Google Cloud Console. Cannot exceed 32 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-specified description of the pool. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the pool.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The pool is active and may be used in Google Cloud policies.",
              "The pool is soft-deleted. Soft-deleted pools are permanently deleted after approximately 30 days. You can restore a soft-deleted pool using UndeleteWorkforcePool. You cannot reuse the ID of a soft-deleted pool until it is permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or use existing tokens to access resources. If the pool is undeleted, existing tokens grant access again."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Optional. Disables the workforce pool. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.",
            "type": "boolean"
          },
          "sessionDuration": {
            "description": "Optional. Duration that the Google Cloud access tokens, console sign-in sessions, and `gcloud` sign-in sessions from this pool are valid. Must be greater than 15 minutes (900s) and less than 12 hours (43200s). If `session_duration` is not configured, minted credentials have a default duration of one hour (3600s). For SAML providers, the lifetime of the token is the minimum of the `session_duration` and the `SessionNotOnOrAfter` claim in the SAML assertion.",
            "type": "string",
            "format": "google-duration"
          },
          "expireTime": {
            "description": "Output only. Time after which the workforce pool will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "accessRestrictions": {
            "description": "Optional. Configure access restrictions on the workforce pool users. This is an optional field. If specified web sign-in can be restricted to given set of services or programmatic sign-in can be disabled for pool users.",
            "$ref": "AccessRestrictions"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.delete",
      "resource": "locations.workforcePools",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a WorkforcePool. You cannot use a deleted WorkforcePool to exchange external credentials for Google Cloud credentials. However, deletion does not revoke credentials that have already been issued. Credentials issued for a deleted pool do not grant access to resources. If the pool is undeleted, and the credentials are not expired, they grant access again. You can undelete a pool for 30 days. After 30 days, deletion is permanent. You cannot update deleted pools. However, you can view and list them.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the pool to delete. Format: `locations/{location}/workforcePools/{workforce_pool_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.undelete",
      "resource": "locations.workforcePools",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes a WorkforcePool, as long as it was deleted fewer than 30 days ago.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the pool to undelete. Format: `locations/{location}/workforcePools/{workforce_pool_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteWorkforcePoolRequest",
      "body_schema": {
        "id": "UndeleteWorkforcePoolRequest",
        "description": "Request message for UndeleteWorkforcePool.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.getIamPolicy",
      "resource": "locations.workforcePools",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets IAM policies on a WorkforcePool.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GetIamPolicyRequest",
      "body_schema": {
        "id": "GetIamPolicyRequest",
        "description": "Request message for `GetIamPolicy` method.",
        "type": "object",
        "properties": {
          "options": {
            "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
            "$ref": "GetPolicyOptions"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "iam.locations.workforcePools.setIamPolicy",
      "resource": "locations.workforcePools",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets IAM policies on a WorkforcePool.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          },
          "updateMask": {
            "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "iam.locations.workforcePools.testIamPermissions",
      "resource": "locations.workforcePools",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns the caller's permissions on the WorkforcePool. If the pool doesn't exist, this call returns an empty set of permissions. It doesn't return a `NOT_FOUND` error.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "iam.locations.workforcePools.operations.get",
      "resource": "locations.workforcePools.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.list",
      "resource": "locations.workforcePools.providers",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/providers",
      "description": "Lists all non-deleted WorkforcePoolProviders in a WorkforcePool. If `show_deleted` is set to `true`, then deleted providers are also listed.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The pool to list providers for. Format: `locations/{location}/workforcePools/{workforce_pool_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of providers to return. If unspecified, at most 50 providers are returned. The maximum value is 100; values above 100 are truncated to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous `ListWorkforcePoolProviders` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "showDeleted": {
          "description": "Whether to return soft-deleted providers.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListWorkforcePoolProvidersResponse"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.get",
      "resource": "locations.workforcePools.providers",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an individual WorkforcePoolProvider.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the provider to retrieve. Format: `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "WorkforcePoolProvider"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.create",
      "resource": "locations.workforcePools.providers",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/providers",
      "description": "Creates a new WorkforcePoolProvider in a WorkforcePool. You cannot reuse the name of a deleted provider until 30 days after deletion.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The pool to create this provider in. Format: `locations/{location}/workforcePools/{workforce_pool_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "workforcePoolProviderId": {
          "description": "Required. The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and may not be specified.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "WorkforcePoolProvider",
      "body_schema": {
        "id": "WorkforcePoolProvider",
        "description": "A configuration for an external identity provider.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The resource name of the provider. Format: `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}`",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A user-specified display name for the provider. Cannot exceed 32 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-specified description of the provider. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the provider.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The provider is active and may be used to validate authentication credentials.",
              "The provider is soft-deleted. Soft-deleted providers are permanently deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkforcePoolProvider."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Optional. Disables the workforce pool provider. You cannot use a disabled provider to exchange tokens. However, existing tokens still grant access.",
            "type": "boolean"
          },
          "attributeMapping": {
            "description": "Required. Maps attributes from the authentication credentials issued by an external identity provider to Google Cloud attributes, such as `subject` and `segment`. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following keys are supported: * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings. This is also the subject that appears in Cloud Logging logs. This is a required field and the mapped subject cannot exceed 127 bytes. * `google.groups`: Groups the authenticating user belongs to. You can grant groups access to resources using an IAM `principalSet` binding; access applies to all members of the group. * `google.display_name`: The name of the authenticated user. This is an optional field and the mapped display name cannot exceed 100 bytes. If not set, `google.subject` will be displayed instead. This attribute cannot be referenced in IAM bindings. * `google.profile_photo`: The URL that specifies the authenticated user's thumbnail photo. This is an optional field. When set, the image will be visible as the user's profile picture. If not set, a generic user icon will be displayed instead. This attribute cannot be referenced in IAM bindings. * `google.posix_username`: The Linux username used by OS Login. This is an optional field and the mapped POSIX username cannot exceed 32 characters, The key must match the regex \"^a-zA-Z0-9._{0,31}$\". This attribute cannot be referenced in IAM bindings. You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where {custom_attribute} is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained access for a workforce pool to Google Cloud resources. For example: * `google.subject`: `principal://iam.googleapis.com/locations/global/workforcePools/{pool}/subject/{value}` * `google.groups`: `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool}/group/{value}` * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool}/attribute.{custom_attribute}/{value}` Each value must be a [Common Expression Language] (https://opensource.google/projects/cel) function that maps an identity provider credential to the normalized attribute specified by the corresponding map key. You can use the `assertion` keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped attributes must not exceed 4KB. For OIDC providers, you must supply a custom mapping that includes the `google.subject` attribute. For example, the following maps the `sub` claim of the incoming credential to the `subject` attribute on a Google token: ``` {\"google.subject\": \"assertion.sub\"} ```",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "attributeCondition": {
            "description": "Optional. A [Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: * `assertion`: JSON representing the authentication credential issued by the provider. * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`. `google.profile_photo`, `google.display_name` and `google.posix_username` are not supported. * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`. The maximum length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credentials will be accepted. The following example shows how to only allow credentials with a mapped `google.groups` value of `admins`: ``` \"'admins' in google.groups\" ```",
            "type": "string"
          },
          "saml": {
            "description": "A SAML identity provider configuration.",
            "$ref": "GoogleIamAdminV1WorkforcePoolProviderSaml"
          },
          "oidc": {
            "description": "An OpenId Connect 1.0 identity provider configuration.",
            "$ref": "GoogleIamAdminV1WorkforcePoolProviderOidc"
          },
          "expireTime": {
            "description": "Output only. Time after which the workload pool provider will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "extraAttributesOauth2Client": {
            "description": "Optional. The configuration for OAuth 2.0 client used to get the additional user attributes. This should be used when users can't get the desired claims in authentication credentials. Currently this configuration is only supported with OIDC protocol.",
            "$ref": "GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2Client"
          },
          "detailedAuditLogging": {
            "description": "Optional. If true, populates additional debug information in Cloud Audit Logs for this provider. Logged attribute mappings and values can be found in `sts.googleapis.com` data access logs. Default value is false.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.patch",
      "resource": "locations.workforcePools.providers",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an existing WorkforcePoolProvider.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. The resource name of the provider. Format: `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "WorkforcePoolProvider",
      "body_schema": {
        "id": "WorkforcePoolProvider",
        "description": "A configuration for an external identity provider.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The resource name of the provider. Format: `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}`",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. A user-specified display name for the provider. Cannot exceed 32 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A user-specified description of the provider. Cannot exceed 256 characters.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the provider.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The provider is active and may be used to validate authentication credentials.",
              "The provider is soft-deleted. Soft-deleted providers are permanently deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkforcePoolProvider."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "disabled": {
            "description": "Optional. Disables the workforce pool provider. You cannot use a disabled provider to exchange tokens. However, existing tokens still grant access.",
            "type": "boolean"
          },
          "attributeMapping": {
            "description": "Required. Maps attributes from the authentication credentials issued by an external identity provider to Google Cloud attributes, such as `subject` and `segment`. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following keys are supported: * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings. This is also the subject that appears in Cloud Logging logs. This is a required field and the mapped subject cannot exceed 127 bytes. * `google.groups`: Groups the authenticating user belongs to. You can grant groups access to resources using an IAM `principalSet` binding; access applies to all members of the group. * `google.display_name`: The name of the authenticated user. This is an optional field and the mapped display name cannot exceed 100 bytes. If not set, `google.subject` will be displayed instead. This attribute cannot be referenced in IAM bindings. * `google.profile_photo`: The URL that specifies the authenticated user's thumbnail photo. This is an optional field. When set, the image will be visible as the user's profile picture. If not set, a generic user icon will be displayed instead. This attribute cannot be referenced in IAM bindings. * `google.posix_username`: The Linux username used by OS Login. This is an optional field and the mapped POSIX username cannot exceed 32 characters, The key must match the regex \"^a-zA-Z0-9._{0,31}$\". This attribute cannot be referenced in IAM bindings. You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where {custom_attribute} is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained access for a workforce pool to Google Cloud resources. For example: * `google.subject`: `principal://iam.googleapis.com/locations/global/workforcePools/{pool}/subject/{value}` * `google.groups`: `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool}/group/{value}` * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool}/attribute.{custom_attribute}/{value}` Each value must be a [Common Expression Language] (https://opensource.google/projects/cel) function that maps an identity provider credential to the normalized attribute specified by the corresponding map key. You can use the `assertion` keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped attributes must not exceed 4KB. For OIDC providers, you must supply a custom mapping that includes the `google.subject` attribute. For example, the following maps the `sub` claim of the incoming credential to the `subject` attribute on a Google token: ``` {\"google.subject\": \"assertion.sub\"} ```",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "attributeCondition": {
            "description": "Optional. A [Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: * `assertion`: JSON representing the authentication credential issued by the provider. * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`. `google.profile_photo`, `google.display_name` and `google.posix_username` are not supported. * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`. The maximum length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credentials will be accepted. The following example shows how to only allow credentials with a mapped `google.groups` value of `admins`: ``` \"'admins' in google.groups\" ```",
            "type": "string"
          },
          "saml": {
            "description": "A SAML identity provider configuration.",
            "$ref": "GoogleIamAdminV1WorkforcePoolProviderSaml"
          },
          "oidc": {
            "description": "An OpenId Connect 1.0 identity provider configuration.",
            "$ref": "GoogleIamAdminV1WorkforcePoolProviderOidc"
          },
          "expireTime": {
            "description": "Output only. Time after which the workload pool provider will be permanently purged and cannot be recovered.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "extraAttributesOauth2Client": {
            "description": "Optional. The configuration for OAuth 2.0 client used to get the additional user attributes. This should be used when users can't get the desired claims in authentication credentials. Currently this configuration is only supported with OIDC protocol.",
            "$ref": "GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2Client"
          },
          "detailedAuditLogging": {
            "description": "Optional. If true, populates additional debug information in Cloud Audit Logs for this provider. Logged attribute mappings and values can be found in `sts.googleapis.com` data access logs. Default value is false.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.delete",
      "resource": "locations.workforcePools.providers",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a WorkforcePoolProvider. Deleting a provider does not revoke credentials that have already been issued; they continue to grant access. You can undelete a provider for 30 days. After 30 days, deletion is permanent. You cannot update deleted providers. However, you can view and list them.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the provider to delete. Format: `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.undelete",
      "resource": "locations.workforcePools.providers",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes a WorkforcePoolProvider, as long as it was deleted fewer than 30 days ago.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the provider to undelete. Format: `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteWorkforcePoolProviderRequest",
      "body_schema": {
        "id": "UndeleteWorkforcePoolProviderRequest",
        "description": "Request message for UndeleteWorkforcePoolProvider.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.operations.get",
      "resource": "locations.workforcePools.providers.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.keys.list",
      "resource": "locations.workforcePools.providers.keys",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/keys",
      "description": "Lists all non-deleted WorkforcePoolProviderKeys in a WorkforcePoolProvider. If `show_deleted` is set to `true`, then deleted keys are also listed.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The provider resource to list encryption keys for. Format: `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of keys to return. If unspecified, all keys are returned. The maximum value is 10; values above 10 are truncated to 10.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous `ListWorkforcePoolProviderKeys` call. Provide this to retrieve the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "showDeleted": {
          "description": "Whether to return soft-deleted keys.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListWorkforcePoolProviderKeysResponse"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.keys.get",
      "resource": "locations.workforcePools.providers.keys",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a WorkforcePoolProviderKey.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the key to retrieve.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+/keys/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "WorkforcePoolProviderKey"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.keys.create",
      "resource": "locations.workforcePools.providers.keys",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/keys",
      "description": "Creates a new WorkforcePoolProviderKey in a WorkforcePoolProvider.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The provider to create this key in.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "workforcePoolProviderKeyId": {
          "description": "Required. The ID to use for the key, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "WorkforcePoolProviderKey",
      "body_schema": {
        "id": "WorkforcePoolProviderKey",
        "description": "Represents a public key configuration for a Workforce Pool Provider. The key can be configured in your identity provider to encrypt SAML assertions. Google holds the corresponding private key, which it uses to decrypt encrypted tokens.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The resource name of the key. Format: `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}/keys/{key_id}`",
            "type": "string"
          },
          "keyData": {
            "description": "Immutable. Public half of the asymmetric key.",
            "$ref": "KeyData"
          },
          "state": {
            "description": "Output only. The state of the key.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "State unspecified.",
              "The key is active.",
              "The key is soft-deleted. Soft-deleted keys are permanently deleted after approximately 30 days. You can restore a soft-deleted key using UndeleteWorkforcePoolProviderKey."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "use": {
            "description": "Required. The purpose of the key.",
            "type": "string",
            "enumDescriptions": [
              "KeyUse unspecified.",
              "The key is used for encryption."
            ],
            "enum": [
              "KEY_USE_UNSPECIFIED",
              "ENCRYPTION"
            ]
          },
          "expireTime": {
            "description": "Output only. The time after which the key will be permanently deleted and cannot be recovered. Note that the key may get purged before this time if the total limit of keys per provider is exceeded.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.keys.delete",
      "resource": "locations.workforcePools.providers.keys",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a WorkforcePoolProviderKey. You can undelete a key for 30 days. After 30 days, deletion is permanent.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the key to delete.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+/keys/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.keys.undelete",
      "resource": "locations.workforcePools.providers.keys",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes a WorkforcePoolProviderKey, as long as it was deleted fewer than 30 days ago.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the key to undelete.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+/keys/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteWorkforcePoolProviderKeyRequest",
      "body_schema": {
        "id": "UndeleteWorkforcePoolProviderKeyRequest",
        "description": "Request message for UndeleteWorkforcePoolProviderKey.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.providers.keys.operations.get",
      "resource": "locations.workforcePools.providers.keys.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/providers/[^/]+/keys/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.subjects.delete",
      "resource": "locations.workforcePools.subjects",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a WorkforcePoolSubject. Subject must not already be in a deleted state. A WorkforcePoolSubject is automatically created the first time an external credential is exchanged for a Google Cloud credential using a mapped `google.subject` attribute. There is no endpoint to manually create a WorkforcePoolSubject. For 30 days after a WorkforcePoolSubject is deleted, using the same `google.subject` attribute in token exchanges with Google Cloud STS fails. Call UndeleteWorkforcePoolSubject to undelete a WorkforcePoolSubject that has been deleted, within within 30 days of deleting it. After 30 days, the WorkforcePoolSubject is permanently deleted. At this point, a token exchange with Google Cloud STS that uses the same mapped `google.subject` attribute automatically creates a new WorkforcePoolSubject that is unrelated to the previously deleted WorkforcePoolSubject but has the same `google.subject` value.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the WorkforcePoolSubject. Special characters, like `/` and `:`, must be escaped, because all URLs need to conform to the \"When to Escape and Unescape\" section of [RFC3986](https://www.ietf.org/rfc/rfc2396.txt). Format: `locations/{location}/workforcePools/{workforce_pool_id}/subjects/{subject_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/subjects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.subjects.undelete",
      "resource": "locations.workforcePools.subjects",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes a WorkforcePoolSubject, as long as it was deleted fewer than 30 days ago.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the WorkforcePoolSubject. Special characters, like `/` and `:`, must be escaped, because all URLs need to conform to the \"When to Escape and Unescape\" section of [RFC3986](https://www.ietf.org/rfc/rfc2396.txt). Format: `locations/{location}/workforcePools/{workforce_pool_id}/subjects/{subject_id}`",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/subjects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteWorkforcePoolSubjectRequest",
      "body_schema": {
        "id": "UndeleteWorkforcePoolSubjectRequest",
        "description": "Request message for UndeleteWorkforcePoolSubject.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.locations.workforcePools.subjects.operations.get",
      "resource": "locations.workforcePools.subjects.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^locations/[^/]+/workforcePools/[^/]+/subjects/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "iam.roles.queryGrantableRoles",
      "resource": "roles",
      "action": "queryGrantableRoles",
      "http_method": "POST",
      "path_template": "v1/roles:queryGrantableRoles",
      "description": "Lists roles that can be granted on a Google Cloud resource. A role is grantable if the IAM policy for the resource can contain bindings to the role.",
      "required_params": [],
      "parameters": {},
      "body_schema_ref": "QueryGrantableRolesRequest",
      "body_schema": {
        "id": "QueryGrantableRolesRequest",
        "description": "The grantable role query request.",
        "type": "object",
        "properties": {
          "fullResourceName": {
            "description": "Required. Required. The full resource name to query from the list of grantable roles. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`.",
            "type": "string"
          },
          "view": {
            "type": "string",
            "enumDescriptions": [
              "Omits the `included_permissions` field. This is the default value.",
              "Returns all fields."
            ],
            "enum": [
              "BASIC",
              "FULL"
            ]
          },
          "pageSize": {
            "description": "Optional limit on the number of roles to include in the response. The default is 300, and the maximum is 2,000.",
            "type": "integer",
            "format": "int32"
          },
          "pageToken": {
            "description": "Optional pagination token returned in an earlier QueryGrantableRolesResponse.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "QueryGrantableRolesResponse"
    },
    {
      "operation_id": "iam.roles.list",
      "resource": "roles",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/roles",
      "description": "Lists every predefined Role that IAM supports, or every custom role that is defined for an organization or project.",
      "required_params": [],
      "parameters": {
        "parent": {
          "description": "The `parent` parameter's value depends on the target resource for the request, namely [roles](https://cloud.google.com/iam/docs/reference/rest/v1/roles), [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles), or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `parent` value format is described below: * [roles.list](https://cloud.google.com/iam/docs/reference/rest/v1/roles/list): An empty string. This method doesn't require a resource; it simply returns all [predefined roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles) in IAM. Example request URL: `https://iam.googleapis.com/v1/roles` * [projects.roles.list](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list): `projects/{PROJECT_ID}`. This method lists all project-level [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` * [organizations.roles.list](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list): `organizations/{ORGANIZATION_ID}`. This method lists all organization-level [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional limit on the number of roles to include in the response. The default is 300, and the maximum is 1,000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional pagination token returned in an earlier ListRolesResponse.",
          "location": "query",
          "type": "string"
        },
        "view": {
          "description": "Optional view for the returned Role objects. When `FULL` is specified, the `includedPermissions` field is returned, which includes a list of all permissions in the role. The default value is `BASIC`, which does not return the `includedPermissions` field.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "Omits the `included_permissions` field. This is the default value.",
            "Returns all fields."
          ],
          "enum": [
            "BASIC",
            "FULL"
          ]
        },
        "showDeleted": {
          "description": "Include Roles that have been deleted.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListRolesResponse"
    },
    {
      "operation_id": "iam.roles.get",
      "resource": "roles",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the definition of a Role.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The `name` parameter's value depends on the target resource for the request, namely [roles](https://cloud.google.com/iam/docs/reference/rest/v1/roles), [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles), or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [roles.get](https://cloud.google.com/iam/docs/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`. This method returns results from all [predefined roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles) in IAM. Example request URL: `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` * [projects.roles.get](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/get): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [organizations.roles.get](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/get): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^roles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.organizations.roles.list",
      "resource": "organizations.roles",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/roles",
      "description": "Lists every predefined Role that IAM supports, or every custom role that is defined for an organization or project.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "The `parent` parameter's value depends on the target resource for the request, namely [roles](https://cloud.google.com/iam/docs/reference/rest/v1/roles), [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles), or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `parent` value format is described below: * [roles.list](https://cloud.google.com/iam/docs/reference/rest/v1/roles/list): An empty string. This method doesn't require a resource; it simply returns all [predefined roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles) in IAM. Example request URL: `https://iam.googleapis.com/v1/roles` * [projects.roles.list](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list): `projects/{PROJECT_ID}`. This method lists all project-level [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` * [organizations.roles.list](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list): `organizations/{ORGANIZATION_ID}`. This method lists all organization-level [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^organizations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional limit on the number of roles to include in the response. The default is 300, and the maximum is 1,000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional pagination token returned in an earlier ListRolesResponse.",
          "location": "query",
          "type": "string"
        },
        "view": {
          "description": "Optional view for the returned Role objects. When `FULL` is specified, the `includedPermissions` field is returned, which includes a list of all permissions in the role. The default value is `BASIC`, which does not return the `includedPermissions` field.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "Omits the `included_permissions` field. This is the default value.",
            "Returns all fields."
          ],
          "enum": [
            "BASIC",
            "FULL"
          ]
        },
        "showDeleted": {
          "description": "Include Roles that have been deleted.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListRolesResponse"
    },
    {
      "operation_id": "iam.organizations.roles.get",
      "resource": "organizations.roles",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the definition of a Role.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The `name` parameter's value depends on the target resource for the request, namely [roles](https://cloud.google.com/iam/docs/reference/rest/v1/roles), [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles), or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [roles.get](https://cloud.google.com/iam/docs/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`. This method returns results from all [predefined roles](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles) in IAM. Example request URL: `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` * [projects.roles.get](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/get): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [organizations.roles.get](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/get): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^organizations/[^/]+/roles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.organizations.roles.create",
      "resource": "organizations.roles",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/roles",
      "description": "Creates a new custom Role.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "The `parent` parameter's value depends on the target resource for the request, namely [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles) or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `parent` value format is described below: * [projects.roles.create](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/create): `projects/{PROJECT_ID}`. This method creates project-level [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` * [organizations.roles.create](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/create): `organizations/{ORGANIZATION_ID}`. This method creates organization-level [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^organizations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CreateRoleRequest",
      "body_schema": {
        "id": "CreateRoleRequest",
        "description": "The request to create a new role.",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The role ID to use for this role. A role ID may contain alphanumeric characters, underscores (`_`), and periods (`.`). It must contain a minimum of 3 characters and a maximum of 64 characters.",
            "type": "string"
          },
          "role": {
            "description": "The Role resource to create.",
            "$ref": "Role"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.organizations.roles.patch",
      "resource": "organizations.roles",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the definition of a custom Role.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The `name` parameter's value depends on the target resource for the request, namely [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles) or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [projects.roles.patch](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/patch): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [organizations.roles.patch](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/patch): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^organizations/[^/]+/roles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "A mask describing which fields in the Role have changed.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "Role",
      "body_schema": {
        "id": "Role",
        "description": "A role in the Identity and Access Management API.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the role. When `Role` is used in `CreateRole`, the role name must not be set. When `Role` is used in output and other input such as `UpdateRole`, the role name is the complete path. For example, `roles/logging.viewer` for predefined roles, `organizations/{ORGANIZATION_ID}/roles/myRole` for organization-level custom roles, and `projects/{PROJECT_ID}/roles/myRole` for project-level custom roles.",
            "type": "string"
          },
          "title": {
            "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A human-readable description for the role.",
            "type": "string"
          },
          "includedPermissions": {
            "description": "The names of the permissions this role grants when bound in an IAM policy.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stage": {
            "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
            "type": "string",
            "enumDescriptions": [
              "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
              "The user has indicated this role is currently in a Beta phase.",
              "The user has indicated this role is generally available.",
              "The user has indicated this role is being deprecated.",
              "This role is disabled and will not contribute permissions to any principals it is granted to in policies.",
              "The user has indicated this role is currently in an EAP phase."
            ],
            "enum": [
              "ALPHA",
              "BETA",
              "GA",
              "DEPRECATED",
              "DISABLED",
              "EAP"
            ]
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write.",
            "type": "string",
            "format": "byte"
          },
          "deleted": {
            "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.organizations.roles.delete",
      "resource": "organizations.roles",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a custom Role. When you delete a custom role, the following changes occur immediately: * You cannot bind a principal to the custom role in an IAM Policy. * Existing bindings to the custom role are not changed, but they have no effect. * By default, the response from ListRoles does not include the custom role. A deleted custom role still counts toward the [custom role limit](https://cloud.google.com/iam/help/limits) until it is permanently deleted. You have 7 days to undelete the custom role. After 7 days, the following changes occur: * The custom role is permanently deleted and cannot be recovered. * If an IAM policy contains a binding to the custom role, the binding is permanently removed. * The custom role no longer counts toward your custom role limit.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The `name` parameter's value depends on the target resource for the request, namely [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles) or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [projects.roles.delete](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/delete): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [organizations.roles.delete](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/delete): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^organizations/[^/]+/roles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "etag": {
          "description": "Used to perform a consistent read-modify-write.",
          "location": "query",
          "type": "string",
          "format": "byte"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.organizations.roles.undelete",
      "resource": "organizations.roles",
      "action": "undelete",
      "http_method": "POST",
      "path_template": "v1/{+name}:undelete",
      "description": "Undeletes a custom Role.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The `name` parameter's value depends on the target resource for the request, namely [projects](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles) or [organizations](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [projects.roles.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/undelete): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [organizations.roles.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/undelete): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only [custom roles](https://cloud.google.com/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
          "pattern": "^organizations/[^/]+/roles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UndeleteRoleRequest",
      "body_schema": {
        "id": "UndeleteRoleRequest",
        "description": "The request to undelete an existing role.",
        "type": "object",
        "properties": {
          "etag": {
            "description": "Used to perform a consistent read-modify-write.",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Role"
    },
    {
      "operation_id": "iam.permissions.queryTestablePermissions",
      "resource": "permissions",
      "action": "queryTestablePermissions",
      "http_method": "POST",
      "path_template": "v1/permissions:queryTestablePermissions",
      "description": "Lists every permission that you can test on a resource. A permission is testable if you can check whether a principal has that permission on the resource.",
      "required_params": [],
      "parameters": {},
      "body_schema_ref": "QueryTestablePermissionsRequest",
      "body_schema": {
        "id": "QueryTestablePermissionsRequest",
        "description": "A request to get permissions which can be tested on a resource.",
        "type": "object",
        "properties": {
          "fullResourceName": {
            "description": "Required. The full resource name to query from the list of testable permissions. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`.",
            "type": "string"
          },
          "pageSize": {
            "description": "Optional limit on the number of permissions to include in the response. The default is 100, and the maximum is 1,000.",
            "type": "integer",
            "format": "int32"
          },
          "pageToken": {
            "description": "Optional pagination token returned in an earlier QueryTestablePermissionsRequest.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "QueryTestablePermissionsResponse"
    },
    {
      "operation_id": "iam.iamPolicies.queryAuditableServices",
      "resource": "iamPolicies",
      "action": "queryAuditableServices",
      "http_method": "POST",
      "path_template": "v1/iamPolicies:queryAuditableServices",
      "description": "Returns a list of services that allow you to opt into audit logs that are not generated by default. To learn more about audit logs, see the [Logging documentation](https://cloud.google.com/logging/docs/audit).",
      "required_params": [],
      "parameters": {},
      "body_schema_ref": "QueryAuditableServicesRequest",
      "body_schema": {
        "id": "QueryAuditableServicesRequest",
        "description": "A request to get the list of auditable services for a resource.",
        "type": "object",
        "properties": {
          "fullResourceName": {
            "description": "Required. The full resource name to query from the list of auditable services. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "QueryAuditableServicesResponse"
    },
    {
      "operation_id": "iam.iamPolicies.lintPolicy",
      "resource": "iamPolicies",
      "action": "lintPolicy",
      "http_method": "POST",
      "path_template": "v1/iamPolicies:lintPolicy",
      "description": "Lints, or validates, an IAM policy. Currently checks the google.iam.v1.Binding.condition field, which contains a condition expression for a role binding. Successful calls to this method always return an HTTP `200 OK` status code, even if the linter detects an issue in the IAM policy.",
      "required_params": [],
      "parameters": {},
      "body_schema_ref": "LintPolicyRequest",
      "body_schema": {
        "id": "LintPolicyRequest",
        "description": "The request to lint an IAM policy object.",
        "type": "object",
        "properties": {
          "fullResourceName": {
            "description": "The full resource name of the policy this lint request is about. The name follows the Google Cloud format for full resource names. For example, a Google Cloud project with ID `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`. The resource name is not used to read a policy from IAM. Only the data in the request object is linted.",
            "type": "string"
          },
          "condition": {
            "description": "google.iam.v1.Binding.condition object to be linted.",
            "$ref": "Expr"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "LintPolicyResponse"
    }
  ]
}