{
  "service": "spanner",
  "version": "v1",
  "base_url": "https://spanner.googleapis.com/",
  "total_endpoints": 99,
  "endpoints": [
    {
      "operation_id": "spanner.scans.list",
      "resource": "scans",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}",
      "description": "Return available scans given a Database-specific resource name.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The unique name of the parent resource, specific to the Database service implementing this interface.",
          "pattern": "^scans$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "view": {
          "description": "Specifies which parts of the Scan should be returned in the response. Note, only the SUMMARY view (the default) is currently supported for ListScans.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "Not specified, equivalent to SUMMARY.",
            "Server responses only include `name`, `details`, `start_time` and `end_time`. The default value. Note, the ListScans method may only use this view type, others view types are not supported.",
            "Full representation of the scan is returned in the server response, including `data`."
          ],
          "enum": [
            "VIEW_UNSPECIFIED",
            "SUMMARY",
            "FULL"
          ]
        },
        "filter": {
          "description": "A filter expression to restrict the results based on information present in the available Scan collection. The filter applies to all fields within the Scan message except for `data`.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of items to return.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The next_page_token value returned from a previous List request, if any.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "ListScansResponse"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.list",
      "resource": "projects.instanceConfigs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/instanceConfigs",
      "description": "Lists the supported instance configurations for a given project. Returns both Google-managed configurations and user-managed configurations.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the project for which a list of supported instance configurations is requested. Values are of the form `projects/`.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Number of instance configurations to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListInstanceConfigsResponse.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListInstanceConfigsResponse"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.get",
      "resource": "projects.instanceConfigs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets information about a particular instance configuration.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the requested instance configuration. Values are of the form `projects//instanceConfigs/`.",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "InstanceConfig"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.create",
      "resource": "projects.instanceConfigs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/instanceConfigs",
      "description": "Creates an instance configuration and begins preparing it to be used. The returned long-running operation can be used to track the progress of preparing the new instance configuration. The instance configuration name is assigned by the caller. If the named instance configuration already exists, `CreateInstanceConfig` returns `ALREADY_EXISTS`. Immediately after the request returns: * The instance configuration is readable via the API, with all requested attributes. The instance configuration's reconciling field is set to true. Its state is `CREATING`. While the operation is pending: * Cancelling the operation renders the instance configuration immediately unreadable via the API. * Except for deleting the creating resource, all other attempts to modify the instance configuration are rejected. Upon completion of the returned operation: * Instances can be created using the instance configuration. * The instance configuration's reconciling field becomes false. Its state becomes `READY`. The returned long-running operation will have a name of the format `/operations/` and can be used to track creation of the instance configuration. The metadata field type is CreateInstanceConfigMetadata. The response field type is InstanceConfig, if successful. Authorization requires `spanner.instanceConfigs.create` permission on the resource parent.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the project in which to create the instance configuration. Values are of the form `projects/`.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CreateInstanceConfigRequest",
      "body_schema": {
        "id": "CreateInstanceConfigRequest",
        "description": "The request for CreateInstanceConfig.",
        "type": "object",
        "properties": {
          "instanceConfigId": {
            "description": "Required. The ID of the instance configuration to create. Valid identifiers are of the form `custom-[-a-z0-9]*[a-z0-9]` and must be between 2 and 64 characters in length. The `custom-` prefix is required to avoid name conflicts with Google-managed configurations.",
            "type": "string"
          },
          "instanceConfig": {
            "description": "Required. The `InstanceConfig` proto of the configuration to create. `instance_config.name` must be `/instanceConfigs/`. `instance_config.base_config` must be a Google-managed configuration name, e.g. /instanceConfigs/us-east1, /instanceConfigs/nam3.",
            "$ref": "InstanceConfig"
          },
          "validateOnly": {
            "description": "An option to validate, but not actually execute, a request, and provide the same response.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.patch",
      "resource": "projects.instanceConfigs",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an instance configuration. The returned long-running operation can be used to track the progress of updating the instance. If the named instance configuration does not exist, returns `NOT_FOUND`. Only user-managed configurations can be updated. Immediately after the request returns: * The instance configuration's reconciling field is set to true. While the operation is pending: * Cancelling the operation sets its metadata's cancel_time. The operation is guaranteed to succeed at undoing all changes, after which point it terminates with a `CANCELLED` status. * All other attempts to modify the instance configuration are rejected. * Reading the instance configuration via the API continues to give the pre-request values. Upon completion of the returned operation: * Creating instances using the instance configuration uses the new values. * The new values of the instance configuration are readable via the API. * The instance configuration's reconciling field becomes false. The returned long-running operation will have a name of the format `/operations/` and can be used to track the instance configuration modification. The metadata field type is UpdateInstanceConfigMetadata. The response field type is InstanceConfig, if successful. Authorization requires `spanner.instanceConfigs.update` permission on the resource name.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "A unique identifier for the instance configuration. Values are of the form `projects//instanceConfigs/a-z*`. User instance configuration must start with `custom-`.",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UpdateInstanceConfigRequest",
      "body_schema": {
        "id": "UpdateInstanceConfigRequest",
        "description": "The request for UpdateInstanceConfig.",
        "type": "object",
        "properties": {
          "instanceConfig": {
            "description": "Required. The user instance configuration to update, which must always include the instance configuration name. Otherwise, only fields mentioned in update_mask need be included. To prevent conflicts of concurrent updates, etag can be used.",
            "$ref": "InstanceConfig"
          },
          "updateMask": {
            "description": "Required. A mask specifying which fields in InstanceConfig should be updated. The field mask must always be specified; this prevents any future fields in InstanceConfig from being erased accidentally by clients that do not know about them. Only display_name and labels can be updated.",
            "type": "string",
            "format": "google-fieldmask"
          },
          "validateOnly": {
            "description": "An option to validate, but not actually execute, a request, and provide the same response.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.delete",
      "resource": "projects.instanceConfigs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes the instance configuration. Deletion is only allowed when no instances are using the configuration. If any instances are using the configuration, returns `FAILED_PRECONDITION`. Only user-managed configurations can be deleted. Authorization requires `spanner.instanceConfigs.delete` permission on the resource name.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the instance configuration to be deleted. Values are of the form `projects//instanceConfigs/`",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "etag": {
          "description": "Used for optimistic concurrency control as a way to help prevent simultaneous deletes of an instance configuration from overwriting each other. If not empty, the API only deletes the instance configuration when the etag provided matches the current status of the requested instance configuration. Otherwise, deletes the instance configuration without checking the current status of the requested instance configuration.",
          "location": "query",
          "type": "string"
        },
        "validateOnly": {
          "description": "An option to validate, but not actually execute, a request, and provide the same response.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.operations.list",
      "resource": "projects.instanceConfigs.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+/operations$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListOperationsResponse"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.operations.get",
      "resource": "projects.instanceConfigs.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.operations.delete",
      "resource": "projects.instanceConfigs.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.operations.cancel",
      "resource": "projects.instanceConfigs.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.ssdCaches.operations.list",
      "resource": "projects.instanceConfigs.ssdCaches.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+/ssdCaches/[^/]+/operations$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListOperationsResponse"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.ssdCaches.operations.get",
      "resource": "projects.instanceConfigs.ssdCaches.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+/ssdCaches/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.ssdCaches.operations.delete",
      "resource": "projects.instanceConfigs.ssdCaches.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+/ssdCaches/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instanceConfigs.ssdCaches.operations.cancel",
      "resource": "projects.instanceConfigs.ssdCaches.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/instanceConfigs/[^/]+/ssdCaches/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instanceConfigOperations.list",
      "resource": "projects.instanceConfigOperations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/instanceConfigOperations",
      "description": "Lists the user-managed instance configuration long-running operations in the given project. An instance configuration operation has a name of the form `projects//instanceConfigs//operations/`. The long-running operation metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that have completed/failed/canceled within the last 7 days, and pending operations. Operations returned are ordered by `operation.metadata.value.start_time` in descending order starting from the most recently started operation.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The project of the instance configuration operations. Values are of the form `projects/`.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "An expression that filters the list of returned operations. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string, a number, or a boolean. The comparison operator must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`. Colon `:` is the contains operator. Filter rules are not case sensitive. The following fields in the Operation are eligible for filtering: * `name` - The name of the long-running operation * `done` - False if the operation is in progress, else true. * `metadata.@type` - the type of metadata. For example, the type string for CreateInstanceConfigMetadata is `type.googleapis.com/google.spanner.admin.instance.v1.CreateInstanceConfigMetadata`. * `metadata.` - any field in metadata.value. `metadata.@type` must be specified first, if filtering on metadata fields. * `error` - Error associated with the long-running operation. * `response.@type` - the type of response. * `response.` - any field in response.value. You can combine multiple expressions by enclosing each expression in parentheses. By default, expressions are combined with AND logic. However, you can specify AND, OR, and NOT logic explicitly. Here are a few examples: * `done:true` - The operation is complete. * `(metadata.@type=` \\ `type.googleapis.com/google.spanner.admin.instance.v1.CreateInstanceConfigMetadata) AND` \\ `(metadata.instance_config.name:custom-config) AND` \\ `(metadata.progress.start_time < \\\"2021-03-28T14:50:00Z\\\") AND` \\ `(error:*)` - Return operations where: * The operation's metadata type is CreateInstanceConfigMetadata. * The instance configuration name contains \"custom-config\". * The operation started before 2021-03-28T14:50:00Z. * The operation resulted in an error.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Number of operations to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListInstanceConfigOperationsResponse to the same `parent` and with the same `filter`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListInstanceConfigOperationsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.list",
      "resource": "projects.instances",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/instances",
      "description": "Lists all instances in the given project.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the project for which a list of instances is requested. Values are of the form `projects/`.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Number of instances to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListInstancesResponse.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: * `name` * `display_name` * `labels.key` where key is the name of a label Some examples of using filters are: * `name:*` --> The instance has a name. * `name:Howl` --> The instance's name contains the string \"howl\". * `name:HOWL` --> Equivalent to above. * `NAME:howl` --> Equivalent to above. * `labels.env:*` --> The instance has the label \"env\". * `labels.env:dev` --> The instance has the label \"env\" and the value of the label contains the string \"dev\". * `name:howl labels.env:dev` --> The instance's name contains \"howl\" and it has the label \"env\" with its value containing \"dev\".",
          "location": "query",
          "type": "string"
        },
        "instanceDeadline": {
          "description": "Deadline used while retrieving metadata for instances. Instances whose metadata cannot be retrieved within this deadline will be added to unreachable in ListInstancesResponse.",
          "location": "query",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListInstancesResponse"
    },
    {
      "operation_id": "spanner.projects.instances.get",
      "resource": "projects.instances",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets information about a particular instance.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the requested instance. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "fieldMask": {
          "description": "If field_mask is present, specifies the subset of Instance fields that should be returned. If absent, all Instance fields are returned.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Instance"
    },
    {
      "operation_id": "spanner.projects.instances.create",
      "resource": "projects.instances",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/instances",
      "description": "Creates an instance and begins preparing it to begin serving. The returned long-running operation can be used to track the progress of preparing the new instance. The instance name is assigned by the caller. If the named instance already exists, `CreateInstance` returns `ALREADY_EXISTS`. Immediately upon completion of this request: * The instance is readable via the API, with all requested attributes but no allocated resources. Its state is `CREATING`. Until completion of the returned operation: * Cancelling the operation renders the instance immediately unreadable via the API. * The instance can be deleted. * All other attempts to modify the instance are rejected. Upon completion of the returned operation: * Billing for all successfully-allocated resources begins (some types may have lower than the requested levels). * Databases can be created in the instance. * The instance's allocated resource levels are readable via the API. * The instance's state becomes `READY`. The returned long-running operation will have a name of the format `/operations/` and can be used to track creation of the instance. The metadata field type is CreateInstanceMetadata. The response field type is Instance, if successful.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the project in which to create the instance. Values are of the form `projects/`.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CreateInstanceRequest",
      "body_schema": {
        "id": "CreateInstanceRequest",
        "description": "The request for CreateInstance.",
        "type": "object",
        "properties": {
          "instanceId": {
            "description": "Required. The ID of the instance to create. Valid identifiers are of the form `a-z*[a-z0-9]` and must be between 2 and 64 characters in length.",
            "type": "string"
          },
          "instance": {
            "description": "Required. The instance to create. The name may be omitted, but if specified must be `/instances/`.",
            "$ref": "Instance"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.patch",
      "resource": "projects.instances",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an instance, and begins allocating or releasing resources as requested. The returned long-running operation can be used to track the progress of updating the instance. If the named instance does not exist, returns `NOT_FOUND`. Immediately upon completion of this request: * For resource types for which a decrease in the instance's allocation has been requested, billing is based on the newly-requested level. Until completion of the returned operation: * Cancelling the operation sets its metadata's cancel_time, and begins restoring resources to their pre-request values. The operation is guaranteed to succeed at undoing all resource changes, after which point it terminates with a `CANCELLED` status. * All other attempts to modify the instance are rejected. * Reading the instance via the API continues to give the pre-request resource levels. Upon completion of the returned operation: * Billing begins for all successfully-allocated resources (some types may have lower than the requested levels). * All newly-reserved resources are available for serving the instance's tables. * The instance's new resource levels are readable via the API. The returned long-running operation will have a name of the format `/operations/` and can be used to track the instance modification. The metadata field type is UpdateInstanceMetadata. The response field type is Instance, if successful. Authorization requires `spanner.instances.update` permission on the resource name.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A unique identifier for the instance, which cannot be changed after the instance is created. Values are of the form `projects//instances/a-z*[a-z0-9]`. The final segment of the name must be between 2 and 64 characters in length.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UpdateInstanceRequest",
      "body_schema": {
        "id": "UpdateInstanceRequest",
        "description": "The request for UpdateInstance.",
        "type": "object",
        "properties": {
          "instance": {
            "description": "Required. The instance to update, which must always include the instance name. Otherwise, only fields mentioned in field_mask need be included.",
            "$ref": "Instance"
          },
          "fieldMask": {
            "description": "Required. A mask specifying which fields in Instance should be updated. The field mask must always be specified; this prevents any future fields in Instance from being erased accidentally by clients that do not know about them.",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.delete",
      "resource": "projects.instances",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes an instance. Immediately upon completion of the request: * Billing ceases for all of the instance's reserved resources. Soon afterward: * The instance and *all of its databases* immediately and irrevocably disappear from the API. All data in the databases is permanently deleted.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the instance to be deleted. Values are of the form `projects//instances/`",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.setIamPolicy",
      "resource": "projects.instances",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on an instance resource. Replaces any existing policy. Authorization requires `spanner.instances.setIamPolicy` on resource.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which the policy is being set. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for databases resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "spanner.projects.instances.getIamPolicy",
      "resource": "projects.instances",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for an instance resource. Returns an empty policy if an instance exists but does not have a policy set. Authorization requires `spanner.instances.getIamPolicy` on resource.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which the policy is being retrieved. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for database resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GetIamPolicyRequest",
      "body_schema": {
        "id": "GetIamPolicyRequest",
        "description": "Request message for `GetIamPolicy` method.",
        "type": "object",
        "properties": {
          "options": {
            "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
            "$ref": "GetPolicyOptions"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "spanner.projects.instances.testIamPermissions",
      "resource": "projects.instances",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that the caller has on the specified instance resource. Attempting this RPC on a non-existent Cloud Spanner instance resource will result in a NOT_FOUND error if the user has `spanner.instances.list` permission on the containing Google Cloud Project. Otherwise returns an empty set of permissions.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which permissions are being tested. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for database resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "REQUIRED: The set of permissions to check for 'resource'. Permissions with wildcards (such as '*', 'spanner.*', 'spanner.instances.*') are not allowed.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.move",
      "resource": "projects.instances",
      "action": "move",
      "http_method": "POST",
      "path_template": "v1/{+name}:move",
      "description": "Moves an instance to the target instance configuration. You can use the returned long-running operation to track the progress of moving the instance. `MoveInstance` returns `FAILED_PRECONDITION` if the instance meets any of the following criteria: * Is undergoing a move to a different instance configuration * Has backups * Has an ongoing update * Contains any CMEK-enabled databases * Is a free trial instance While the operation is pending: * All other attempts to modify the instance, including changes to its compute capacity, are rejected. * The following database and backup admin operations are rejected: * `DatabaseAdmin.CreateDatabase` * `DatabaseAdmin.UpdateDatabaseDdl` (disabled if default_leader is specified in the request.) * `DatabaseAdmin.RestoreDatabase` * `DatabaseAdmin.CreateBackup` * `DatabaseAdmin.CopyBackup` * Both the source and target instance configurations are subject to hourly compute and storage charges. * The instance might experience higher read-write latencies and a higher transaction abort rate. However, moving an instance doesn't cause any downtime. The returned long-running operation has a name of the format `/operations/` and can be used to track the move instance operation. The metadata field type is MoveInstanceMetadata. The response field type is Instance, if successful. Cancelling the operation sets its metadata's cancel_time. Cancellation is not immediate because it involves moving any data previously moved to the target instance configuration back to the original instance configuration. You can use this operation to track the progress of the cancellation. Upon successful completion of the cancellation, the operation terminates with `CANCELLED` status. If not cancelled, upon completion of the returned operation: * The instance successfully moves to the target instance configuration. * You are billed for compute and storage in target instance configuration. Authorization requires the `spanner.instances.update` permission on the resource instance. For more details, see [Move an instance](https://cloud.google.com/spanner/docs/move-instance).",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The instance to move. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "MoveInstanceRequest",
      "body_schema": {
        "id": "MoveInstanceRequest",
        "description": "The request for MoveInstance.",
        "type": "object",
        "properties": {
          "targetConfig": {
            "description": "Required. The target instance configuration where to move the instance. Values are of the form `projects//instanceConfigs/`.",
            "type": "string"
          },
          "targetDatabaseMoveConfigs": {
            "description": "Optional. The configuration for each database in the target instance configuration.",
            "type": "array",
            "items": {
              "$ref": "DatabaseMoveConfig"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.databases.getScans",
      "resource": "projects.instances.databases",
      "action": "getScans",
      "http_method": "GET",
      "path_template": "v1/{+name}/scans",
      "description": "Request a specific scan with Database-specific data for Cloud Key Visualizer.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The unique name of the scan containing the requested information, specific to the Database service implementing this interface.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "view": {
          "description": "Specifies which parts of the Scan should be returned in the response. Note, if left unspecified, the FULL view is assumed.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "Not specified, equivalent to SUMMARY.",
            "Server responses only include `name`, `details`, `start_time` and `end_time`. The default value. Note, the ListScans method may only use this view type, others view types are not supported.",
            "Full representation of the scan is returned in the server response, including `data`."
          ],
          "enum": [
            "VIEW_UNSPECIFIED",
            "SUMMARY",
            "FULL"
          ]
        },
        "startTime": {
          "description": "These fields restrict the Database-specific information returned in the `Scan.data` field. If a `View` is provided that does not include the `Scan.data` field, these are ignored. This range of time must be entirely contained within the defined time range of the targeted scan. The lower bound for the time range to retrieve Scan data for.",
          "location": "query",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The upper bound for the time range to retrieve Scan data for.",
          "location": "query",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "Scan"
    },
    {
      "operation_id": "spanner.projects.instances.databases.list",
      "resource": "projects.instances.databases",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/databases",
      "description": "Lists Cloud Spanner databases.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The instance whose databases should be listed. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Number of databases to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListDatabasesResponse.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListDatabasesResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.create",
      "resource": "projects.instances.databases",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/databases",
      "description": "Creates a new Spanner database and starts to prepare it for serving. The returned long-running operation will have a name of the format `/operations/` and can be used to track preparation of the database. The metadata field type is CreateDatabaseMetadata. The response field type is Database, if successful.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the instance that will serve the new database. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CreateDatabaseRequest",
      "body_schema": {
        "id": "CreateDatabaseRequest",
        "description": "The request for CreateDatabase.",
        "type": "object",
        "properties": {
          "createStatement": {
            "description": "Required. A `CREATE DATABASE` statement, which specifies the ID of the new database. The database ID must conform to the regular expression `a-z*[a-z0-9]` and be between 2 and 30 characters in length. If the database ID is a reserved word or if it contains a hyphen, the database ID must be enclosed in backticks (`` ` ``).",
            "type": "string"
          },
          "extraStatements": {
            "description": "Optional. A list of DDL statements to run inside the newly created database. Statements can create tables, indexes, etc. These statements execute atomically with the creation of the database: if there is an error in any statement, the database is not created.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "encryptionConfig": {
            "description": "Optional. The encryption configuration for the database. If this field is not specified, Cloud Spanner will encrypt/decrypt all data at rest using Google default encryption.",
            "$ref": "EncryptionConfig"
          },
          "databaseDialect": {
            "description": "Optional. The dialect of the Cloud Spanner Database.",
            "type": "string",
            "enumDescriptions": [
              "Default value. This value will create a database with the GOOGLE_STANDARD_SQL dialect.",
              "GoogleSQL supported SQL.",
              "PostgreSQL supported SQL."
            ],
            "enum": [
              "DATABASE_DIALECT_UNSPECIFIED",
              "GOOGLE_STANDARD_SQL",
              "POSTGRESQL"
            ]
          },
          "protoDescriptors": {
            "description": "Optional. Proto descriptors used by `CREATE/ALTER PROTO BUNDLE` statements in 'extra_statements'. Contains a protobuf-serialized [`google.protobuf.FileDescriptorSet`](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto) descriptor set. To generate it, [install](https://grpc.io/docs/protoc-installation/) and run `protoc` with --include_imports and --descriptor_set_out. For example, to generate for moon/shot/app.proto, run ``` $protoc --proto_path=/app_path --proto_path=/lib_path \\ --include_imports \\ --descriptor_set_out=descriptors.data \\ moon/shot/app.proto ``` For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.databases.get",
      "resource": "projects.instances.databases",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the state of a Cloud Spanner database.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the requested database. Values are of the form `projects//instances//databases/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Database"
    },
    {
      "operation_id": "spanner.projects.instances.databases.patch",
      "resource": "projects.instances.databases",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a Cloud Spanner database. The returned long-running operation can be used to track the progress of updating the database. If the named database does not exist, returns `NOT_FOUND`. While the operation is pending: * The database's reconciling field is set to true. * Cancelling the operation is best-effort. If the cancellation succeeds, the operation metadata's cancel_time is set, the updates are reverted, and the operation terminates with a `CANCELLED` status. * New UpdateDatabase requests will return a `FAILED_PRECONDITION` error until the pending operation is done (returns successfully or with error). * Reading the database via the API continues to give the pre-request values. Upon completion of the returned operation: * The new values are in effect and readable via the API. * The database's reconciling field becomes false. The returned long-running operation will have a name of the format `projects//instances//databases//operations/` and can be used to track the database modification. The metadata field type is UpdateDatabaseMetadata. The response field type is Database, if successful.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the database. Values are of the form `projects//instances//databases/`, where `` is as specified in the `CREATE DATABASE` statement. This name can be passed to other API methods to identify the database.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update. Currently, only `enable_drop_protection` field can be updated.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "Database",
      "body_schema": {
        "id": "Database",
        "description": "A Cloud Spanner database.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The name of the database. Values are of the form `projects//instances//databases/`, where `` is as specified in the `CREATE DATABASE` statement. This name can be passed to other API methods to identify the database.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The current database state.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Not specified.",
              "The database is still being created. Operations on the database may fail with `FAILED_PRECONDITION` in this state.",
              "The database is fully created and ready for use.",
              "The database is fully created and ready for use, but is still being optimized for performance and cannot handle full load. In this state, the database still references the backup it was restore from, preventing the backup from being deleted. When optimizations are complete, the full performance of the database will be restored, and the database will transition to `READY` state."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "READY",
              "READY_OPTIMIZING"
            ]
          },
          "createTime": {
            "description": "Output only. If exists, the time at which the database creation started.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "restoreInfo": {
            "description": "Output only. Applicable only for restored databases. Contains information about the restore source.",
            "readOnly": true,
            "$ref": "RestoreInfo"
          },
          "encryptionConfig": {
            "description": "Output only. For databases that are using customer managed encryption, this field contains the encryption configuration for the database. For databases that are using Google default or other types of encryption, this field is empty.",
            "readOnly": true,
            "$ref": "EncryptionConfig"
          },
          "encryptionInfo": {
            "description": "Output only. For databases that are using customer managed encryption, this field contains the encryption information for the database, such as all Cloud KMS key versions that are in use. The `encryption_status` field inside of each `EncryptionInfo` is not populated. For databases that are using Google default or other types of encryption, this field is empty. This field is propagated lazily from the backend. There might be a delay from when a key version is being used and when it appears in this field.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "EncryptionInfo"
            }
          },
          "versionRetentionPeriod": {
            "description": "Output only. The period in which Cloud Spanner retains all versions of data for the database. This is the same as the value of version_retention_period database option set using UpdateDatabaseDdl. Defaults to 1 hour, if not set.",
            "readOnly": true,
            "type": "string"
          },
          "earliestVersionTime": {
            "description": "Output only. Earliest timestamp at which older versions of the data can be read. This value is continuously updated by Cloud Spanner and becomes stale the moment it is queried. If you are using this value to recover data, make sure to account for the time from the moment when the value is queried to the moment when you initiate the recovery.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "defaultLeader": {
            "description": "Output only. The read-write region which contains the database's leader replicas. This is the same as the value of default_leader database option set using DatabaseAdmin.CreateDatabase or DatabaseAdmin.UpdateDatabaseDdl. If not explicitly set, this is empty.",
            "readOnly": true,
            "type": "string"
          },
          "databaseDialect": {
            "description": "Output only. The dialect of the Cloud Spanner Database.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Default value. This value will create a database with the GOOGLE_STANDARD_SQL dialect.",
              "GoogleSQL supported SQL.",
              "PostgreSQL supported SQL."
            ],
            "enum": [
              "DATABASE_DIALECT_UNSPECIFIED",
              "GOOGLE_STANDARD_SQL",
              "POSTGRESQL"
            ]
          },
          "enableDropProtection": {
            "description": "Optional. Whether drop protection is enabled for this database. Defaults to false, if not set. For more details, please see how to [prevent accidental database deletion](https://cloud.google.com/spanner/docs/prevent-database-deletion).",
            "type": "boolean"
          },
          "reconciling": {
            "description": "Output only. If true, the database is being updated. If false, there are no ongoing update operations for the database.",
            "readOnly": true,
            "type": "boolean"
          },
          "quorumInfo": {
            "description": "Output only. Applicable only for databases that use dual-region instance configurations. Contains information about the quorum.",
            "readOnly": true,
            "$ref": "QuorumInfo"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.databases.updateDdl",
      "resource": "projects.instances.databases",
      "action": "updateDdl",
      "http_method": "PATCH",
      "path_template": "v1/{+database}/ddl",
      "description": "Updates the schema of a Cloud Spanner database by creating/altering/dropping tables, columns, indexes, etc. The returned long-running operation will have a name of the format `/operations/` and can be used to track execution of the schema change(s). The metadata field type is UpdateDatabaseDdlMetadata. The operation has no response.",
      "required_params": [
        "database"
      ],
      "parameters": {
        "database": {
          "description": "Required. The database to update.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UpdateDatabaseDdlRequest",
      "body_schema": {
        "id": "UpdateDatabaseDdlRequest",
        "description": "Enqueues the given DDL statements to be applied, in order but not necessarily all at once, to the database schema at some point (or points) in the future. The server checks that the statements are executable (syntactically valid, name tables that exist, etc.) before enqueueing them, but they may still fail upon later execution (e.g., if a statement from another batch of statements is applied first and it conflicts in some way, or if there is some data-related problem like a `NULL` value in a column to which `NOT NULL` would be added). If a statement fails, all subsequent statements in the batch are automatically cancelled. Each batch of statements is assigned a name which can be used with the Operations API to monitor progress. See the operation_id field for more details.",
        "type": "object",
        "properties": {
          "statements": {
            "description": "Required. DDL statements to be applied to the database.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operationId": {
            "description": "If empty, the new update request is assigned an automatically-generated operation ID. Otherwise, `operation_id` is used to construct the name of the resulting Operation. Specifying an explicit operation ID simplifies determining whether the statements were executed in the event that the UpdateDatabaseDdl call is replayed, or the return value is otherwise lost: the database and `operation_id` fields can be combined to form the `name` of the resulting longrunning.Operation: `/operations/`. `operation_id` should be unique within the database, and must be a valid identifier: `a-z*`. Note that automatically-generated operation IDs always begin with an underscore. If the named operation already exists, UpdateDatabaseDdl returns `ALREADY_EXISTS`.",
            "type": "string"
          },
          "protoDescriptors": {
            "description": "Optional. Proto descriptors used by CREATE/ALTER PROTO BUNDLE statements. Contains a protobuf-serialized [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto). To generate it, [install](https://grpc.io/docs/protoc-installation/) and run `protoc` with --include_imports and --descriptor_set_out. For example, to generate for moon/shot/app.proto, run ``` $protoc --proto_path=/app_path --proto_path=/lib_path \\ --include_imports \\ --descriptor_set_out=descriptors.data \\ moon/shot/app.proto ``` For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.databases.dropDatabase",
      "resource": "projects.instances.databases",
      "action": "dropDatabase",
      "http_method": "DELETE",
      "path_template": "v1/{+database}",
      "description": "Drops (aka deletes) a Cloud Spanner database. Completed backups for the database will be retained according to their `expire_time`. Note: Cloud Spanner might continue to accept requests for a few seconds after the database has been deleted.",
      "required_params": [
        "database"
      ],
      "parameters": {
        "database": {
          "description": "Required. The database to be dropped.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.databases.getDdl",
      "resource": "projects.instances.databases",
      "action": "getDdl",
      "http_method": "GET",
      "path_template": "v1/{+database}/ddl",
      "description": "Returns the schema of a Cloud Spanner database as a list of formatted DDL statements. This method does not show pending schema updates, those may be queried using the Operations API.",
      "required_params": [
        "database"
      ],
      "parameters": {
        "database": {
          "description": "Required. The database whose schema we wish to get. Values are of the form `projects//instances//databases/`",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "GetDatabaseDdlResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.changequorum",
      "resource": "projects.instances.databases",
      "action": "changequorum",
      "http_method": "POST",
      "path_template": "v1/{+name}:changequorum",
      "description": "`ChangeQuorum` is strictly restricted to databases that use dual-region instance configurations. Initiates a background operation to change the quorum of a database from dual-region mode to single-region mode or vice versa. The returned long-running operation has a name of the format `projects//instances//databases//operations/` and can be used to track execution of the `ChangeQuorum`. The metadata field type is ChangeQuorumMetadata. Authorization requires `spanner.databases.changequorum` permission on the resource database.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the database in which to apply `ChangeQuorum`. Values are of the form `projects//instances//databases/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ChangeQuorumRequest",
      "body_schema": {
        "id": "ChangeQuorumRequest",
        "description": "The request for ChangeQuorum.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Name of the database in which to apply `ChangeQuorum`. Values are of the form `projects//instances//databases/`.",
            "type": "string"
          },
          "quorumType": {
            "description": "Required. The type of this quorum.",
            "$ref": "QuorumType"
          },
          "etag": {
            "description": "Optional. The etag is the hash of the `QuorumInfo`. The `ChangeQuorum` operation is only performed if the etag matches that of the `QuorumInfo` in the current database resource. Otherwise the API returns an `ABORTED` error. The etag is used for optimistic concurrency control as a way to help prevent simultaneous change quorum requests that could create a race condition.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.databases.setIamPolicy",
      "resource": "projects.instances.databases",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on a database or backup resource. Replaces any existing policy. Authorization requires `spanner.databases.setIamPolicy` permission on resource. For backups, authorization requires `spanner.backups.setIamPolicy` permission on resource. For backup schedules, authorization requires `spanner.backupSchedules.setIamPolicy` permission on resource.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which the policy is being set. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for databases resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "spanner.projects.instances.databases.getIamPolicy",
      "resource": "projects.instances.databases",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a database or backup resource. Returns an empty policy if a database or backup exists but does not have a policy set. Authorization requires `spanner.databases.getIamPolicy` permission on resource. For backups, authorization requires `spanner.backups.getIamPolicy` permission on resource. For backup schedules, authorization requires `spanner.backupSchedules.getIamPolicy` permission on resource.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which the policy is being retrieved. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for database resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GetIamPolicyRequest",
      "body_schema": {
        "id": "GetIamPolicyRequest",
        "description": "Request message for `GetIamPolicy` method.",
        "type": "object",
        "properties": {
          "options": {
            "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
            "$ref": "GetPolicyOptions"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "spanner.projects.instances.databases.testIamPermissions",
      "resource": "projects.instances.databases",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that the caller has on the specified database or backup resource. Attempting this RPC on a non-existent Cloud Spanner database will result in a NOT_FOUND error if the user has `spanner.databases.list` permission on the containing Cloud Spanner instance. Otherwise returns an empty set of permissions. Calling this method on a backup that does not exist will result in a NOT_FOUND error if the user has `spanner.backups.list` permission on the containing instance. Calling this method on a backup schedule that does not exist will result in a NOT_FOUND error if the user has `spanner.backupSchedules.list` permission on the containing database.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which permissions are being tested. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for database resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "REQUIRED: The set of permissions to check for 'resource'. Permissions with wildcards (such as '*', 'spanner.*', 'spanner.instances.*') are not allowed.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.restore",
      "resource": "projects.instances.databases",
      "action": "restore",
      "http_method": "POST",
      "path_template": "v1/{+parent}/databases:restore",
      "description": "Create a new database by restoring from a completed backup. The new database must be in the same project and in an instance with the same instance configuration as the instance containing the backup. The returned database long-running operation has a name of the format `projects//instances//databases//operations/`, and can be used to track the progress of the operation, and to cancel it. The metadata field type is RestoreDatabaseMetadata. The response type is Database, if successful. Cancelling the returned operation will stop the restore and delete the database. There can be only one database being restored into an instance at a time. Once the restore operation completes, a new restore operation can be initiated, without waiting for the optimize operation associated with the first restore to complete.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the instance in which to create the restored database. This instance must be in the same project and have the same instance configuration as the instance containing the source backup. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RestoreDatabaseRequest",
      "body_schema": {
        "id": "RestoreDatabaseRequest",
        "description": "The request for RestoreDatabase.",
        "type": "object",
        "properties": {
          "databaseId": {
            "description": "Required. The id of the database to create and restore to. This database must not already exist. The `database_id` appended to `parent` forms the full database name of the form `projects//instances//databases/`.",
            "type": "string"
          },
          "backup": {
            "description": "Name of the backup from which to restore. Values are of the form `projects//instances//backups/`.",
            "type": "string"
          },
          "encryptionConfig": {
            "description": "Optional. An encryption configuration describing the encryption type and key resources in Cloud KMS used to encrypt/decrypt the database to restore to. If this field is not specified, the restored database will use the same encryption configuration as the backup by default, namely encryption_type = `USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION`.",
            "$ref": "RestoreDatabaseEncryptionConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.databases.addSplitPoints",
      "resource": "projects.instances.databases",
      "action": "addSplitPoints",
      "http_method": "POST",
      "path_template": "v1/{+database}:addSplitPoints",
      "description": "Adds split points to specified tables and indexes of a database.",
      "required_params": [
        "database"
      ],
      "parameters": {
        "database": {
          "description": "Required. The database on whose tables or indexes the split points are to be added. Values are of the form `projects//instances//databases/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "AddSplitPointsRequest",
      "body_schema": {
        "id": "AddSplitPointsRequest",
        "description": "The request for AddSplitPoints.",
        "type": "object",
        "properties": {
          "splitPoints": {
            "description": "Required. The split points to add.",
            "type": "array",
            "items": {
              "$ref": "SplitPoints"
            }
          },
          "initiator": {
            "description": "Optional. A user-supplied tag associated with the split points. For example, \"initial_data_load\", \"special_event_1\". Defaults to \"CloudAddSplitPointsAPI\" if not specified. The length of the tag must not exceed 50 characters, or else it is trimmed. Only valid UTF8 characters are allowed.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "AddSplitPointsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.operations.list",
      "resource": "projects.instances.databases.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/operations$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListOperationsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.operations.get",
      "resource": "projects.instances.databases.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.databases.operations.delete",
      "resource": "projects.instances.databases.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.databases.operations.cancel",
      "resource": "projects.instances.databases.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.adapter",
      "resource": "projects.instances.databases.sessions",
      "action": "adapter",
      "http_method": "POST",
      "path_template": "v1/{+parent}/sessions:adapter",
      "description": "Creates a new session to be used for requests made by the adapter. A session identifies a specific incarnation of a database resource and is meant to be reused across many `AdaptMessage` calls.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The database in which the new session is created.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "AdapterSession",
      "body_schema": {
        "id": "AdapterSession",
        "description": "A session in the Cloud Spanner Adapter API.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The name of the session. This is always system-assigned.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "AdapterSession"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.adaptMessage",
      "resource": "projects.instances.databases.sessions",
      "action": "adaptMessage",
      "http_method": "POST",
      "path_template": "v1/{+name}:adaptMessage",
      "description": "Handles a single message from the client and returns the result as a stream. The server will interpret the message frame and respond with message frames to the client.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The database session in which the adapter request is processed.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "AdaptMessageRequest",
      "body_schema": {
        "id": "AdaptMessageRequest",
        "description": "Message sent by the client to the adapter.",
        "type": "object",
        "properties": {
          "protocol": {
            "description": "Required. Identifier for the underlying wire protocol.",
            "type": "string"
          },
          "payload": {
            "description": "Optional. Uninterpreted bytes from the underlying wire protocol.",
            "type": "string",
            "format": "byte"
          },
          "attachments": {
            "description": "Optional. Opaque request state passed by the client to the server.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "AdaptMessageResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.create",
      "resource": "projects.instances.databases.sessions",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+database}/sessions",
      "description": "Creates a new session. A session can be used to perform transactions that read and/or modify data in a Cloud Spanner database. Sessions are meant to be reused for many consecutive transactions. Sessions can only execute one transaction at a time. To execute multiple concurrent read-write/write-only transactions, create multiple sessions. Note that standalone reads and queries use a transaction internally, and count toward the one transaction limit. Active sessions use additional server resources, so it's a good idea to delete idle and unneeded sessions. Aside from explicit deletes, Cloud Spanner can delete sessions when no operations are sent for more than an hour. If a session is deleted, requests to it return `NOT_FOUND`. Idle sessions can be kept alive by sending a trivial SQL query periodically, for example, `\"SELECT 1\"`.",
      "required_params": [
        "database"
      ],
      "parameters": {
        "database": {
          "description": "Required. The database in which the new session is created.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CreateSessionRequest",
      "body_schema": {
        "id": "CreateSessionRequest",
        "description": "The request for CreateSession.",
        "type": "object",
        "properties": {
          "session": {
            "description": "Required. The session to create.",
            "$ref": "Session"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "Session"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.batchCreate",
      "resource": "projects.instances.databases.sessions",
      "action": "batchCreate",
      "http_method": "POST",
      "path_template": "v1/{+database}/sessions:batchCreate",
      "description": "Creates multiple new sessions. This API can be used to initialize a session cache on the clients. See https://goo.gl/TgSFN2 for best practices on session cache management.",
      "required_params": [
        "database"
      ],
      "parameters": {
        "database": {
          "description": "Required. The database in which the new sessions are created.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "BatchCreateSessionsRequest",
      "body_schema": {
        "id": "BatchCreateSessionsRequest",
        "description": "The request for BatchCreateSessions.",
        "type": "object",
        "properties": {
          "sessionTemplate": {
            "description": "Parameters to apply to each created session.",
            "$ref": "Session"
          },
          "sessionCount": {
            "description": "Required. The number of sessions to be created in this batch call. The API can return fewer than the requested number of sessions. If a specific number of sessions are desired, the client can make additional calls to `BatchCreateSessions` (adjusting session_count as necessary).",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "BatchCreateSessionsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.get",
      "resource": "projects.instances.databases.sessions",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a session. Returns `NOT_FOUND` if the session doesn't exist. This is mainly useful for determining whether a session is still alive.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the session to retrieve.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "Session"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.list",
      "resource": "projects.instances.databases.sessions",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+database}/sessions",
      "description": "Lists all sessions in a given database.",
      "required_params": [
        "database"
      ],
      "parameters": {
        "database": {
          "description": "Required. The database in which to list sessions.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Number of sessions to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListSessionsResponse.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: * `labels.key` where key is the name of a label Some examples of using filters are: * `labels.env:*` --> The session has the label \"env\". * `labels.env:dev` --> The session has the label \"env\" and the value of the label contains the string \"dev\".",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "ListSessionsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.delete",
      "resource": "projects.instances.databases.sessions",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Ends a session, releasing server resources associated with it. This asynchronously triggers the cancellation of any operations that are running with this session.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the session to delete.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.executeSql",
      "resource": "projects.instances.databases.sessions",
      "action": "executeSql",
      "http_method": "POST",
      "path_template": "v1/{+session}:executeSql",
      "description": "Executes an SQL statement, returning all results in a single reply. This method can't be used to return a result set larger than 10 MiB; if the query yields more data than that, the query fails with a `FAILED_PRECONDITION` error. Operations inside read-write transactions might return `ABORTED`. If this occurs, the application should restart the transaction from the beginning. See Transaction for more details. Larger result sets can be fetched in streaming fashion by calling ExecuteStreamingSql instead. The query string can be SQL or [Graph Query Language (GQL)](https://cloud.google.com/spanner/docs/reference/standard-sql/graph-intro).",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session in which the SQL query should be performed.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ExecuteSqlRequest",
      "body_schema": {
        "id": "ExecuteSqlRequest",
        "description": "The request for ExecuteSql and ExecuteStreamingSql.",
        "type": "object",
        "properties": {
          "transaction": {
            "description": "The transaction to use. For queries, if none is provided, the default is a temporary read-only transaction with strong concurrency. Standard DML statements require a read-write transaction. To protect against replays, single-use transactions are not supported. The caller must either supply an existing transaction ID or begin a new transaction. Partitioned DML requires an existing Partitioned DML transaction ID.",
            "$ref": "TransactionSelector"
          },
          "sql": {
            "description": "Required. The SQL string.",
            "type": "string"
          },
          "params": {
            "description": "Parameter names and values that bind to placeholders in the SQL string. A parameter placeholder consists of the `@` character followed by the parameter name (for example, `@firstName`). Parameter names must conform to the naming requirements of identifiers as specified at https://cloud.google.com/spanner/docs/lexical#identifiers. Parameters can appear anywhere that a literal value is expected. The same parameter name can be used more than once, for example: `\"WHERE id > @msg_id AND id < @msg_id + 100\"` It's an error to execute a SQL statement with unbound parameters.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "paramTypes": {
            "description": "It isn't always possible for Cloud Spanner to infer the right SQL type from a JSON value. For example, values of type `BYTES` and values of type `STRING` both appear in params as JSON strings. In these cases, you can use `param_types` to specify the exact SQL type for some or all of the SQL statement parameters. See the definition of Type for more information about SQL types.",
            "type": "object",
            "additionalProperties": {
              "$ref": "Type"
            }
          },
          "resumeToken": {
            "description": "If this request is resuming a previously interrupted SQL statement execution, `resume_token` should be copied from the last PartialResultSet yielded before the interruption. Doing this enables the new SQL statement execution to resume where the last one left off. The rest of the request parameters must exactly match the request that yielded this token.",
            "type": "string",
            "format": "byte"
          },
          "queryMode": {
            "description": "Used to control the amount of debugging information returned in ResultSetStats. If partition_token is set, query_mode can only be set to QueryMode.NORMAL.",
            "type": "string",
            "enumDescriptions": [
              "The default mode. Only the statement results are returned.",
              "This mode returns only the query plan, without any results or execution statistics information.",
              "This mode returns the query plan, overall execution statistics, operator level execution statistics along with the results. This has a performance overhead compared to the other modes. It isn't recommended to use this mode for production traffic.",
              "This mode returns the overall (but not operator-level) execution statistics along with the results.",
              "This mode returns the query plan, overall (but not operator-level) execution statistics along with the results."
            ],
            "enum": [
              "NORMAL",
              "PLAN",
              "PROFILE",
              "WITH_STATS",
              "WITH_PLAN_AND_STATS"
            ]
          },
          "partitionToken": {
            "description": "If present, results are restricted to the specified partition previously created using `PartitionQuery`. There must be an exact match for the values of fields common to this message and the `PartitionQueryRequest` message used to create this `partition_token`.",
            "type": "string",
            "format": "byte"
          },
          "seqno": {
            "description": "A per-transaction sequence number used to identify this request. This field makes each request idempotent such that if the request is received multiple times, at most one succeeds. The sequence number must be monotonically increasing within the transaction. If a request arrives for the first time with an out-of-order sequence number, the transaction can be aborted. Replays of previously handled requests yield the same response as the first execution. Required for DML statements. Ignored for queries.",
            "type": "string",
            "format": "int64"
          },
          "queryOptions": {
            "description": "Query optimizer configuration to use for the given query.",
            "$ref": "QueryOptions"
          },
          "requestOptions": {
            "description": "Common options for this request.",
            "$ref": "RequestOptions"
          },
          "directedReadOptions": {
            "description": "Directed read options for this request.",
            "$ref": "DirectedReadOptions"
          },
          "dataBoostEnabled": {
            "description": "If this is for a partitioned query and this field is set to `true`, the request is executed with Spanner Data Boost independent compute resources. If the field is set to `true` but the request doesn't set `partition_token`, the API returns an `INVALID_ARGUMENT` error.",
            "type": "boolean"
          },
          "lastStatement": {
            "description": "Optional. If set to `true`, this statement marks the end of the transaction. After this statement executes, you must commit or abort the transaction. Attempts to execute any other requests against this transaction (including reads and queries) are rejected. For DML statements, setting this option might cause some error reporting to be deferred until commit time (for example, validation of unique constraints). Given this, successful execution of a DML statement shouldn't be assumed until a subsequent `Commit` call completes successfully.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "ResultSet"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.executeStreamingSql",
      "resource": "projects.instances.databases.sessions",
      "action": "executeStreamingSql",
      "http_method": "POST",
      "path_template": "v1/{+session}:executeStreamingSql",
      "description": "Like ExecuteSql, except returns the result set as a stream. Unlike ExecuteSql, there is no limit on the size of the returned result set. However, no individual row in the result set can exceed 100 MiB, and no column value can exceed 10 MiB. The query string can be SQL or [Graph Query Language (GQL)](https://cloud.google.com/spanner/docs/reference/standard-sql/graph-intro).",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session in which the SQL query should be performed.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ExecuteSqlRequest",
      "body_schema": {
        "id": "ExecuteSqlRequest",
        "description": "The request for ExecuteSql and ExecuteStreamingSql.",
        "type": "object",
        "properties": {
          "transaction": {
            "description": "The transaction to use. For queries, if none is provided, the default is a temporary read-only transaction with strong concurrency. Standard DML statements require a read-write transaction. To protect against replays, single-use transactions are not supported. The caller must either supply an existing transaction ID or begin a new transaction. Partitioned DML requires an existing Partitioned DML transaction ID.",
            "$ref": "TransactionSelector"
          },
          "sql": {
            "description": "Required. The SQL string.",
            "type": "string"
          },
          "params": {
            "description": "Parameter names and values that bind to placeholders in the SQL string. A parameter placeholder consists of the `@` character followed by the parameter name (for example, `@firstName`). Parameter names must conform to the naming requirements of identifiers as specified at https://cloud.google.com/spanner/docs/lexical#identifiers. Parameters can appear anywhere that a literal value is expected. The same parameter name can be used more than once, for example: `\"WHERE id > @msg_id AND id < @msg_id + 100\"` It's an error to execute a SQL statement with unbound parameters.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "paramTypes": {
            "description": "It isn't always possible for Cloud Spanner to infer the right SQL type from a JSON value. For example, values of type `BYTES` and values of type `STRING` both appear in params as JSON strings. In these cases, you can use `param_types` to specify the exact SQL type for some or all of the SQL statement parameters. See the definition of Type for more information about SQL types.",
            "type": "object",
            "additionalProperties": {
              "$ref": "Type"
            }
          },
          "resumeToken": {
            "description": "If this request is resuming a previously interrupted SQL statement execution, `resume_token` should be copied from the last PartialResultSet yielded before the interruption. Doing this enables the new SQL statement execution to resume where the last one left off. The rest of the request parameters must exactly match the request that yielded this token.",
            "type": "string",
            "format": "byte"
          },
          "queryMode": {
            "description": "Used to control the amount of debugging information returned in ResultSetStats. If partition_token is set, query_mode can only be set to QueryMode.NORMAL.",
            "type": "string",
            "enumDescriptions": [
              "The default mode. Only the statement results are returned.",
              "This mode returns only the query plan, without any results or execution statistics information.",
              "This mode returns the query plan, overall execution statistics, operator level execution statistics along with the results. This has a performance overhead compared to the other modes. It isn't recommended to use this mode for production traffic.",
              "This mode returns the overall (but not operator-level) execution statistics along with the results.",
              "This mode returns the query plan, overall (but not operator-level) execution statistics along with the results."
            ],
            "enum": [
              "NORMAL",
              "PLAN",
              "PROFILE",
              "WITH_STATS",
              "WITH_PLAN_AND_STATS"
            ]
          },
          "partitionToken": {
            "description": "If present, results are restricted to the specified partition previously created using `PartitionQuery`. There must be an exact match for the values of fields common to this message and the `PartitionQueryRequest` message used to create this `partition_token`.",
            "type": "string",
            "format": "byte"
          },
          "seqno": {
            "description": "A per-transaction sequence number used to identify this request. This field makes each request idempotent such that if the request is received multiple times, at most one succeeds. The sequence number must be monotonically increasing within the transaction. If a request arrives for the first time with an out-of-order sequence number, the transaction can be aborted. Replays of previously handled requests yield the same response as the first execution. Required for DML statements. Ignored for queries.",
            "type": "string",
            "format": "int64"
          },
          "queryOptions": {
            "description": "Query optimizer configuration to use for the given query.",
            "$ref": "QueryOptions"
          },
          "requestOptions": {
            "description": "Common options for this request.",
            "$ref": "RequestOptions"
          },
          "directedReadOptions": {
            "description": "Directed read options for this request.",
            "$ref": "DirectedReadOptions"
          },
          "dataBoostEnabled": {
            "description": "If this is for a partitioned query and this field is set to `true`, the request is executed with Spanner Data Boost independent compute resources. If the field is set to `true` but the request doesn't set `partition_token`, the API returns an `INVALID_ARGUMENT` error.",
            "type": "boolean"
          },
          "lastStatement": {
            "description": "Optional. If set to `true`, this statement marks the end of the transaction. After this statement executes, you must commit or abort the transaction. Attempts to execute any other requests against this transaction (including reads and queries) are rejected. For DML statements, setting this option might cause some error reporting to be deferred until commit time (for example, validation of unique constraints). Given this, successful execution of a DML statement shouldn't be assumed until a subsequent `Commit` call completes successfully.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "PartialResultSet"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.executeBatchDml",
      "resource": "projects.instances.databases.sessions",
      "action": "executeBatchDml",
      "http_method": "POST",
      "path_template": "v1/{+session}:executeBatchDml",
      "description": "Executes a batch of SQL DML statements. This method allows many statements to be run with lower latency than submitting them sequentially with ExecuteSql. Statements are executed in sequential order. A request can succeed even if a statement fails. The ExecuteBatchDmlResponse.status field in the response provides information about the statement that failed. Clients must inspect this field to determine whether an error occurred. Execution stops after the first failed statement; the remaining statements are not executed.",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session in which the DML statements should be performed.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ExecuteBatchDmlRequest",
      "body_schema": {
        "id": "ExecuteBatchDmlRequest",
        "description": "The request for ExecuteBatchDml.",
        "type": "object",
        "properties": {
          "transaction": {
            "description": "Required. The transaction to use. Must be a read-write transaction. To protect against replays, single-use transactions are not supported. The caller must either supply an existing transaction ID or begin a new transaction.",
            "$ref": "TransactionSelector"
          },
          "statements": {
            "description": "Required. The list of statements to execute in this batch. Statements are executed serially, such that the effects of statement `i` are visible to statement `i+1`. Each statement must be a DML statement. Execution stops at the first failed statement; the remaining statements are not executed. Callers must provide at least one statement.",
            "type": "array",
            "items": {
              "$ref": "Statement"
            }
          },
          "seqno": {
            "description": "Required. A per-transaction sequence number used to identify this request. This field makes each request idempotent such that if the request is received multiple times, at most one succeeds. The sequence number must be monotonically increasing within the transaction. If a request arrives for the first time with an out-of-order sequence number, the transaction might be aborted. Replays of previously handled requests yield the same response as the first execution.",
            "type": "string",
            "format": "int64"
          },
          "requestOptions": {
            "description": "Common options for this request.",
            "$ref": "RequestOptions"
          },
          "lastStatements": {
            "description": "Optional. If set to `true`, this request marks the end of the transaction. After these statements execute, you must commit or abort the transaction. Attempts to execute any other requests against this transaction (including reads and queries) are rejected. Setting this option might cause some error reporting to be deferred until commit time (for example, validation of unique constraints). Given this, successful execution of statements shouldn't be assumed until a subsequent `Commit` call completes successfully.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "ExecuteBatchDmlResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.read",
      "resource": "projects.instances.databases.sessions",
      "action": "read",
      "http_method": "POST",
      "path_template": "v1/{+session}:read",
      "description": "Reads rows from the database using key lookups and scans, as a simple key/value style alternative to ExecuteSql. This method can't be used to return a result set larger than 10 MiB; if the read matches more data than that, the read fails with a `FAILED_PRECONDITION` error. Reads inside read-write transactions might return `ABORTED`. If this occurs, the application should restart the transaction from the beginning. See Transaction for more details. Larger result sets can be yielded in streaming fashion by calling StreamingRead instead.",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session in which the read should be performed.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ReadRequest",
      "body_schema": {
        "id": "ReadRequest",
        "description": "The request for Read and StreamingRead.",
        "type": "object",
        "properties": {
          "transaction": {
            "description": "The transaction to use. If none is provided, the default is a temporary read-only transaction with strong concurrency.",
            "$ref": "TransactionSelector"
          },
          "table": {
            "description": "Required. The name of the table in the database to be read.",
            "type": "string"
          },
          "index": {
            "description": "If non-empty, the name of an index on table. This index is used instead of the table primary key when interpreting key_set and sorting result rows. See key_set for further information.",
            "type": "string"
          },
          "columns": {
            "description": "Required. The columns of table to be returned for each row matching this request.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keySet": {
            "description": "Required. `key_set` identifies the rows to be yielded. `key_set` names the primary keys of the rows in table to be yielded, unless index is present. If index is present, then key_set instead names index keys in index. If the partition_token field is empty, rows are yielded in table primary key order (if index is empty) or index key order (if index is non-empty). If the partition_token field isn't empty, rows are yielded in an unspecified order. It isn't an error for the `key_set` to name rows that don't exist in the database. Read yields nothing for nonexistent rows.",
            "$ref": "KeySet"
          },
          "limit": {
            "description": "If greater than zero, only the first `limit` rows are yielded. If `limit` is zero, the default is no limit. A limit can't be specified if `partition_token` is set.",
            "type": "string",
            "format": "int64"
          },
          "resumeToken": {
            "description": "If this request is resuming a previously interrupted read, `resume_token` should be copied from the last PartialResultSet yielded before the interruption. Doing this enables the new read to resume where the last read left off. The rest of the request parameters must exactly match the request that yielded this token.",
            "type": "string",
            "format": "byte"
          },
          "partitionToken": {
            "description": "If present, results are restricted to the specified partition previously created using `PartitionRead`. There must be an exact match for the values of fields common to this message and the PartitionReadRequest message used to create this partition_token.",
            "type": "string",
            "format": "byte"
          },
          "requestOptions": {
            "description": "Common options for this request.",
            "$ref": "RequestOptions"
          },
          "directedReadOptions": {
            "description": "Directed read options for this request.",
            "$ref": "DirectedReadOptions"
          },
          "dataBoostEnabled": {
            "description": "If this is for a partitioned read and this field is set to `true`, the request is executed with Spanner Data Boost independent compute resources. If the field is set to `true` but the request doesn't set `partition_token`, the API returns an `INVALID_ARGUMENT` error.",
            "type": "boolean"
          },
          "orderBy": {
            "description": "Optional. Order for the returned rows. By default, Spanner returns result rows in primary key order except for PartitionRead requests. For applications that don't require rows to be returned in primary key (`ORDER_BY_PRIMARY_KEY`) order, setting `ORDER_BY_NO_ORDER` option allows Spanner to optimize row retrieval, resulting in lower latencies in certain cases (for example, bulk point lookups).",
            "type": "string",
            "enumDescriptions": [
              "Default value. `ORDER_BY_UNSPECIFIED` is equivalent to `ORDER_BY_PRIMARY_KEY`.",
              "Read rows are returned in primary key order. In the event that this option is used in conjunction with the `partition_token` field, the API returns an `INVALID_ARGUMENT` error.",
              "Read rows are returned in any order."
            ],
            "enum": [
              "ORDER_BY_UNSPECIFIED",
              "ORDER_BY_PRIMARY_KEY",
              "ORDER_BY_NO_ORDER"
            ]
          },
          "lockHint": {
            "description": "Optional. Lock Hint for the request, it can only be used with read-write transactions.",
            "type": "string",
            "enumDescriptions": [
              "Default value. `LOCK_HINT_UNSPECIFIED` is equivalent to `LOCK_HINT_SHARED`.",
              "Acquire shared locks. By default when you perform a read as part of a read-write transaction, Spanner acquires shared read locks, which allows other reads to still access the data until your transaction is ready to commit. When your transaction is committing and writes are being applied, the transaction attempts to upgrade to an exclusive lock for any data you are writing. For more information about locks, see [Lock modes](https://cloud.google.com/spanner/docs/introspection/lock-statistics#explain-lock-modes).",
              "Acquire exclusive locks. Requesting exclusive locks is beneficial if you observe high write contention, which means you notice that multiple transactions are concurrently trying to read and write to the same data, resulting in a large number of aborts. This problem occurs when two transactions initially acquire shared locks and then both try to upgrade to exclusive locks at the same time. In this situation both transactions are waiting for the other to give up their lock, resulting in a deadlocked situation. Spanner is able to detect this occurring and force one of the transactions to abort. However, this is a slow and expensive operation and results in lower performance. In this case it makes sense to acquire exclusive locks at the start of the transaction because then when multiple transactions try to act on the same data, they automatically get serialized. Each transaction waits its turn to acquire the lock and avoids getting into deadlock situations. Because the exclusive lock hint is just a hint, it shouldn't be considered equivalent to a mutex. In other words, you shouldn't use Spanner exclusive locks as a mutual exclusion mechanism for the execution of code outside of Spanner. **Note:** Request exclusive locks judiciously because they block others from reading that data for the entire transaction, rather than just when the writes are being performed. Unless you observe high write contention, you should use the default of shared read locks so you don't prematurely block other clients from reading the data that you're writing to."
            ],
            "enum": [
              "LOCK_HINT_UNSPECIFIED",
              "LOCK_HINT_SHARED",
              "LOCK_HINT_EXCLUSIVE"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "ResultSet"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.streamingRead",
      "resource": "projects.instances.databases.sessions",
      "action": "streamingRead",
      "http_method": "POST",
      "path_template": "v1/{+session}:streamingRead",
      "description": "Like Read, except returns the result set as a stream. Unlike Read, there is no limit on the size of the returned result set. However, no individual row in the result set can exceed 100 MiB, and no column value can exceed 10 MiB.",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session in which the read should be performed.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ReadRequest",
      "body_schema": {
        "id": "ReadRequest",
        "description": "The request for Read and StreamingRead.",
        "type": "object",
        "properties": {
          "transaction": {
            "description": "The transaction to use. If none is provided, the default is a temporary read-only transaction with strong concurrency.",
            "$ref": "TransactionSelector"
          },
          "table": {
            "description": "Required. The name of the table in the database to be read.",
            "type": "string"
          },
          "index": {
            "description": "If non-empty, the name of an index on table. This index is used instead of the table primary key when interpreting key_set and sorting result rows. See key_set for further information.",
            "type": "string"
          },
          "columns": {
            "description": "Required. The columns of table to be returned for each row matching this request.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keySet": {
            "description": "Required. `key_set` identifies the rows to be yielded. `key_set` names the primary keys of the rows in table to be yielded, unless index is present. If index is present, then key_set instead names index keys in index. If the partition_token field is empty, rows are yielded in table primary key order (if index is empty) or index key order (if index is non-empty). If the partition_token field isn't empty, rows are yielded in an unspecified order. It isn't an error for the `key_set` to name rows that don't exist in the database. Read yields nothing for nonexistent rows.",
            "$ref": "KeySet"
          },
          "limit": {
            "description": "If greater than zero, only the first `limit` rows are yielded. If `limit` is zero, the default is no limit. A limit can't be specified if `partition_token` is set.",
            "type": "string",
            "format": "int64"
          },
          "resumeToken": {
            "description": "If this request is resuming a previously interrupted read, `resume_token` should be copied from the last PartialResultSet yielded before the interruption. Doing this enables the new read to resume where the last read left off. The rest of the request parameters must exactly match the request that yielded this token.",
            "type": "string",
            "format": "byte"
          },
          "partitionToken": {
            "description": "If present, results are restricted to the specified partition previously created using `PartitionRead`. There must be an exact match for the values of fields common to this message and the PartitionReadRequest message used to create this partition_token.",
            "type": "string",
            "format": "byte"
          },
          "requestOptions": {
            "description": "Common options for this request.",
            "$ref": "RequestOptions"
          },
          "directedReadOptions": {
            "description": "Directed read options for this request.",
            "$ref": "DirectedReadOptions"
          },
          "dataBoostEnabled": {
            "description": "If this is for a partitioned read and this field is set to `true`, the request is executed with Spanner Data Boost independent compute resources. If the field is set to `true` but the request doesn't set `partition_token`, the API returns an `INVALID_ARGUMENT` error.",
            "type": "boolean"
          },
          "orderBy": {
            "description": "Optional. Order for the returned rows. By default, Spanner returns result rows in primary key order except for PartitionRead requests. For applications that don't require rows to be returned in primary key (`ORDER_BY_PRIMARY_KEY`) order, setting `ORDER_BY_NO_ORDER` option allows Spanner to optimize row retrieval, resulting in lower latencies in certain cases (for example, bulk point lookups).",
            "type": "string",
            "enumDescriptions": [
              "Default value. `ORDER_BY_UNSPECIFIED` is equivalent to `ORDER_BY_PRIMARY_KEY`.",
              "Read rows are returned in primary key order. In the event that this option is used in conjunction with the `partition_token` field, the API returns an `INVALID_ARGUMENT` error.",
              "Read rows are returned in any order."
            ],
            "enum": [
              "ORDER_BY_UNSPECIFIED",
              "ORDER_BY_PRIMARY_KEY",
              "ORDER_BY_NO_ORDER"
            ]
          },
          "lockHint": {
            "description": "Optional. Lock Hint for the request, it can only be used with read-write transactions.",
            "type": "string",
            "enumDescriptions": [
              "Default value. `LOCK_HINT_UNSPECIFIED` is equivalent to `LOCK_HINT_SHARED`.",
              "Acquire shared locks. By default when you perform a read as part of a read-write transaction, Spanner acquires shared read locks, which allows other reads to still access the data until your transaction is ready to commit. When your transaction is committing and writes are being applied, the transaction attempts to upgrade to an exclusive lock for any data you are writing. For more information about locks, see [Lock modes](https://cloud.google.com/spanner/docs/introspection/lock-statistics#explain-lock-modes).",
              "Acquire exclusive locks. Requesting exclusive locks is beneficial if you observe high write contention, which means you notice that multiple transactions are concurrently trying to read and write to the same data, resulting in a large number of aborts. This problem occurs when two transactions initially acquire shared locks and then both try to upgrade to exclusive locks at the same time. In this situation both transactions are waiting for the other to give up their lock, resulting in a deadlocked situation. Spanner is able to detect this occurring and force one of the transactions to abort. However, this is a slow and expensive operation and results in lower performance. In this case it makes sense to acquire exclusive locks at the start of the transaction because then when multiple transactions try to act on the same data, they automatically get serialized. Each transaction waits its turn to acquire the lock and avoids getting into deadlock situations. Because the exclusive lock hint is just a hint, it shouldn't be considered equivalent to a mutex. In other words, you shouldn't use Spanner exclusive locks as a mutual exclusion mechanism for the execution of code outside of Spanner. **Note:** Request exclusive locks judiciously because they block others from reading that data for the entire transaction, rather than just when the writes are being performed. Unless you observe high write contention, you should use the default of shared read locks so you don't prematurely block other clients from reading the data that you're writing to."
            ],
            "enum": [
              "LOCK_HINT_UNSPECIFIED",
              "LOCK_HINT_SHARED",
              "LOCK_HINT_EXCLUSIVE"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "PartialResultSet"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.beginTransaction",
      "resource": "projects.instances.databases.sessions",
      "action": "beginTransaction",
      "http_method": "POST",
      "path_template": "v1/{+session}:beginTransaction",
      "description": "Begins a new transaction. This step can often be skipped: Read, ExecuteSql and Commit can begin a new transaction as a side-effect.",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session in which the transaction runs.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "BeginTransactionRequest",
      "body_schema": {
        "id": "BeginTransactionRequest",
        "description": "The request for BeginTransaction.",
        "type": "object",
        "properties": {
          "options": {
            "description": "Required. Options for the new transaction.",
            "$ref": "TransactionOptions"
          },
          "requestOptions": {
            "description": "Common options for this request. Priority is ignored for this request. Setting the priority in this `request_options` struct doesn't do anything. To set the priority for a transaction, set it on the reads and writes that are part of this transaction instead.",
            "$ref": "RequestOptions"
          },
          "mutationKey": {
            "description": "Optional. Required for read-write transactions on a multiplexed session that commit mutations but don't perform any reads or queries. You must randomly select one of the mutations from the mutation set and send it as a part of this request.",
            "$ref": "Mutation"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "Transaction"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.commit",
      "resource": "projects.instances.databases.sessions",
      "action": "commit",
      "http_method": "POST",
      "path_template": "v1/{+session}:commit",
      "description": "Commits a transaction. The request includes the mutations to be applied to rows in the database. `Commit` might return an `ABORTED` error. This can occur at any time; commonly, the cause is conflicts with concurrent transactions. However, it can also happen for a variety of other reasons. If `Commit` returns `ABORTED`, the caller should retry the transaction from the beginning, reusing the same session. On very rare occasions, `Commit` might return `UNKNOWN`. This can happen, for example, if the client job experiences a 1+ hour networking failure. At that point, Cloud Spanner has lost track of the transaction outcome and we recommend that you perform another read from the database to see the state of things as they are now.",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session in which the transaction to be committed is running.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CommitRequest",
      "body_schema": {
        "id": "CommitRequest",
        "description": "The request for Commit.",
        "type": "object",
        "properties": {
          "transactionId": {
            "description": "Commit a previously-started transaction.",
            "type": "string",
            "format": "byte"
          },
          "singleUseTransaction": {
            "description": "Execute mutations in a temporary transaction. Note that unlike commit of a previously-started transaction, commit with a temporary transaction is non-idempotent. That is, if the `CommitRequest` is sent to Cloud Spanner more than once (for instance, due to retries in the application, or in the transport library), it's possible that the mutations are executed more than once. If this is undesirable, use BeginTransaction and Commit instead.",
            "$ref": "TransactionOptions"
          },
          "mutations": {
            "description": "The mutations to be executed when this transaction commits. All mutations are applied atomically, in the order they appear in this list.",
            "type": "array",
            "items": {
              "$ref": "Mutation"
            }
          },
          "returnCommitStats": {
            "description": "If `true`, then statistics related to the transaction is included in the CommitResponse. Default value is `false`.",
            "type": "boolean"
          },
          "maxCommitDelay": {
            "description": "Optional. The amount of latency this request is configured to incur in order to improve throughput. If this field isn't set, Spanner assumes requests are relatively latency sensitive and automatically determines an appropriate delay time. You can specify a commit delay value between 0 and 500 ms.",
            "type": "string",
            "format": "google-duration"
          },
          "requestOptions": {
            "description": "Common options for this request.",
            "$ref": "RequestOptions"
          },
          "precommitToken": {
            "description": "Optional. If the read-write transaction was executed on a multiplexed session, then you must include the precommit token with the highest sequence number received in this transaction attempt. Failing to do so results in a `FailedPrecondition` error.",
            "$ref": "MultiplexedSessionPrecommitToken"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "CommitResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.rollback",
      "resource": "projects.instances.databases.sessions",
      "action": "rollback",
      "http_method": "POST",
      "path_template": "v1/{+session}:rollback",
      "description": "Rolls back a transaction, releasing any locks it holds. It's a good idea to call this for any transaction that includes one or more Read or ExecuteSql requests and ultimately decides not to commit. `Rollback` returns `OK` if it successfully aborts the transaction, the transaction was already aborted, or the transaction isn't found. `Rollback` never returns `ABORTED`.",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session in which the transaction to roll back is running.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RollbackRequest",
      "body_schema": {
        "id": "RollbackRequest",
        "description": "The request for Rollback.",
        "type": "object",
        "properties": {
          "transactionId": {
            "description": "Required. The transaction to roll back.",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.partitionQuery",
      "resource": "projects.instances.databases.sessions",
      "action": "partitionQuery",
      "http_method": "POST",
      "path_template": "v1/{+session}:partitionQuery",
      "description": "Creates a set of partition tokens that can be used to execute a query operation in parallel. Each of the returned partition tokens can be used by ExecuteStreamingSql to specify a subset of the query result to read. The same session and read-only transaction must be used by the `PartitionQueryRequest` used to create the partition tokens and the `ExecuteSqlRequests` that use the partition tokens. Partition tokens become invalid when the session used to create them is deleted, is idle for too long, begins a new transaction, or becomes too old. When any of these happen, it isn't possible to resume the query, and the whole operation must be restarted from the beginning.",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session used to create the partitions.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "PartitionQueryRequest",
      "body_schema": {
        "id": "PartitionQueryRequest",
        "description": "The request for PartitionQuery",
        "type": "object",
        "properties": {
          "transaction": {
            "description": "Read-only snapshot transactions are supported, read and write and single-use transactions are not.",
            "$ref": "TransactionSelector"
          },
          "sql": {
            "description": "Required. The query request to generate partitions for. The request fails if the query isn't root partitionable. For a query to be root partitionable, it needs to satisfy a few conditions. For example, if the query execution plan contains a distributed union operator, then it must be the first operator in the plan. For more information about other conditions, see [Read data in parallel](https://cloud.google.com/spanner/docs/reads#read_data_in_parallel). The query request must not contain DML commands, such as `INSERT`, `UPDATE`, or `DELETE`. Use `ExecuteStreamingSql` with a `PartitionedDml` transaction for large, partition-friendly DML operations.",
            "type": "string"
          },
          "params": {
            "description": "Parameter names and values that bind to placeholders in the SQL string. A parameter placeholder consists of the `@` character followed by the parameter name (for example, `@firstName`). Parameter names can contain letters, numbers, and underscores. Parameters can appear anywhere that a literal value is expected. The same parameter name can be used more than once, for example: `\"WHERE id > @msg_id AND id < @msg_id + 100\"` It's an error to execute a SQL statement with unbound parameters.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "paramTypes": {
            "description": "It isn't always possible for Cloud Spanner to infer the right SQL type from a JSON value. For example, values of type `BYTES` and values of type `STRING` both appear in params as JSON strings. In these cases, `param_types` can be used to specify the exact SQL type for some or all of the SQL query parameters. See the definition of Type for more information about SQL types.",
            "type": "object",
            "additionalProperties": {
              "$ref": "Type"
            }
          },
          "partitionOptions": {
            "description": "Additional options that affect how many partitions are created.",
            "$ref": "PartitionOptions"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "PartitionResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.partitionRead",
      "resource": "projects.instances.databases.sessions",
      "action": "partitionRead",
      "http_method": "POST",
      "path_template": "v1/{+session}:partitionRead",
      "description": "Creates a set of partition tokens that can be used to execute a read operation in parallel. Each of the returned partition tokens can be used by StreamingRead to specify a subset of the read result to read. The same session and read-only transaction must be used by the `PartitionReadRequest` used to create the partition tokens and the `ReadRequests` that use the partition tokens. There are no ordering guarantees on rows returned among the returned partition tokens, or even within each individual `StreamingRead` call issued with a `partition_token`. Partition tokens become invalid when the session used to create them is deleted, is idle for too long, begins a new transaction, or becomes too old. When any of these happen, it isn't possible to resume the read, and the whole operation must be restarted from the beginning.",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session used to create the partitions.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "PartitionReadRequest",
      "body_schema": {
        "id": "PartitionReadRequest",
        "description": "The request for PartitionRead",
        "type": "object",
        "properties": {
          "transaction": {
            "description": "Read only snapshot transactions are supported, read/write and single use transactions are not.",
            "$ref": "TransactionSelector"
          },
          "table": {
            "description": "Required. The name of the table in the database to be read.",
            "type": "string"
          },
          "index": {
            "description": "If non-empty, the name of an index on table. This index is used instead of the table primary key when interpreting key_set and sorting result rows. See key_set for further information.",
            "type": "string"
          },
          "columns": {
            "description": "The columns of table to be returned for each row matching this request.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keySet": {
            "description": "Required. `key_set` identifies the rows to be yielded. `key_set` names the primary keys of the rows in table to be yielded, unless index is present. If index is present, then key_set instead names index keys in index. It isn't an error for the `key_set` to name rows that don't exist in the database. Read yields nothing for nonexistent rows.",
            "$ref": "KeySet"
          },
          "partitionOptions": {
            "description": "Additional options that affect how many partitions are created.",
            "$ref": "PartitionOptions"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "PartitionResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.sessions.batchWrite",
      "resource": "projects.instances.databases.sessions",
      "action": "batchWrite",
      "http_method": "POST",
      "path_template": "v1/{+session}:batchWrite",
      "description": "Batches the supplied mutation groups in a collection of efficient transactions. All mutations in a group are committed atomically. However, mutations across groups can be committed non-atomically in an unspecified order and thus, they must be independent of each other. Partial failure is possible, that is, some groups might have been committed successfully, while some might have failed. The results of individual batches are streamed into the response as the batches are applied. `BatchWrite` requests are not replay protected, meaning that each mutation group can be applied more than once. Replays of non-idempotent mutations can have undesirable effects. For example, replays of an insert mutation can produce an already exists error or if you use generated or commit timestamp-based keys, it can result in additional rows being added to the mutation's table. We recommend structuring your mutation groups to be idempotent to avoid this issue.",
      "required_params": [
        "session"
      ],
      "parameters": {
        "session": {
          "description": "Required. The session in which the batch request is to be run.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/sessions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "BatchWriteRequest",
      "body_schema": {
        "id": "BatchWriteRequest",
        "description": "The request for BatchWrite.",
        "type": "object",
        "properties": {
          "requestOptions": {
            "description": "Common options for this request.",
            "$ref": "RequestOptions"
          },
          "mutationGroups": {
            "description": "Required. The groups of mutations to be applied.",
            "type": "array",
            "items": {
              "$ref": "MutationGroup"
            }
          },
          "excludeTxnFromChangeStreams": {
            "description": "Optional. When `exclude_txn_from_change_streams` is set to `true`: * Modifications from all transactions in this batch write operation are not be recorded in change streams with DDL option `allow_txn_exclusion=true` that are tracking columns modified by these transactions. * Modifications from all transactions in this batch write operation are recorded in change streams with DDL option `allow_txn_exclusion=false or not set` that are tracking columns modified by these transactions. When `exclude_txn_from_change_streams` is set to `false` or not set, Modifications from all transactions in this batch write operation are recorded in all change streams that are tracking columns modified by these transactions.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.data"
      ],
      "response_type": "BatchWriteResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.backupSchedules.setIamPolicy",
      "resource": "projects.instances.databases.backupSchedules",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on a database or backup resource. Replaces any existing policy. Authorization requires `spanner.databases.setIamPolicy` permission on resource. For backups, authorization requires `spanner.backups.setIamPolicy` permission on resource. For backup schedules, authorization requires `spanner.backupSchedules.setIamPolicy` permission on resource.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which the policy is being set. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for databases resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/backupSchedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "spanner.projects.instances.databases.backupSchedules.getIamPolicy",
      "resource": "projects.instances.databases.backupSchedules",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a database or backup resource. Returns an empty policy if a database or backup exists but does not have a policy set. Authorization requires `spanner.databases.getIamPolicy` permission on resource. For backups, authorization requires `spanner.backups.getIamPolicy` permission on resource. For backup schedules, authorization requires `spanner.backupSchedules.getIamPolicy` permission on resource.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which the policy is being retrieved. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for database resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/backupSchedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GetIamPolicyRequest",
      "body_schema": {
        "id": "GetIamPolicyRequest",
        "description": "Request message for `GetIamPolicy` method.",
        "type": "object",
        "properties": {
          "options": {
            "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
            "$ref": "GetPolicyOptions"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "spanner.projects.instances.databases.backupSchedules.testIamPermissions",
      "resource": "projects.instances.databases.backupSchedules",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that the caller has on the specified database or backup resource. Attempting this RPC on a non-existent Cloud Spanner database will result in a NOT_FOUND error if the user has `spanner.databases.list` permission on the containing Cloud Spanner instance. Otherwise returns an empty set of permissions. Calling this method on a backup that does not exist will result in a NOT_FOUND error if the user has `spanner.backups.list` permission on the containing instance. Calling this method on a backup schedule that does not exist will result in a NOT_FOUND error if the user has `spanner.backupSchedules.list` permission on the containing database.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which permissions are being tested. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for database resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/backupSchedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "REQUIRED: The set of permissions to check for 'resource'. Permissions with wildcards (such as '*', 'spanner.*', 'spanner.instances.*') are not allowed.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.backupSchedules.create",
      "resource": "projects.instances.databases.backupSchedules",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/backupSchedules",
      "description": "Creates a new backup schedule.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the database that this backup schedule applies to.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "backupScheduleId": {
          "description": "Required. The Id to use for the backup schedule. The `backup_schedule_id` appended to `parent` forms the full backup schedule name of the form `projects//instances//databases//backupSchedules/`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "BackupSchedule",
      "body_schema": {
        "id": "BackupSchedule",
        "description": "BackupSchedule expresses the automated backup creation specification for a Spanner database.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. Output only for the CreateBackupSchedule operation. Required for the UpdateBackupSchedule operation. A globally unique identifier for the backup schedule which cannot be changed. Values are of the form `projects//instances//databases//backupSchedules/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length.",
            "type": "string"
          },
          "spec": {
            "description": "Optional. The schedule specification based on which the backup creations are triggered.",
            "$ref": "BackupScheduleSpec"
          },
          "retentionDuration": {
            "description": "Optional. The retention duration of a backup that must be at least 6 hours and at most 366 days. The backup is eligible to be automatically deleted once the retention period has elapsed.",
            "type": "string",
            "format": "google-duration"
          },
          "encryptionConfig": {
            "description": "Optional. The encryption configuration that is used to encrypt the backup. If this field is not specified, the backup uses the same encryption configuration as the database.",
            "$ref": "CreateBackupEncryptionConfig"
          },
          "fullBackupSpec": {
            "description": "The schedule creates only full backups.",
            "$ref": "FullBackupSpec"
          },
          "incrementalBackupSpec": {
            "description": "The schedule creates incremental backup chains.",
            "$ref": "IncrementalBackupSpec"
          },
          "updateTime": {
            "description": "Output only. The timestamp at which the schedule was last updated. If the schedule has never been updated, this field contains the timestamp when the schedule was first created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "BackupSchedule"
    },
    {
      "operation_id": "spanner.projects.instances.databases.backupSchedules.get",
      "resource": "projects.instances.databases.backupSchedules",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets backup schedule for the input schedule name.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the schedule to retrieve. Values are of the form `projects//instances//databases//backupSchedules/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/backupSchedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "BackupSchedule"
    },
    {
      "operation_id": "spanner.projects.instances.databases.backupSchedules.patch",
      "resource": "projects.instances.databases.backupSchedules",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a backup schedule.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. Output only for the CreateBackupSchedule operation. Required for the UpdateBackupSchedule operation. A globally unique identifier for the backup schedule which cannot be changed. Values are of the form `projects//instances//databases//backupSchedules/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/backupSchedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. A mask specifying which fields in the BackupSchedule resource should be updated. This mask is relative to the BackupSchedule resource, not to the request message. The field mask must always be specified; this prevents any future fields from being erased accidentally.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "BackupSchedule",
      "body_schema": {
        "id": "BackupSchedule",
        "description": "BackupSchedule expresses the automated backup creation specification for a Spanner database.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. Output only for the CreateBackupSchedule operation. Required for the UpdateBackupSchedule operation. A globally unique identifier for the backup schedule which cannot be changed. Values are of the form `projects//instances//databases//backupSchedules/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length.",
            "type": "string"
          },
          "spec": {
            "description": "Optional. The schedule specification based on which the backup creations are triggered.",
            "$ref": "BackupScheduleSpec"
          },
          "retentionDuration": {
            "description": "Optional. The retention duration of a backup that must be at least 6 hours and at most 366 days. The backup is eligible to be automatically deleted once the retention period has elapsed.",
            "type": "string",
            "format": "google-duration"
          },
          "encryptionConfig": {
            "description": "Optional. The encryption configuration that is used to encrypt the backup. If this field is not specified, the backup uses the same encryption configuration as the database.",
            "$ref": "CreateBackupEncryptionConfig"
          },
          "fullBackupSpec": {
            "description": "The schedule creates only full backups.",
            "$ref": "FullBackupSpec"
          },
          "incrementalBackupSpec": {
            "description": "The schedule creates incremental backup chains.",
            "$ref": "IncrementalBackupSpec"
          },
          "updateTime": {
            "description": "Output only. The timestamp at which the schedule was last updated. If the schedule has never been updated, this field contains the timestamp when the schedule was first created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "BackupSchedule"
    },
    {
      "operation_id": "spanner.projects.instances.databases.backupSchedules.delete",
      "resource": "projects.instances.databases.backupSchedules",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a backup schedule.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the schedule to delete. Values are of the form `projects//instances//databases//backupSchedules/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/backupSchedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.databases.backupSchedules.list",
      "resource": "projects.instances.databases.backupSchedules",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/backupSchedules",
      "description": "Lists all the backup schedules for the database.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. Database is the parent resource whose backup schedules should be listed. Values are of the form projects//instances//databases/",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. Number of backup schedules to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. If non-empty, `page_token` should contain a next_page_token from a previous ListBackupSchedulesResponse to the same `parent`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListBackupSchedulesResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.databaseRoles.testIamPermissions",
      "resource": "projects.instances.databases.databaseRoles",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that the caller has on the specified database or backup resource. Attempting this RPC on a non-existent Cloud Spanner database will result in a NOT_FOUND error if the user has `spanner.databases.list` permission on the containing Cloud Spanner instance. Otherwise returns an empty set of permissions. Calling this method on a backup that does not exist will result in a NOT_FOUND error if the user has `spanner.backups.list` permission on the containing instance. Calling this method on a backup schedule that does not exist will result in a NOT_FOUND error if the user has `spanner.backupSchedules.list` permission on the containing database.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which permissions are being tested. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for database resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+/databaseRoles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "REQUIRED: The set of permissions to check for 'resource'. Permissions with wildcards (such as '*', 'spanner.*', 'spanner.instances.*') are not allowed.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.databases.databaseRoles.list",
      "resource": "projects.instances.databases.databaseRoles",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/databaseRoles",
      "description": "Lists Cloud Spanner database roles.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The database whose roles should be listed. Values are of the form `projects//instances//databases/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+/databases/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Number of database roles to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListDatabaseRolesResponse.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListDatabaseRolesResponse"
    },
    {
      "operation_id": "spanner.projects.instances.operations.list",
      "resource": "projects.instances.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/instances/[^/]+/operations$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListOperationsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.operations.get",
      "resource": "projects.instances.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/instances/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.operations.delete",
      "resource": "projects.instances.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/instances/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.operations.cancel",
      "resource": "projects.instances.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/instances/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.backups.setIamPolicy",
      "resource": "projects.instances.backups",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on a database or backup resource. Replaces any existing policy. Authorization requires `spanner.databases.setIamPolicy` permission on resource. For backups, authorization requires `spanner.backups.setIamPolicy` permission on resource. For backup schedules, authorization requires `spanner.backupSchedules.setIamPolicy` permission on resource.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which the policy is being set. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for databases resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+/backups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "SetIamPolicyRequest",
      "body_schema": {
        "id": "SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "spanner.projects.instances.backups.getIamPolicy",
      "resource": "projects.instances.backups",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a database or backup resource. Returns an empty policy if a database or backup exists but does not have a policy set. Authorization requires `spanner.databases.getIamPolicy` permission on resource. For backups, authorization requires `spanner.backups.getIamPolicy` permission on resource. For backup schedules, authorization requires `spanner.backupSchedules.getIamPolicy` permission on resource.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which the policy is being retrieved. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for database resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+/backups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GetIamPolicyRequest",
      "body_schema": {
        "id": "GetIamPolicyRequest",
        "description": "Request message for `GetIamPolicy` method.",
        "type": "object",
        "properties": {
          "options": {
            "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
            "$ref": "GetPolicyOptions"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Policy"
    },
    {
      "operation_id": "spanner.projects.instances.backups.testIamPermissions",
      "resource": "projects.instances.backups",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that the caller has on the specified database or backup resource. Attempting this RPC on a non-existent Cloud Spanner database will result in a NOT_FOUND error if the user has `spanner.databases.list` permission on the containing Cloud Spanner instance. Otherwise returns an empty set of permissions. Calling this method on a backup that does not exist will result in a NOT_FOUND error if the user has `spanner.backups.list` permission on the containing instance. Calling this method on a backup schedule that does not exist will result in a NOT_FOUND error if the user has `spanner.backupSchedules.list` permission on the containing database.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The Cloud Spanner resource for which permissions are being tested. The format is `projects//instances/` for instance resources and `projects//instances//databases/` for database resources.",
          "pattern": "^projects/[^/]+/instances/[^/]+/backups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "TestIamPermissionsRequest",
      "body_schema": {
        "id": "TestIamPermissionsRequest",
        "description": "Request message for `TestIamPermissions` method.",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "REQUIRED: The set of permissions to check for 'resource'. Permissions with wildcards (such as '*', 'spanner.*', 'spanner.instances.*') are not allowed.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "TestIamPermissionsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.backups.create",
      "resource": "projects.instances.backups",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/backups",
      "description": "Starts creating a new Cloud Spanner Backup. The returned backup long-running operation will have a name of the format `projects//instances//backups//operations/` and can be used to track creation of the backup. The metadata field type is CreateBackupMetadata. The response field type is Backup, if successful. Cancelling the returned operation will stop the creation and delete the backup. There can be only one pending backup creation per database. Backup creation of different databases can run concurrently.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the instance in which the backup will be created. This must be the same instance that contains the database the backup will be created from. The backup will be stored in the location(s) specified in the instance configuration of this instance. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "backupId": {
          "description": "Required. The id of the backup to be created. The `backup_id` appended to `parent` forms the full backup name of the form `projects//instances//backups/`.",
          "location": "query",
          "type": "string"
        },
        "encryptionConfig.encryptionType": {
          "description": "Required. The encryption type of the backup.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "Unspecified. Do not use.",
            "Use the same encryption configuration as the database. This is the default option when encryption_config is empty. For example, if the database is using `Customer_Managed_Encryption`, the backup will be using the same Cloud KMS key as the database.",
            "Use Google default encryption.",
            "Use customer managed encryption. If specified, `kms_key_name` must contain a valid Cloud KMS key."
          ],
          "enum": [
            "ENCRYPTION_TYPE_UNSPECIFIED",
            "USE_DATABASE_ENCRYPTION",
            "GOOGLE_DEFAULT_ENCRYPTION",
            "CUSTOMER_MANAGED_ENCRYPTION"
          ]
        },
        "encryptionConfig.kmsKeyName": {
          "description": "Optional. The Cloud KMS key that will be used to protect the backup. This field should be set only when encryption_type is `CUSTOMER_MANAGED_ENCRYPTION`. Values are of the form `projects//locations//keyRings//cryptoKeys/`.",
          "location": "query",
          "type": "string"
        },
        "encryptionConfig.kmsKeyNames": {
          "description": "Optional. Specifies the KMS configuration for the one or more keys used to protect the backup. Values are of the form `projects//locations//keyRings//cryptoKeys/`. The keys referenced by `kms_key_names` must fully cover all regions of the backup's instance configuration. Some examples: * For regional (single-region) instance configurations, specify a regional location KMS key. * For multi-region instance configurations of type `GOOGLE_MANAGED`, either specify a multi-region location KMS key or multiple regional location KMS keys that cover all regions in the instance configuration. * For an instance configuration of type `USER_MANAGED`, specify only regional location KMS keys to cover each region in the instance configuration. Multi-region location KMS keys aren't supported for `USER_MANAGED` type instance configurations.",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": "Backup",
      "body_schema": {
        "id": "Backup",
        "description": "A backup of a Cloud Spanner database.",
        "type": "object",
        "properties": {
          "database": {
            "description": "Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.",
            "type": "string"
          },
          "versionTime": {
            "description": "The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.",
            "type": "string",
            "format": "google-datetime"
          },
          "expireTime": {
            "description": "Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
            "type": "string",
            "format": "google-datetime"
          },
          "name": {
            "description": "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "sizeBytes": {
            "description": "Output only. Size of the backup in bytes. For a backup in an incremental backup chain, this is the sum of the `exclusive_size_bytes` of itself and all older backups in the chain.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "freeableSizeBytes": {
            "description": "Output only. The number of bytes that will be freed by deleting this backup. This value will be zero if, for example, this backup is part of an incremental backup chain and younger backups in the chain require that we keep its data. For backups not in an incremental backup chain, this is always the size of the backup. This value may change if backups on the same chain get created, deleted or expired.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "exclusiveSizeBytes": {
            "description": "Output only. For a backup in an incremental backup chain, this is the storage space needed to keep the data that has changed since the previous backup. For all other backups, this is always the size of the backup. This value may change if backups on the same chain get deleted or expired. This field can be used to calculate the total storage space used by a set of backups. For example, the total space used by all backups of a database can be computed by summing up this field.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "state": {
            "description": "Output only. The current state of the backup.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Not specified.",
              "The pending backup is still being created. Operations on the backup may fail with `FAILED_PRECONDITION` in this state.",
              "The backup is complete and ready for use."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "READY"
            ]
          },
          "referencingDatabases": {
            "description": "Output only. The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "encryptionInfo": {
            "description": "Output only. The encryption information for the backup.",
            "readOnly": true,
            "$ref": "EncryptionInfo"
          },
          "encryptionInformation": {
            "description": "Output only. The encryption information for the backup, whether it is protected by one or more KMS keys. The information includes all Cloud KMS key versions used to encrypt the backup. The `encryption_status` field inside of each `EncryptionInfo` is not populated. At least one of the key versions must be available for the backup to be restored. If a key version is revoked in the middle of a restore, the restore behavior is undefined.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "EncryptionInfo"
            }
          },
          "databaseDialect": {
            "description": "Output only. The database dialect information for the backup.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Default value. This value will create a database with the GOOGLE_STANDARD_SQL dialect.",
              "GoogleSQL supported SQL.",
              "PostgreSQL supported SQL."
            ],
            "enum": [
              "DATABASE_DIALECT_UNSPECIFIED",
              "GOOGLE_STANDARD_SQL",
              "POSTGRESQL"
            ]
          },
          "referencingBackups": {
            "description": "Output only. The names of the destination backups being created by copying this source backup. The backup names are of the form `projects//instances//backups/`. Referencing backups may exist in different instances. The existence of any referencing backup prevents the backup from being deleted. When the copy operation is done (either successfully completed or cancelled or the destination backup is deleted), the reference to the backup is removed.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxExpireTime": {
            "description": "Output only. The max allowed expiration time of the backup, with microseconds granularity. A backup's expiration time can be configured in multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or copying an existing backup, the expiration time specified must be less than `Backup.max_expire_time`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "backupSchedules": {
            "description": "Output only. List of backup schedule URIs that are associated with creating this backup. This is only applicable for scheduled backups, and is empty for on-demand backups. To optimize for storage, whenever possible, multiple schedules are collapsed together to create one backup. In such cases, this field captures the list of all backup schedule URIs that are associated with creating this backup. If collapsing is not done, then this field captures the single backup schedule URI associated with creating this backup.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "incrementalBackupChainId": {
            "description": "Output only. Populated only for backups in an incremental backup chain. Backups share the same chain id if and only if they belong to the same incremental backup chain. Use this field to determine which backups are part of the same incremental backup chain. The ordering of backups in the chain can be determined by ordering the backup `version_time`.",
            "readOnly": true,
            "type": "string"
          },
          "oldestVersionTime": {
            "description": "Output only. Data deleted at a time older than this is guaranteed not to be retained in order to support this backup. For a backup in an incremental backup chain, this is the version time of the oldest backup that exists or ever existed in the chain. For all other backups, this is the version time of the backup. This field can be used to understand what data is being retained by the backup system.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "instancePartitions": {
            "description": "Output only. The instance partition(s) storing the backup. This is the same as the list of the instance partition(s) that the database had footprint in at the backup's `version_time`.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "BackupInstancePartition"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.backups.copy",
      "resource": "projects.instances.backups",
      "action": "copy",
      "http_method": "POST",
      "path_template": "v1/{+parent}/backups:copy",
      "description": "Starts copying a Cloud Spanner Backup. The returned backup long-running operation will have a name of the format `projects//instances//backups//operations/` and can be used to track copying of the backup. The operation is associated with the destination backup. The metadata field type is CopyBackupMetadata. The response field type is Backup, if successful. Cancelling the returned operation will stop the copying and delete the destination backup. Concurrent CopyBackup requests can run on the same source backup.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the destination instance that will contain the backup copy. Values are of the form: `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CopyBackupRequest",
      "body_schema": {
        "id": "CopyBackupRequest",
        "description": "The request for CopyBackup.",
        "type": "object",
        "properties": {
          "backupId": {
            "description": "Required. The id of the backup copy. The `backup_id` appended to `parent` forms the full backup_uri of the form `projects//instances//backups/`.",
            "type": "string"
          },
          "sourceBackup": {
            "description": "Required. The source backup to be copied. The source backup needs to be in READY state for it to be copied. Once CopyBackup is in progress, the source backup cannot be deleted or cleaned up on expiration until CopyBackup is finished. Values are of the form: `projects//instances//backups/`.",
            "type": "string"
          },
          "expireTime": {
            "description": "Required. The expiration time of the backup in microsecond granularity. The expiration time must be at least 6 hours and at most 366 days from the `create_time` of the source backup. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
            "type": "string",
            "format": "google-datetime"
          },
          "encryptionConfig": {
            "description": "Optional. The encryption configuration used to encrypt the backup. If this field is not specified, the backup will use the same encryption configuration as the source backup by default, namely encryption_type = `USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION`.",
            "$ref": "CopyBackupEncryptionConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.backups.get",
      "resource": "projects.instances.backups",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets metadata on a pending or completed Backup.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the backup. Values are of the form `projects//instances//backups/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+/backups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Backup"
    },
    {
      "operation_id": "spanner.projects.instances.backups.patch",
      "resource": "projects.instances.backups",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a pending or completed Backup.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+/backups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. A mask specifying which fields (e.g. `expire_time`) in the Backup resource should be updated. This mask is relative to the Backup resource, not to the request message. The field mask must always be specified; this prevents any future fields from being erased accidentally by clients that do not know about them.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "Backup",
      "body_schema": {
        "id": "Backup",
        "description": "A backup of a Cloud Spanner database.",
        "type": "object",
        "properties": {
          "database": {
            "description": "Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.",
            "type": "string"
          },
          "versionTime": {
            "description": "The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.",
            "type": "string",
            "format": "google-datetime"
          },
          "expireTime": {
            "description": "Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
            "type": "string",
            "format": "google-datetime"
          },
          "name": {
            "description": "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "sizeBytes": {
            "description": "Output only. Size of the backup in bytes. For a backup in an incremental backup chain, this is the sum of the `exclusive_size_bytes` of itself and all older backups in the chain.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "freeableSizeBytes": {
            "description": "Output only. The number of bytes that will be freed by deleting this backup. This value will be zero if, for example, this backup is part of an incremental backup chain and younger backups in the chain require that we keep its data. For backups not in an incremental backup chain, this is always the size of the backup. This value may change if backups on the same chain get created, deleted or expired.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "exclusiveSizeBytes": {
            "description": "Output only. For a backup in an incremental backup chain, this is the storage space needed to keep the data that has changed since the previous backup. For all other backups, this is always the size of the backup. This value may change if backups on the same chain get deleted or expired. This field can be used to calculate the total storage space used by a set of backups. For example, the total space used by all backups of a database can be computed by summing up this field.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "state": {
            "description": "Output only. The current state of the backup.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Not specified.",
              "The pending backup is still being created. Operations on the backup may fail with `FAILED_PRECONDITION` in this state.",
              "The backup is complete and ready for use."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "READY"
            ]
          },
          "referencingDatabases": {
            "description": "Output only. The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "encryptionInfo": {
            "description": "Output only. The encryption information for the backup.",
            "readOnly": true,
            "$ref": "EncryptionInfo"
          },
          "encryptionInformation": {
            "description": "Output only. The encryption information for the backup, whether it is protected by one or more KMS keys. The information includes all Cloud KMS key versions used to encrypt the backup. The `encryption_status` field inside of each `EncryptionInfo` is not populated. At least one of the key versions must be available for the backup to be restored. If a key version is revoked in the middle of a restore, the restore behavior is undefined.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "EncryptionInfo"
            }
          },
          "databaseDialect": {
            "description": "Output only. The database dialect information for the backup.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Default value. This value will create a database with the GOOGLE_STANDARD_SQL dialect.",
              "GoogleSQL supported SQL.",
              "PostgreSQL supported SQL."
            ],
            "enum": [
              "DATABASE_DIALECT_UNSPECIFIED",
              "GOOGLE_STANDARD_SQL",
              "POSTGRESQL"
            ]
          },
          "referencingBackups": {
            "description": "Output only. The names of the destination backups being created by copying this source backup. The backup names are of the form `projects//instances//backups/`. Referencing backups may exist in different instances. The existence of any referencing backup prevents the backup from being deleted. When the copy operation is done (either successfully completed or cancelled or the destination backup is deleted), the reference to the backup is removed.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxExpireTime": {
            "description": "Output only. The max allowed expiration time of the backup, with microseconds granularity. A backup's expiration time can be configured in multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or copying an existing backup, the expiration time specified must be less than `Backup.max_expire_time`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "backupSchedules": {
            "description": "Output only. List of backup schedule URIs that are associated with creating this backup. This is only applicable for scheduled backups, and is empty for on-demand backups. To optimize for storage, whenever possible, multiple schedules are collapsed together to create one backup. In such cases, this field captures the list of all backup schedule URIs that are associated with creating this backup. If collapsing is not done, then this field captures the single backup schedule URI associated with creating this backup.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "incrementalBackupChainId": {
            "description": "Output only. Populated only for backups in an incremental backup chain. Backups share the same chain id if and only if they belong to the same incremental backup chain. Use this field to determine which backups are part of the same incremental backup chain. The ordering of backups in the chain can be determined by ordering the backup `version_time`.",
            "readOnly": true,
            "type": "string"
          },
          "oldestVersionTime": {
            "description": "Output only. Data deleted at a time older than this is guaranteed not to be retained in order to support this backup. For a backup in an incremental backup chain, this is the version time of the oldest backup that exists or ever existed in the chain. For all other backups, this is the version time of the backup. This field can be used to understand what data is being retained by the backup system.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "instancePartitions": {
            "description": "Output only. The instance partition(s) storing the backup. This is the same as the list of the instance partition(s) that the database had footprint in at the backup's `version_time`.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "BackupInstancePartition"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Backup"
    },
    {
      "operation_id": "spanner.projects.instances.backups.delete",
      "resource": "projects.instances.backups",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a pending or completed Backup.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the backup to delete. Values are of the form `projects//instances//backups/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+/backups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.backups.list",
      "resource": "projects.instances.backups",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/backups",
      "description": "Lists completed and pending backups. Backups returned are ordered by `create_time` in descending order, starting from the most recent `create_time`.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The instance to list backups from. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "An expression that filters the list of returned backups. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string, a number, or a boolean. The comparison operator must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`. Colon `:` is the contains operator. Filter rules are not case sensitive. The following fields in the Backup are eligible for filtering: * `name` * `database` * `state` * `create_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ) * `expire_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ) * `version_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ) * `size_bytes` * `backup_schedules` You can combine multiple expressions by enclosing each expression in parentheses. By default, expressions are combined with AND logic, but you can specify AND, OR, and NOT logic explicitly. Here are a few examples: * `name:Howl` - The backup's name contains the string \"howl\". * `database:prod` - The database's name contains the string \"prod\". * `state:CREATING` - The backup is pending creation. * `state:READY` - The backup is fully created and ready for use. * `(name:howl) AND (create_time < \\\"2018-03-28T14:50:00Z\\\")` - The backup name contains the string \"howl\" and `create_time` of the backup is before 2018-03-28T14:50:00Z. * `expire_time < \\\"2018-03-28T14:50:00Z\\\"` - The backup `expire_time` is before 2018-03-28T14:50:00Z. * `size_bytes > 10000000000` - The backup's size is greater than 10GB * `backup_schedules:daily` - The backup is created from a schedule with \"daily\" in its name.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Number of backups to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListBackupsResponse to the same `parent` and with the same `filter`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListBackupsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.backups.operations.list",
      "resource": "projects.instances.backups.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/instances/[^/]+/backups/[^/]+/operations$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListOperationsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.backups.operations.get",
      "resource": "projects.instances.backups.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/instances/[^/]+/backups/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.backups.operations.delete",
      "resource": "projects.instances.backups.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/instances/[^/]+/backups/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.backups.operations.cancel",
      "resource": "projects.instances.backups.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/instances/[^/]+/backups/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.databaseOperations.list",
      "resource": "projects.instances.databaseOperations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/databaseOperations",
      "description": "Lists database longrunning-operations. A database operation has a name of the form `projects//instances//databases//operations/`. The long-running operation metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that have completed/failed/canceled within the last 7 days, and pending operations.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The instance of the database operations. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "An expression that filters the list of returned operations. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string, a number, or a boolean. The comparison operator must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`. Colon `:` is the contains operator. Filter rules are not case sensitive. The following fields in the operation are eligible for filtering: * `name` - The name of the long-running operation * `done` - False if the operation is in progress, else true. * `metadata.@type` - the type of metadata. For example, the type string for RestoreDatabaseMetadata is `type.googleapis.com/google.spanner.admin.database.v1.RestoreDatabaseMetadata`. * `metadata.` - any field in metadata.value. `metadata.@type` must be specified first, if filtering on metadata fields. * `error` - Error associated with the long-running operation. * `response.@type` - the type of response. * `response.` - any field in response.value. You can combine multiple expressions by enclosing each expression in parentheses. By default, expressions are combined with AND logic. However, you can specify AND, OR, and NOT logic explicitly. Here are a few examples: * `done:true` - The operation is complete. * `(metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.RestoreDatabaseMetadata) AND` \\ `(metadata.source_type:BACKUP) AND` \\ `(metadata.backup_info.backup:backup_howl) AND` \\ `(metadata.name:restored_howl) AND` \\ `(metadata.progress.start_time < \\\"2018-03-28T14:50:00Z\\\") AND` \\ `(error:*)` - Return operations where: * The operation's metadata type is RestoreDatabaseMetadata. * The database is restored from a backup. * The backup name contains \"backup_howl\". * The restored database's name contains \"restored_howl\". * The operation started before 2018-03-28T14:50:00Z. * The operation resulted in an error.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Number of operations to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListDatabaseOperationsResponse to the same `parent` and with the same `filter`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListDatabaseOperationsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.backupOperations.list",
      "resource": "projects.instances.backupOperations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/backupOperations",
      "description": "Lists the backup long-running operations in the given instance. A backup operation has a name of the form `projects//instances//backups//operations/`. The long-running operation metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that have completed/failed/canceled within the last 7 days, and pending operations. Operations returned are ordered by `operation.metadata.value.progress.start_time` in descending order starting from the most recently started operation.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The instance of the backup operations. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "An expression that filters the list of returned backup operations. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string, a number, or a boolean. The comparison operator must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`. Colon `:` is the contains operator. Filter rules are not case sensitive. The following fields in the operation are eligible for filtering: * `name` - The name of the long-running operation * `done` - False if the operation is in progress, else true. * `metadata.@type` - the type of metadata. For example, the type string for CreateBackupMetadata is `type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata`. * `metadata.` - any field in metadata.value. `metadata.@type` must be specified first if filtering on metadata fields. * `error` - Error associated with the long-running operation. * `response.@type` - the type of response. * `response.` - any field in response.value. You can combine multiple expressions by enclosing each expression in parentheses. By default, expressions are combined with AND logic, but you can specify AND, OR, and NOT logic explicitly. Here are a few examples: * `done:true` - The operation is complete. * `(metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata) AND` \\ `metadata.database:prod` - Returns operations where: * The operation's metadata type is CreateBackupMetadata. * The source database name of backup contains the string \"prod\". * `(metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata) AND` \\ `(metadata.name:howl) AND` \\ `(metadata.progress.start_time < \\\"2018-03-28T14:50:00Z\\\") AND` \\ `(error:*)` - Returns operations where: * The operation's metadata type is CreateBackupMetadata. * The backup name contains the string \"howl\". * The operation started before 2018-03-28T14:50:00Z. * The operation resulted in an error. * `(metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CopyBackupMetadata) AND` \\ `(metadata.source_backup:test) AND` \\ `(metadata.progress.start_time < \\\"2022-01-18T14:50:00Z\\\") AND` \\ `(error:*)` - Returns operations where: * The operation's metadata type is CopyBackupMetadata. * The source backup name contains the string \"test\". * The operation started before 2022-01-18T14:50:00Z. * The operation resulted in an error. * `((metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata) AND` \\ `(metadata.database:test_db)) OR` \\ `((metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CopyBackupMetadata) AND` \\ `(metadata.source_backup:test_bkp)) AND` \\ `(error:*)` - Returns operations where: * The operation's metadata matches either of criteria: * The operation's metadata type is CreateBackupMetadata AND the source database name of the backup contains the string \"test_db\" * The operation's metadata type is CopyBackupMetadata AND the source backup name contains the string \"test_bkp\" * The operation resulted in an error.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Number of operations to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListBackupOperationsResponse to the same `parent` and with the same `filter`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListBackupOperationsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.instancePartitions.list",
      "resource": "projects.instances.instancePartitions",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/instancePartitions",
      "description": "Lists all instance partitions for the given instance.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The instance whose instance partitions should be listed. Values are of the form `projects//instances/`. Use `{instance} = '-'` to list instance partitions for all Instances in a project, e.g., `projects/myproject/instances/-`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Number of instance partitions to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListInstancePartitionsResponse.",
          "location": "query",
          "type": "string"
        },
        "instancePartitionDeadline": {
          "description": "Optional. Deadline used while retrieving metadata for instance partitions. Instance partitions whose metadata cannot be retrieved within this deadline will be added to unreachable in ListInstancePartitionsResponse.",
          "location": "query",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListInstancePartitionsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.instancePartitions.get",
      "resource": "projects.instances.instancePartitions",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets information about a particular instance partition.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the requested instance partition. Values are of the form `projects/{project}/instances/{instance}/instancePartitions/{instance_partition}`.",
          "pattern": "^projects/[^/]+/instances/[^/]+/instancePartitions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "InstancePartition"
    },
    {
      "operation_id": "spanner.projects.instances.instancePartitions.create",
      "resource": "projects.instances.instancePartitions",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/instancePartitions",
      "description": "Creates an instance partition and begins preparing it to be used. The returned long-running operation can be used to track the progress of preparing the new instance partition. The instance partition name is assigned by the caller. If the named instance partition already exists, `CreateInstancePartition` returns `ALREADY_EXISTS`. Immediately upon completion of this request: * The instance partition is readable via the API, with all requested attributes but no allocated resources. Its state is `CREATING`. Until completion of the returned operation: * Cancelling the operation renders the instance partition immediately unreadable via the API. * The instance partition can be deleted. * All other attempts to modify the instance partition are rejected. Upon completion of the returned operation: * Billing for all successfully-allocated resources begins (some types may have lower than the requested levels). * Databases can start using this instance partition. * The instance partition's allocated resource levels are readable via the API. * The instance partition's state becomes `READY`. The returned long-running operation will have a name of the format `/operations/` and can be used to track creation of the instance partition. The metadata field type is CreateInstancePartitionMetadata. The response field type is InstancePartition, if successful.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the instance in which to create the instance partition. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "CreateInstancePartitionRequest",
      "body_schema": {
        "id": "CreateInstancePartitionRequest",
        "description": "The request for CreateInstancePartition.",
        "type": "object",
        "properties": {
          "instancePartitionId": {
            "description": "Required. The ID of the instance partition to create. Valid identifiers are of the form `a-z*[a-z0-9]` and must be between 2 and 64 characters in length.",
            "type": "string"
          },
          "instancePartition": {
            "description": "Required. The instance partition to create. The instance_partition.name may be omitted, but if specified must be `/instancePartitions/`.",
            "$ref": "InstancePartition"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.instancePartitions.delete",
      "resource": "projects.instances.instancePartitions",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes an existing instance partition. Requires that the instance partition is not used by any database or backup and is not the default instance partition of an instance. Authorization requires `spanner.instancePartitions.delete` permission on the resource name.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the instance partition to be deleted. Values are of the form `projects/{project}/instances/{instance}/instancePartitions/{instance_partition}`",
          "pattern": "^projects/[^/]+/instances/[^/]+/instancePartitions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "etag": {
          "description": "Optional. If not empty, the API only deletes the instance partition when the etag provided matches the current status of the requested instance partition. Otherwise, deletes the instance partition without checking the current status of the requested instance partition.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.instancePartitions.patch",
      "resource": "projects.instances.instancePartitions",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an instance partition, and begins allocating or releasing resources as requested. The returned long-running operation can be used to track the progress of updating the instance partition. If the named instance partition does not exist, returns `NOT_FOUND`. Immediately upon completion of this request: * For resource types for which a decrease in the instance partition's allocation has been requested, billing is based on the newly-requested level. Until completion of the returned operation: * Cancelling the operation sets its metadata's cancel_time, and begins restoring resources to their pre-request values. The operation is guaranteed to succeed at undoing all resource changes, after which point it terminates with a `CANCELLED` status. * All other attempts to modify the instance partition are rejected. * Reading the instance partition via the API continues to give the pre-request resource levels. Upon completion of the returned operation: * Billing begins for all successfully-allocated resources (some types may have lower than the requested levels). * All newly-reserved resources are available for serving the instance partition's tables. * The instance partition's new resource levels are readable via the API. The returned long-running operation will have a name of the format `/operations/` and can be used to track the instance partition modification. The metadata field type is UpdateInstancePartitionMetadata. The response field type is InstancePartition, if successful. Authorization requires `spanner.instancePartitions.update` permission on the resource name.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. A unique identifier for the instance partition. Values are of the form `projects//instances//instancePartitions/a-z*[a-z0-9]`. The final segment of the name must be between 2 and 64 characters in length. An instance partition's name cannot be changed after the instance partition is created.",
          "pattern": "^projects/[^/]+/instances/[^/]+/instancePartitions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UpdateInstancePartitionRequest",
      "body_schema": {
        "id": "UpdateInstancePartitionRequest",
        "description": "The request for UpdateInstancePartition.",
        "type": "object",
        "properties": {
          "instancePartition": {
            "description": "Required. The instance partition to update, which must always include the instance partition name. Otherwise, only fields mentioned in field_mask need be included.",
            "$ref": "InstancePartition"
          },
          "fieldMask": {
            "description": "Required. A mask specifying which fields in InstancePartition should be updated. The field mask must always be specified; this prevents any future fields in InstancePartition from being erased accidentally by clients that do not know about them.",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.instancePartitions.operations.list",
      "resource": "projects.instances.instancePartitions.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/instances/[^/]+/instancePartitions/[^/]+/operations$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListOperationsResponse"
    },
    {
      "operation_id": "spanner.projects.instances.instancePartitions.operations.get",
      "resource": "projects.instances.instancePartitions.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/instances/[^/]+/instancePartitions/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "spanner.projects.instances.instancePartitions.operations.delete",
      "resource": "projects.instances.instancePartitions.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/instances/[^/]+/instancePartitions/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.instancePartitions.operations.cancel",
      "resource": "projects.instances.instancePartitions.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/instances/[^/]+/instancePartitions/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "spanner.projects.instances.instancePartitionOperations.list",
      "resource": "projects.instances.instancePartitionOperations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/instancePartitionOperations",
      "description": "Lists instance partition long-running operations in the given instance. An instance partition operation has a name of the form `projects//instances//instancePartitions//operations/`. The long-running operation metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that have completed/failed/canceled within the last 7 days, and pending operations. Operations returned are ordered by `operation.metadata.value.start_time` in descending order starting from the most recently started operation. Authorization requires `spanner.instancePartitionOperations.list` permission on the resource parent.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent instance of the instance partition operations. Values are of the form `projects//instances/`.",
          "pattern": "^projects/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. An expression that filters the list of returned operations. A filter expression consists of a field name, a comparison operator, and a value for filtering. The value must be a string, a number, or a boolean. The comparison operator must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`. Colon `:` is the contains operator. Filter rules are not case sensitive. The following fields in the Operation are eligible for filtering: * `name` - The name of the long-running operation * `done` - False if the operation is in progress, else true. * `metadata.@type` - the type of metadata. For example, the type string for CreateInstancePartitionMetadata is `type.googleapis.com/google.spanner.admin.instance.v1.CreateInstancePartitionMetadata`. * `metadata.` - any field in metadata.value. `metadata.@type` must be specified first, if filtering on metadata fields. * `error` - Error associated with the long-running operation. * `response.@type` - the type of response. * `response.` - any field in response.value. You can combine multiple expressions by enclosing each expression in parentheses. By default, expressions are combined with AND logic. However, you can specify AND, OR, and NOT logic explicitly. Here are a few examples: * `done:true` - The operation is complete. * `(metadata.@type=` \\ `type.googleapis.com/google.spanner.admin.instance.v1.CreateInstancePartitionMetadata) AND` \\ `(metadata.instance_partition.name:custom-instance-partition) AND` \\ `(metadata.start_time < \\\"2021-03-28T14:50:00Z\\\") AND` \\ `(error:*)` - Return operations where: * The operation's metadata type is CreateInstancePartitionMetadata. * The instance partition name contains \"custom-instance-partition\". * The operation started before 2021-03-28T14:50:00Z. * The operation resulted in an error.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. Number of operations to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. If non-empty, `page_token` should contain a next_page_token from a previous ListInstancePartitionOperationsResponse to the same `parent` and with the same `filter`.",
          "location": "query",
          "type": "string"
        },
        "instancePartitionDeadline": {
          "description": "Optional. Deadline used while retrieving metadata for instance partition operations. Instance partitions whose operation metadata cannot be retrieved within this deadline will be added to unreachable_instance_partitions in ListInstancePartitionOperationsResponse.",
          "location": "query",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/spanner.admin"
      ],
      "response_type": "ListInstancePartitionOperationsResponse"
    }
  ]
}