{
  "service": "redis",
  "version": "v1",
  "base_url": "https://redis.googleapis.com/",
  "total_endpoints": 31,
  "endpoints": [
    {
      "operation_id": "redis.projects.locations.list",
      "resource": "projects.locations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/locations",
      "description": "Lists information about the supported locations for this service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource that owns the locations collection, if applicable.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return. If not set, the service selects a default.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "extraLocationTypes": {
          "description": "Optional. A list of extra location types that should be used as conditions for controlling the visibility of the locations.",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListLocationsResponse"
    },
    {
      "operation_id": "redis.projects.locations.get",
      "resource": "projects.locations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets information about a location.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Resource name for the location.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Location"
    },
    {
      "operation_id": "redis.projects.locations.operations.list",
      "resource": "projects.locations.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListOperationsResponse"
    },
    {
      "operation_id": "redis.projects.locations.operations.get",
      "resource": "projects.locations.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.operations.delete",
      "resource": "projects.locations.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "redis.projects.locations.operations.cancel",
      "resource": "projects.locations.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Empty"
    },
    {
      "operation_id": "redis.projects.locations.clusters.list",
      "resource": "projects.locations.clusters",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/clusters",
      "description": "Lists all Redis clusters owned by a project in either the specified location (region) or all locations. The location should have the following format: * `projects/{project_id}/locations/{location_id}` If `location_id` is specified as `-` (wildcard), then all regions available to the project are queried, and the results are aggregated.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the cluster location using the form: `projects/{project_id}/locations/{location_id}` where `location_id` refers to a Google Cloud region.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of items to return. If not specified, a default value of 1000 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's `next_page_token` to determine if there are more clusters left to be queried.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The `next_page_token` value returned from a previous ListClusters request, if any.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListClustersResponse"
    },
    {
      "operation_id": "redis.projects.locations.clusters.get",
      "resource": "projects.locations.clusters",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the details of a specific Redis cluster.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis cluster resource name using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}` where `location_id` refers to a Google Cloud region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Cluster"
    },
    {
      "operation_id": "redis.projects.locations.clusters.patch",
      "resource": "projects.locations.clusters",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the metadata and configuration of a specific Redis cluster. Completed longrunning.Operation will contain the new cluster object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Identifier. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from Cluster: * `size_gb` * `replica_count` * `cluster_endpoints`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "requestId": {
          "description": "Optional. Idempotent request UUID.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Cluster",
      "body_schema": {
        "id": "Cluster",
        "description": "A cluster instance.",
        "type": "object",
        "properties": {
          "gcsSource": {
            "description": "Optional. Backups stored in Cloud Storage buckets. The Cloud Storage buckets need to be the same region as the clusters. Read permission is required to import from the provided Cloud Storage objects.",
            "$ref": "GcsBackupSource"
          },
          "managedBackupSource": {
            "description": "Optional. Backups generated and managed by memorystore service.",
            "$ref": "ManagedBackupSource"
          },
          "name": {
            "description": "Required. Identifier. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The timestamp associated with the cluster creation request.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "state": {
            "description": "Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "Redis cluster is being created.",
              "Redis cluster has been created and is fully usable.",
              "Redis cluster configuration is being updated.",
              "Redis cluster is being deleted."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "UPDATING",
              "DELETING"
            ]
          },
          "uid": {
            "description": "Output only. System assigned, unique identifier for the cluster.",
            "readOnly": true,
            "type": "string"
          },
          "replicaCount": {
            "description": "Optional. The number of replica nodes per shard.",
            "type": "integer",
            "format": "int32"
          },
          "authorizationMode": {
            "description": "Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.",
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "IAM basic authorization mode",
              "Authorization disabled mode"
            ],
            "enum": [
              "AUTH_MODE_UNSPECIFIED",
              "AUTH_MODE_IAM_AUTH",
              "AUTH_MODE_DISABLED"
            ]
          },
          "transitEncryptionMode": {
            "description": "Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is disabled for the cluster.",
            "type": "string",
            "enumDescriptions": [
              "In-transit encryption not set.",
              "In-transit encryption disabled.",
              "Use server managed encryption for in-transit encryption."
            ],
            "enum": [
              "TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
              "TRANSIT_ENCRYPTION_MODE_DISABLED",
              "TRANSIT_ENCRYPTION_MODE_SERVER_AUTHENTICATION"
            ]
          },
          "sizeGb": {
            "description": "Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "shardCount": {
            "description": "Optional. Number of shards for the Redis cluster.",
            "type": "integer",
            "format": "int32"
          },
          "pscConfigs": {
            "description": "Optional. Each PscConfig configures the consumer network where IPs will be designated to the cluster for client access through Private Service Connect Automation. Currently, only one PscConfig is supported.",
            "type": "array",
            "items": {
              "$ref": "PscConfig"
            }
          },
          "discoveryEndpoints": {
            "description": "Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one discovery endpoint is supported.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "DiscoveryEndpoint"
            }
          },
          "pscConnections": {
            "description": "Output only. The list of PSC connections that are auto-created through service connectivity automation.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "PscConnection"
            }
          },
          "stateInfo": {
            "description": "Output only. Additional information about the current state of the cluster.",
            "readOnly": true,
            "$ref": "StateInfo"
          },
          "nodeType": {
            "description": "Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-type of a redis node.",
            "type": "string",
            "enumDescriptions": [
              "Node type unspecified",
              "Redis shared core nano node_type.",
              "Redis highmem medium node_type.",
              "Redis highmem xlarge node_type.",
              "Redis standard small node_type."
            ],
            "enum": [
              "NODE_TYPE_UNSPECIFIED",
              "REDIS_SHARED_CORE_NANO",
              "REDIS_HIGHMEM_MEDIUM",
              "REDIS_HIGHMEM_XLARGE",
              "REDIS_STANDARD_SMALL"
            ]
          },
          "persistenceConfig": {
            "description": "Optional. Persistence config (RDB, AOF) for the cluster.",
            "$ref": "ClusterPersistenceConfig"
          },
          "redisConfigs": {
            "description": "Optional. Key/Value pairs of customer overrides for mutable Redis Configs",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "preciseSizeGb": {
            "description": "Output only. Precise value of redis memory size in GB for the entire cluster.",
            "readOnly": true,
            "type": "number",
            "format": "double"
          },
          "zoneDistributionConfig": {
            "description": "Optional. This config will be used to determine how the customer wants us to distribute cluster resources within the region.",
            "$ref": "ZoneDistributionConfig"
          },
          "crossClusterReplicationConfig": {
            "description": "Optional. Cross cluster replication config.",
            "$ref": "CrossClusterReplicationConfig"
          },
          "deletionProtectionEnabled": {
            "description": "Optional. The delete operation will fail when the value is set to true.",
            "type": "boolean"
          },
          "maintenancePolicy": {
            "description": "Optional. ClusterMaintenancePolicy determines when to allow or deny updates.",
            "$ref": "ClusterMaintenancePolicy"
          },
          "maintenanceSchedule": {
            "description": "Output only. ClusterMaintenanceSchedule Output only Published maintenance schedule.",
            "readOnly": true,
            "$ref": "ClusterMaintenanceSchedule"
          },
          "pscServiceAttachments": {
            "description": "Output only. Service attachment details to configure Psc connections",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "PscServiceAttachment"
            }
          },
          "clusterEndpoints": {
            "description": "Optional. A list of cluster endpoints.",
            "type": "array",
            "items": {
              "$ref": "ClusterEndpoint"
            }
          },
          "simulateMaintenanceEvent": {
            "description": "Optional. Input only. Simulate a maintenance event.",
            "type": "boolean"
          },
          "backupCollection": {
            "description": "Optional. Output only. The backup collection full resource name. Example: projects/{project}/locations/{location}/backupCollections/{collection}",
            "readOnly": true,
            "type": "string"
          },
          "kmsKey": {
            "description": "Optional. The KMS key used to encrypt the at-rest data of the cluster.",
            "type": "string"
          },
          "ondemandMaintenance": {
            "description": "Optional. Input only. Ondemand maintenance for the cluster. This field can be used to trigger ondemand critical update on the cluster.",
            "deprecated": true,
            "type": "boolean"
          },
          "automatedBackupConfig": {
            "description": "Optional. The automated backup config for the cluster.",
            "$ref": "AutomatedBackupConfig"
          },
          "encryptionInfo": {
            "description": "Output only. Encryption information of the data at rest of the cluster.",
            "readOnly": true,
            "$ref": "EncryptionInfo"
          },
          "asyncClusterEndpointsDeletionEnabled": {
            "description": "Optional. If true, cluster endpoints that are created and registered by customers can be deleted asynchronously. That is, such a cluster endpoint can be de-registered before the forwarding rules in the cluster endpoint are deleted.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.clusters.delete",
      "resource": "projects.locations.clusters",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a specific Redis cluster. Cluster stops serving and data is deleted.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis cluster resource name using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}` where `location_id` refers to a Google Cloud region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. Idempotent request UUID.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.clusters.create",
      "resource": "projects.locations.clusters",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/clusters",
      "description": "Creates a Redis cluster based on the specified properties. The creation is executed asynchronously and callers may check the returned operation to track its progress. Once the operation is completed the Redis cluster will be fully functional. The completed longrunning.Operation will contain the new cluster object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the cluster location using the form: `projects/{project_id}/locations/{location_id}` where `location_id` refers to a Google Cloud region.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "clusterId": {
          "description": "Required. The logical name of the Redis cluster in the customer project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the customer project / location",
          "location": "query",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. Idempotent request UUID.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Cluster",
      "body_schema": {
        "id": "Cluster",
        "description": "A cluster instance.",
        "type": "object",
        "properties": {
          "gcsSource": {
            "description": "Optional. Backups stored in Cloud Storage buckets. The Cloud Storage buckets need to be the same region as the clusters. Read permission is required to import from the provided Cloud Storage objects.",
            "$ref": "GcsBackupSource"
          },
          "managedBackupSource": {
            "description": "Optional. Backups generated and managed by memorystore service.",
            "$ref": "ManagedBackupSource"
          },
          "name": {
            "description": "Required. Identifier. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The timestamp associated with the cluster creation request.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "state": {
            "description": "Output only. The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "Redis cluster is being created.",
              "Redis cluster has been created and is fully usable.",
              "Redis cluster configuration is being updated.",
              "Redis cluster is being deleted."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "UPDATING",
              "DELETING"
            ]
          },
          "uid": {
            "description": "Output only. System assigned, unique identifier for the cluster.",
            "readOnly": true,
            "type": "string"
          },
          "replicaCount": {
            "description": "Optional. The number of replica nodes per shard.",
            "type": "integer",
            "format": "int32"
          },
          "authorizationMode": {
            "description": "Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.",
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "IAM basic authorization mode",
              "Authorization disabled mode"
            ],
            "enum": [
              "AUTH_MODE_UNSPECIFIED",
              "AUTH_MODE_IAM_AUTH",
              "AUTH_MODE_DISABLED"
            ]
          },
          "transitEncryptionMode": {
            "description": "Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is disabled for the cluster.",
            "type": "string",
            "enumDescriptions": [
              "In-transit encryption not set.",
              "In-transit encryption disabled.",
              "Use server managed encryption for in-transit encryption."
            ],
            "enum": [
              "TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
              "TRANSIT_ENCRYPTION_MODE_DISABLED",
              "TRANSIT_ENCRYPTION_MODE_SERVER_AUTHENTICATION"
            ]
          },
          "sizeGb": {
            "description": "Output only. Redis memory size in GB for the entire cluster rounded up to the next integer.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "shardCount": {
            "description": "Optional. Number of shards for the Redis cluster.",
            "type": "integer",
            "format": "int32"
          },
          "pscConfigs": {
            "description": "Optional. Each PscConfig configures the consumer network where IPs will be designated to the cluster for client access through Private Service Connect Automation. Currently, only one PscConfig is supported.",
            "type": "array",
            "items": {
              "$ref": "PscConfig"
            }
          },
          "discoveryEndpoints": {
            "description": "Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one discovery endpoint is supported.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "DiscoveryEndpoint"
            }
          },
          "pscConnections": {
            "description": "Output only. The list of PSC connections that are auto-created through service connectivity automation.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "PscConnection"
            }
          },
          "stateInfo": {
            "description": "Output only. Additional information about the current state of the cluster.",
            "readOnly": true,
            "$ref": "StateInfo"
          },
          "nodeType": {
            "description": "Optional. The type of a redis node in the cluster. NodeType determines the underlying machine-type of a redis node.",
            "type": "string",
            "enumDescriptions": [
              "Node type unspecified",
              "Redis shared core nano node_type.",
              "Redis highmem medium node_type.",
              "Redis highmem xlarge node_type.",
              "Redis standard small node_type."
            ],
            "enum": [
              "NODE_TYPE_UNSPECIFIED",
              "REDIS_SHARED_CORE_NANO",
              "REDIS_HIGHMEM_MEDIUM",
              "REDIS_HIGHMEM_XLARGE",
              "REDIS_STANDARD_SMALL"
            ]
          },
          "persistenceConfig": {
            "description": "Optional. Persistence config (RDB, AOF) for the cluster.",
            "$ref": "ClusterPersistenceConfig"
          },
          "redisConfigs": {
            "description": "Optional. Key/Value pairs of customer overrides for mutable Redis Configs",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "preciseSizeGb": {
            "description": "Output only. Precise value of redis memory size in GB for the entire cluster.",
            "readOnly": true,
            "type": "number",
            "format": "double"
          },
          "zoneDistributionConfig": {
            "description": "Optional. This config will be used to determine how the customer wants us to distribute cluster resources within the region.",
            "$ref": "ZoneDistributionConfig"
          },
          "crossClusterReplicationConfig": {
            "description": "Optional. Cross cluster replication config.",
            "$ref": "CrossClusterReplicationConfig"
          },
          "deletionProtectionEnabled": {
            "description": "Optional. The delete operation will fail when the value is set to true.",
            "type": "boolean"
          },
          "maintenancePolicy": {
            "description": "Optional. ClusterMaintenancePolicy determines when to allow or deny updates.",
            "$ref": "ClusterMaintenancePolicy"
          },
          "maintenanceSchedule": {
            "description": "Output only. ClusterMaintenanceSchedule Output only Published maintenance schedule.",
            "readOnly": true,
            "$ref": "ClusterMaintenanceSchedule"
          },
          "pscServiceAttachments": {
            "description": "Output only. Service attachment details to configure Psc connections",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "PscServiceAttachment"
            }
          },
          "clusterEndpoints": {
            "description": "Optional. A list of cluster endpoints.",
            "type": "array",
            "items": {
              "$ref": "ClusterEndpoint"
            }
          },
          "simulateMaintenanceEvent": {
            "description": "Optional. Input only. Simulate a maintenance event.",
            "type": "boolean"
          },
          "backupCollection": {
            "description": "Optional. Output only. The backup collection full resource name. Example: projects/{project}/locations/{location}/backupCollections/{collection}",
            "readOnly": true,
            "type": "string"
          },
          "kmsKey": {
            "description": "Optional. The KMS key used to encrypt the at-rest data of the cluster.",
            "type": "string"
          },
          "ondemandMaintenance": {
            "description": "Optional. Input only. Ondemand maintenance for the cluster. This field can be used to trigger ondemand critical update on the cluster.",
            "deprecated": true,
            "type": "boolean"
          },
          "automatedBackupConfig": {
            "description": "Optional. The automated backup config for the cluster.",
            "$ref": "AutomatedBackupConfig"
          },
          "encryptionInfo": {
            "description": "Output only. Encryption information of the data at rest of the cluster.",
            "readOnly": true,
            "$ref": "EncryptionInfo"
          },
          "asyncClusterEndpointsDeletionEnabled": {
            "description": "Optional. If true, cluster endpoints that are created and registered by customers can be deleted asynchronously. That is, such a cluster endpoint can be de-registered before the forwarding rules in the cluster endpoint are deleted.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.clusters.getCertificateAuthority",
      "resource": "projects.locations.clusters",
      "action": "getCertificateAuthority",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the details of certificate authority information for Redis cluster.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis cluster certificate authority resource name using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}/certificateAuthority` where `location_id` refers to a Google Cloud region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/certificateAuthority$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "CertificateAuthority"
    },
    {
      "operation_id": "redis.projects.locations.clusters.rescheduleClusterMaintenance",
      "resource": "projects.locations.clusters",
      "action": "rescheduleClusterMaintenance",
      "http_method": "POST",
      "path_template": "v1/{+name}:rescheduleClusterMaintenance",
      "description": "Reschedules upcoming maintenance event.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis Cluster instance resource name using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}` where `location_id` refers to a Google Cloud region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RescheduleClusterMaintenanceRequest",
      "body_schema": {
        "id": "RescheduleClusterMaintenanceRequest",
        "description": "Request for rescheduling a cluster maintenance.",
        "type": "object",
        "properties": {
          "rescheduleType": {
            "description": "Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well.",
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "If the user wants to schedule the maintenance to happen now.",
              "If the user wants to reschedule the maintenance to a specific time."
            ],
            "enum": [
              "RESCHEDULE_TYPE_UNSPECIFIED",
              "IMMEDIATE",
              "SPECIFIC_TIME"
            ]
          },
          "scheduleTime": {
            "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example `2012-11-15T16:19:00.094Z`.",
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.clusters.backup",
      "resource": "projects.locations.clusters",
      "action": "backup",
      "http_method": "POST",
      "path_template": "v1/{+name}:backup",
      "description": "Backup Redis Cluster. If this is the first time a backup is being created, a backup collection will be created at the backend, and this backup belongs to this collection. Both collection and backup will have a resource name. Backup will be executed for each shard. A replica (primary if nonHA) will be selected to perform the execution. Backup call will be rejected if there is an ongoing backup or update operation. Be aware that during preview, if the cluster's internal software version is too old, critical update will be performed before actual backup. Once the internal software version is updated to the minimum version required by the backup feature, subsequent backups will not require critical update. After preview, there will be no critical update needed for backup.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis cluster resource name using the form: `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}` where `location_id` refers to a Google Cloud region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "BackupClusterRequest",
      "body_schema": {
        "id": "BackupClusterRequest",
        "description": "Request for [BackupCluster].",
        "type": "object",
        "properties": {
          "ttl": {
            "description": "Optional. TTL for the backup to expire. Value range is 1 day to 100 years. If not specified, the default value is 100 years.",
            "type": "string",
            "format": "google-duration"
          },
          "backupId": {
            "description": "Optional. The id of the backup to be created. If not specified, the default value ([YYYYMMDDHHMMSS]_[Shortened Cluster UID] is used.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.backupCollections.list",
      "resource": "projects.locations.backupCollections",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/backupCollections",
      "description": "Lists all backup collections owned by a consumer project in either the specified location (region) or all locations. If `location_id` is specified as `-` (wildcard), then all regions available to the project are queried, and the results are aggregated.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the backupCollection location using the form: `projects/{project_id}/locations/{location_id}` where `location_id` refers to a Google Cloud region.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The maximum number of items to return. If not specified, a default value of 1000 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's `next_page_token` to determine if there are more clusters left to be queried.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The `next_page_token` value returned from a previous [ListBackupCollections] request, if any.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListBackupCollectionsResponse"
    },
    {
      "operation_id": "redis.projects.locations.backupCollections.get",
      "resource": "projects.locations.backupCollections",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Get a backup collection.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis backupCollection resource name using the form: `projects/{project_id}/locations/{location_id}/backupCollections/{backup_collection_id}` where `location_id` refers to a Google Cloud region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/backupCollections/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "BackupCollection"
    },
    {
      "operation_id": "redis.projects.locations.backupCollections.backups.list",
      "resource": "projects.locations.backupCollections.backups",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/backups",
      "description": "Lists all backups owned by a backup collection.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the backupCollection using the form: `projects/{project_id}/locations/{location_id}/backupCollections/{backup_collection_id}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/backupCollections/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The maximum number of items to return. If not specified, a default value of 1000 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's `next_page_token` to determine if there are more clusters left to be queried.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The `next_page_token` value returned from a previous [ListBackupCollections] request, if any.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListBackupsResponse"
    },
    {
      "operation_id": "redis.projects.locations.backupCollections.backups.get",
      "resource": "projects.locations.backupCollections.backups",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the details of a specific backup.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis backup resource name using the form: `projects/{project_id}/locations/{location_id}/backupCollections/{backup_collection_id}/backups/{backup_id}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/backupCollections/[^/]+/backups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Backup"
    },
    {
      "operation_id": "redis.projects.locations.backupCollections.backups.delete",
      "resource": "projects.locations.backupCollections.backups",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a specific backup.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis backup resource name using the form: `projects/{project_id}/locations/{location_id}/backupCollections/{backup_collection_id}/backups/{backup_id}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/backupCollections/[^/]+/backups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "requestId": {
          "description": "Optional. Idempotent request UUID.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.backupCollections.backups.export",
      "resource": "projects.locations.backupCollections.backups",
      "action": "export",
      "http_method": "POST",
      "path_template": "v1/{+name}:export",
      "description": "Exports a specific backup to a customer target Cloud Storage URI.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis backup resource name using the form: `projects/{project_id}/locations/{location_id}/backupCollections/{backup_collection_id}/backups/{backup_id}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/backupCollections/[^/]+/backups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ExportBackupRequest",
      "body_schema": {
        "id": "ExportBackupRequest",
        "description": "Request for [ExportBackup].",
        "type": "object",
        "properties": {
          "gcsBucket": {
            "description": "Google Cloud Storage bucket, like \"my-bucket\".",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.instances.list",
      "resource": "projects.locations.instances",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/instances",
      "description": "Lists all Redis instances owned by a project in either the specified location (region) or all locations. The location should have the following format: * `projects/{project_id}/locations/{location_id}` If `location_id` is specified as `-` (wildcard), then all regions available to the project are queried, and the results are aggregated.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the instance location using the form: `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP region.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of items to return. If not specified, a default value of 1000 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's `next_page_token` to determine if there are more instances left to be queried.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The `next_page_token` value returned from a previous ListInstances request, if any.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "ListInstancesResponse"
    },
    {
      "operation_id": "redis.projects.locations.instances.get",
      "resource": "projects.locations.instances",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the details of a specific Redis instance.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Instance"
    },
    {
      "operation_id": "redis.projects.locations.instances.getAuthString",
      "resource": "projects.locations.instances",
      "action": "getAuthString",
      "http_method": "GET",
      "path_template": "v1/{+name}/authString",
      "description": "Gets the AUTH string for a Redis instance. If AUTH is not enabled for the instance the response will be empty. This information is not included in the details returned to GetInstance.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "InstanceAuthString"
    },
    {
      "operation_id": "redis.projects.locations.instances.create",
      "resource": "projects.locations.instances",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/instances",
      "description": "Creates a Redis instance based on the specified tier and memory size. By default, the instance is accessible from the project's [default network](https://cloud.google.com/vpc/docs/vpc). The creation is executed asynchronously and callers may check the returned operation to track its progress. Once the operation is completed the Redis instance will be fully functional. Completed longrunning.Operation will contain the new instance object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the instance location using the form: `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP region.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "instanceId": {
          "description": "Required. The logical name of the Redis instance in the customer project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-40 characters. * Must end with a number or a letter. * Must be unique within the customer project / location",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "Instance",
      "body_schema": {
        "id": "Instance",
        "description": "A Memorystore for Redis instance.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to location_id and alternative_location_id fields for more details.",
            "type": "string"
          },
          "displayName": {
            "description": "An arbitrary and optional user-provided name for the instance.",
            "type": "string"
          },
          "labels": {
            "description": "Resource labels to represent user provided metadata",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "locationId": {
            "description": "Optional. The zone where the instance will be provisioned. If not provided, the service will choose a zone from the specified region for the instance. For standard tier, additional nodes will be added across multiple zones for protection against zonal failures. If specified, at least one node will be provisioned in this zone.",
            "type": "string"
          },
          "alternativeLocationId": {
            "description": "Optional. If specified, at least one node will be provisioned in this zone in addition to the zone specified in location_id. Only applicable to standard tier. If provided, it must be a different zone from the one provided in [location_id]. Additional nodes beyond the first 2 will be placed in zones selected by the service.",
            "type": "string"
          },
          "redisVersion": {
            "description": "Optional. The version of Redis software. If not provided, the default version will be used. Currently, the supported values are: * `REDIS_3_2` for Redis 3.2 compatibility * `REDIS_4_0` for Redis 4.0 compatibility * `REDIS_5_0` for Redis 5.0 compatibility * `REDIS_6_X` for Redis 6.x compatibility * `REDIS_7_0` for Redis 7.0 compatibility (default) * `REDIS_7_2` for Redis 7.2 compatibility",
            "type": "string"
          },
          "reservedIpRange": {
            "description": "Optional. For DIRECT_PEERING mode, the CIDR range of internal addresses that are reserved for this instance. Range must be unique and non-overlapping with existing subnets in an authorized network. For PRIVATE_SERVICE_ACCESS mode, the name of one allocated IP address ranges associated with this private service access connection. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. For READ_REPLICAS_ENABLED the default block size is /28.",
            "type": "string"
          },
          "secondaryIpRange": {
            "description": "Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or \"auto\". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address range associated with the private service access connection, or \"auto\".",
            "type": "string"
          },
          "host": {
            "description": "Output only. Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.",
            "readOnly": true,
            "type": "string"
          },
          "port": {
            "description": "Output only. The port number of the exposed Redis endpoint.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "currentLocationId": {
            "description": "Output only. The current zone where the Redis primary node is located. In basic tier, this will always be the same as [location_id]. In standard tier, this can be the zone of any node in the instance.",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the instance was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "state": {
            "description": "Output only. The current state of this instance.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "Redis instance is being created.",
              "Redis instance has been created and is fully usable.",
              "Redis instance configuration is being updated. Certain kinds of updates may cause the instance to become unusable while the update is in progress.",
              "Redis instance is being deleted.",
              "Redis instance is being repaired and may be unusable.",
              "Maintenance is being performed on this Redis instance.",
              "Redis instance is importing data (availability may be affected).",
              "Redis instance is failing over (availability may be affected)."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "READY",
              "UPDATING",
              "DELETING",
              "REPAIRING",
              "MAINTENANCE",
              "IMPORTING",
              "FAILING_OVER"
            ]
          },
          "statusMessage": {
            "description": "Output only. Additional information about the current status of this instance, if available.",
            "readOnly": true,
            "type": "string"
          },
          "redisConfigs": {
            "description": "Optional. Redis configuration parameters, according to http://redis.io/topics/config. Currently, the only supported parameters are: Redis version 3.2 and newer: * maxmemory-policy * notify-keyspace-events Redis version 4.0 and newer: * activedefrag * lfu-decay-time * lfu-log-factor * maxmemory-gb Redis version 5.0 and newer: * stream-node-max-bytes * stream-node-max-entries",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "tier": {
            "description": "Required. The service tier of the instance.",
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "BASIC tier: standalone instance",
              "STANDARD_HA tier: highly available primary/replica instances"
            ],
            "enum": [
              "TIER_UNSPECIFIED",
              "BASIC",
              "STANDARD_HA"
            ]
          },
          "memorySizeGb": {
            "description": "Required. Redis memory size in GiB.",
            "type": "integer",
            "format": "int32"
          },
          "authorizedNetwork": {
            "description": "Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/vpc/docs/vpc) to which the instance is connected. If left unspecified, the `default` network will be used.",
            "type": "string"
          },
          "persistenceIamIdentity": {
            "description": "Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is \"serviceAccount:\". The value may change over time for a given instance so should be checked before each import/export operation.",
            "readOnly": true,
            "type": "string"
          },
          "connectMode": {
            "description": "Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.",
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "Connect via direct peering to the Memorystore for Redis hosted service.",
              "Connect your Memorystore for Redis instance using Private Service Access. Private services access provides an IP address range for multiple Google Cloud services, including Memorystore."
            ],
            "enum": [
              "CONNECT_MODE_UNSPECIFIED",
              "DIRECT_PEERING",
              "PRIVATE_SERVICE_ACCESS"
            ]
          },
          "authEnabled": {
            "description": "Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to \"true\" AUTH is enabled on the instance. Default value is \"false\" meaning AUTH is disabled.",
            "type": "boolean"
          },
          "serverCaCerts": {
            "description": "Output only. List of server CA certificates for the instance.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "TlsCertificate"
            }
          },
          "transitEncryptionMode": {
            "description": "Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.",
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "Client to Server traffic encryption enabled with server authentication.",
              "TLS is disabled for the instance."
            ],
            "enum": [
              "TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
              "SERVER_AUTHENTICATION",
              "DISABLED"
            ]
          },
          "maintenancePolicy": {
            "description": "Optional. The maintenance policy for the instance. If not provided, maintenance events can be performed at any time.",
            "$ref": "MaintenancePolicy"
          },
          "maintenanceSchedule": {
            "description": "Output only. Date and time of upcoming maintenance events which have been scheduled.",
            "readOnly": true,
            "$ref": "MaintenanceSchedule"
          },
          "replicaCount": {
            "description": "Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default is 1. The valid value for basic tier is 0 and the default is also 0.",
            "type": "integer",
            "format": "int32"
          },
          "nodes": {
            "description": "Output only. Info per node.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "NodeInfo"
            }
          },
          "readEndpoint": {
            "description": "Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write requests must target 'host'.",
            "readOnly": true,
            "type": "string"
          },
          "readEndpointPort": {
            "description": "Output only. The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target 'port'.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "readReplicasMode": {
            "description": "Optional. Read replicas mode for the instance. Defaults to READ_REPLICAS_DISABLED.",
            "type": "string",
            "enumDescriptions": [
              "If not set, Memorystore Redis backend will default to READ_REPLICAS_DISABLED.",
              "If disabled, read endpoint will not be provided and the instance cannot scale up or down the number of replicas.",
              "If enabled, read endpoint will be provided and the instance can scale up and down the number of replicas. Not valid for basic tier."
            ],
            "enum": [
              "READ_REPLICAS_MODE_UNSPECIFIED",
              "READ_REPLICAS_DISABLED",
              "READ_REPLICAS_ENABLED"
            ]
          },
          "customerManagedKey": {
            "description": "Optional. The KMS key reference that the customer provides when trying to create the instance.",
            "type": "string"
          },
          "persistenceConfig": {
            "description": "Optional. Persistence configuration parameters",
            "$ref": "PersistenceConfig"
          },
          "suspensionReasons": {
            "description": "Optional. reasons that causes instance in \"SUSPENDED\" state.",
            "type": "array",
            "items": {
              "type": "string",
              "enumDescriptions": [
                "Not set.",
                "Something wrong with the CMEK key provided by customer."
              ],
              "enum": [
                "SUSPENSION_REASON_UNSPECIFIED",
                "CUSTOMER_MANAGED_KEY_ISSUE"
              ]
            }
          },
          "maintenanceVersion": {
            "description": "Optional. The self service update maintenance version. The version is date based such as \"20210712_00_00\".",
            "type": "string"
          },
          "availableMaintenanceVersions": {
            "description": "Optional. The available maintenance versions that an instance could update to.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "satisfiesPzs": {
            "description": "Optional. Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Optional. Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "tags": {
            "description": "Optional. Input only. Immutable. Tag keys/values directly bound to this resource. For example: \"123/environment\": \"production\", \"123/costCenter\": \"marketing\"",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.instances.patch",
      "resource": "projects.locations.instances",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the metadata and configuration of a specific Redis instance. Completed longrunning.Operation will contain the new instance object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to location_id and alternative_location_id fields for more details.",
          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from Instance: * `displayName` * `labels` * `memorySizeGb` * `redisConfig` * `replica_count`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "Instance",
      "body_schema": {
        "id": "Instance",
        "description": "A Memorystore for Redis instance.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to location_id and alternative_location_id fields for more details.",
            "type": "string"
          },
          "displayName": {
            "description": "An arbitrary and optional user-provided name for the instance.",
            "type": "string"
          },
          "labels": {
            "description": "Resource labels to represent user provided metadata",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "locationId": {
            "description": "Optional. The zone where the instance will be provisioned. If not provided, the service will choose a zone from the specified region for the instance. For standard tier, additional nodes will be added across multiple zones for protection against zonal failures. If specified, at least one node will be provisioned in this zone.",
            "type": "string"
          },
          "alternativeLocationId": {
            "description": "Optional. If specified, at least one node will be provisioned in this zone in addition to the zone specified in location_id. Only applicable to standard tier. If provided, it must be a different zone from the one provided in [location_id]. Additional nodes beyond the first 2 will be placed in zones selected by the service.",
            "type": "string"
          },
          "redisVersion": {
            "description": "Optional. The version of Redis software. If not provided, the default version will be used. Currently, the supported values are: * `REDIS_3_2` for Redis 3.2 compatibility * `REDIS_4_0` for Redis 4.0 compatibility * `REDIS_5_0` for Redis 5.0 compatibility * `REDIS_6_X` for Redis 6.x compatibility * `REDIS_7_0` for Redis 7.0 compatibility (default) * `REDIS_7_2` for Redis 7.2 compatibility",
            "type": "string"
          },
          "reservedIpRange": {
            "description": "Optional. For DIRECT_PEERING mode, the CIDR range of internal addresses that are reserved for this instance. Range must be unique and non-overlapping with existing subnets in an authorized network. For PRIVATE_SERVICE_ACCESS mode, the name of one allocated IP address ranges associated with this private service access connection. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. For READ_REPLICAS_ENABLED the default block size is /28.",
            "type": "string"
          },
          "secondaryIpRange": {
            "description": "Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or \"auto\". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address range associated with the private service access connection, or \"auto\".",
            "type": "string"
          },
          "host": {
            "description": "Output only. Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.",
            "readOnly": true,
            "type": "string"
          },
          "port": {
            "description": "Output only. The port number of the exposed Redis endpoint.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "currentLocationId": {
            "description": "Output only. The current zone where the Redis primary node is located. In basic tier, this will always be the same as [location_id]. In standard tier, this can be the zone of any node in the instance.",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time the instance was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "state": {
            "description": "Output only. The current state of this instance.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "Redis instance is being created.",
              "Redis instance has been created and is fully usable.",
              "Redis instance configuration is being updated. Certain kinds of updates may cause the instance to become unusable while the update is in progress.",
              "Redis instance is being deleted.",
              "Redis instance is being repaired and may be unusable.",
              "Maintenance is being performed on this Redis instance.",
              "Redis instance is importing data (availability may be affected).",
              "Redis instance is failing over (availability may be affected)."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "READY",
              "UPDATING",
              "DELETING",
              "REPAIRING",
              "MAINTENANCE",
              "IMPORTING",
              "FAILING_OVER"
            ]
          },
          "statusMessage": {
            "description": "Output only. Additional information about the current status of this instance, if available.",
            "readOnly": true,
            "type": "string"
          },
          "redisConfigs": {
            "description": "Optional. Redis configuration parameters, according to http://redis.io/topics/config. Currently, the only supported parameters are: Redis version 3.2 and newer: * maxmemory-policy * notify-keyspace-events Redis version 4.0 and newer: * activedefrag * lfu-decay-time * lfu-log-factor * maxmemory-gb Redis version 5.0 and newer: * stream-node-max-bytes * stream-node-max-entries",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "tier": {
            "description": "Required. The service tier of the instance.",
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "BASIC tier: standalone instance",
              "STANDARD_HA tier: highly available primary/replica instances"
            ],
            "enum": [
              "TIER_UNSPECIFIED",
              "BASIC",
              "STANDARD_HA"
            ]
          },
          "memorySizeGb": {
            "description": "Required. Redis memory size in GiB.",
            "type": "integer",
            "format": "int32"
          },
          "authorizedNetwork": {
            "description": "Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/vpc/docs/vpc) to which the instance is connected. If left unspecified, the `default` network will be used.",
            "type": "string"
          },
          "persistenceIamIdentity": {
            "description": "Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is \"serviceAccount:\". The value may change over time for a given instance so should be checked before each import/export operation.",
            "readOnly": true,
            "type": "string"
          },
          "connectMode": {
            "description": "Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.",
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "Connect via direct peering to the Memorystore for Redis hosted service.",
              "Connect your Memorystore for Redis instance using Private Service Access. Private services access provides an IP address range for multiple Google Cloud services, including Memorystore."
            ],
            "enum": [
              "CONNECT_MODE_UNSPECIFIED",
              "DIRECT_PEERING",
              "PRIVATE_SERVICE_ACCESS"
            ]
          },
          "authEnabled": {
            "description": "Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to \"true\" AUTH is enabled on the instance. Default value is \"false\" meaning AUTH is disabled.",
            "type": "boolean"
          },
          "serverCaCerts": {
            "description": "Output only. List of server CA certificates for the instance.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "TlsCertificate"
            }
          },
          "transitEncryptionMode": {
            "description": "Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.",
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "Client to Server traffic encryption enabled with server authentication.",
              "TLS is disabled for the instance."
            ],
            "enum": [
              "TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
              "SERVER_AUTHENTICATION",
              "DISABLED"
            ]
          },
          "maintenancePolicy": {
            "description": "Optional. The maintenance policy for the instance. If not provided, maintenance events can be performed at any time.",
            "$ref": "MaintenancePolicy"
          },
          "maintenanceSchedule": {
            "description": "Output only. Date and time of upcoming maintenance events which have been scheduled.",
            "readOnly": true,
            "$ref": "MaintenanceSchedule"
          },
          "replicaCount": {
            "description": "Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default is 1. The valid value for basic tier is 0 and the default is also 0.",
            "type": "integer",
            "format": "int32"
          },
          "nodes": {
            "description": "Output only. Info per node.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "NodeInfo"
            }
          },
          "readEndpoint": {
            "description": "Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write requests must target 'host'.",
            "readOnly": true,
            "type": "string"
          },
          "readEndpointPort": {
            "description": "Output only. The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target 'port'.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "readReplicasMode": {
            "description": "Optional. Read replicas mode for the instance. Defaults to READ_REPLICAS_DISABLED.",
            "type": "string",
            "enumDescriptions": [
              "If not set, Memorystore Redis backend will default to READ_REPLICAS_DISABLED.",
              "If disabled, read endpoint will not be provided and the instance cannot scale up or down the number of replicas.",
              "If enabled, read endpoint will be provided and the instance can scale up and down the number of replicas. Not valid for basic tier."
            ],
            "enum": [
              "READ_REPLICAS_MODE_UNSPECIFIED",
              "READ_REPLICAS_DISABLED",
              "READ_REPLICAS_ENABLED"
            ]
          },
          "customerManagedKey": {
            "description": "Optional. The KMS key reference that the customer provides when trying to create the instance.",
            "type": "string"
          },
          "persistenceConfig": {
            "description": "Optional. Persistence configuration parameters",
            "$ref": "PersistenceConfig"
          },
          "suspensionReasons": {
            "description": "Optional. reasons that causes instance in \"SUSPENDED\" state.",
            "type": "array",
            "items": {
              "type": "string",
              "enumDescriptions": [
                "Not set.",
                "Something wrong with the CMEK key provided by customer."
              ],
              "enum": [
                "SUSPENSION_REASON_UNSPECIFIED",
                "CUSTOMER_MANAGED_KEY_ISSUE"
              ]
            }
          },
          "maintenanceVersion": {
            "description": "Optional. The self service update maintenance version. The version is date based such as \"20210712_00_00\".",
            "type": "string"
          },
          "availableMaintenanceVersions": {
            "description": "Optional. The available maintenance versions that an instance could update to.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "satisfiesPzs": {
            "description": "Optional. Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Optional. Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "tags": {
            "description": "Optional. Input only. Immutable. Tag keys/values directly bound to this resource. For example: \"123/environment\": \"production\", \"123/costCenter\": \"marketing\"",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.instances.upgrade",
      "resource": "projects.locations.instances",
      "action": "upgrade",
      "http_method": "POST",
      "path_template": "v1/{+name}:upgrade",
      "description": "Upgrades Redis instance to the newer Redis version specified in the request.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "UpgradeInstanceRequest",
      "body_schema": {
        "id": "UpgradeInstanceRequest",
        "description": "Request for UpgradeInstance.",
        "type": "object",
        "properties": {
          "redisVersion": {
            "description": "Required. Specifies the target version of Redis software to upgrade to.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.instances.import",
      "resource": "projects.locations.instances",
      "action": "import",
      "http_method": "POST",
      "path_template": "v1/{+name}:import",
      "description": "Import a Redis RDB snapshot file from Cloud Storage into a Redis instance. Redis may stop serving during this operation. Instance state will be IMPORTING for entire operation. When complete, the instance will contain only data from the imported file. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ImportInstanceRequest",
      "body_schema": {
        "id": "ImportInstanceRequest",
        "description": "Request for Import.",
        "type": "object",
        "properties": {
          "inputConfig": {
            "description": "Required. Specify data to be imported.",
            "$ref": "InputConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.instances.export",
      "resource": "projects.locations.instances",
      "action": "export",
      "http_method": "POST",
      "path_template": "v1/{+name}:export",
      "description": "Export Redis instance data into a Redis RDB format file in Cloud Storage. Redis will continue serving during this operation. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "ExportInstanceRequest",
      "body_schema": {
        "id": "ExportInstanceRequest",
        "description": "Request for Export.",
        "type": "object",
        "properties": {
          "outputConfig": {
            "description": "Required. Specify data to be exported.",
            "$ref": "OutputConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.instances.failover",
      "resource": "projects.locations.instances",
      "action": "failover",
      "http_method": "POST",
      "path_template": "v1/{+name}:failover",
      "description": "Initiates a failover of the primary node to current replica node for a specific STANDARD tier Cloud Memorystore for Redis instance.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "FailoverInstanceRequest",
      "body_schema": {
        "id": "FailoverInstanceRequest",
        "description": "Request for Failover.",
        "type": "object",
        "properties": {
          "dataProtectionMode": {
            "description": "Optional. Available data protection modes that the user can choose. If it's unspecified, data protection mode will be LIMITED_DATA_LOSS by default.",
            "type": "string",
            "enumDescriptions": [
              "Defaults to LIMITED_DATA_LOSS if a data protection mode is not specified.",
              "Instance failover will be protected with data loss control. More specifically, the failover will only be performed if the current replication offset diff between primary and replica is under a certain threshold.",
              "Instance failover will be performed without data loss control."
            ],
            "enum": [
              "DATA_PROTECTION_MODE_UNSPECIFIED",
              "LIMITED_DATA_LOSS",
              "FORCE_DATA_LOSS"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.instances.delete",
      "resource": "projects.locations.instances",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a specific Redis instance. Instance stops serving and data is deleted.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    },
    {
      "operation_id": "redis.projects.locations.instances.rescheduleMaintenance",
      "resource": "projects.locations.instances",
      "action": "rescheduleMaintenance",
      "http_method": "POST",
      "path_template": "v1/{+name}:rescheduleMaintenance",
      "description": "Reschedule maintenance for a given instance in a given project and location.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "RescheduleMaintenanceRequest",
      "body_schema": {
        "id": "RescheduleMaintenanceRequest",
        "description": "Request for RescheduleMaintenance.",
        "type": "object",
        "properties": {
          "rescheduleType": {
            "description": "Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well.",
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "If the user wants to schedule the maintenance to happen now.",
              "If the user wants to use the existing maintenance policy to find the next available window.",
              "If the user wants to reschedule the maintenance to a specific time."
            ],
            "enum": [
              "RESCHEDULE_TYPE_UNSPECIFIED",
              "IMMEDIATE",
              "NEXT_AVAILABLE_WINDOW",
              "SPECIFIC_TIME"
            ]
          },
          "scheduleTime": {
            "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example `2012-11-15T16:19:00.094Z`.",
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "Operation"
    }
  ]
}