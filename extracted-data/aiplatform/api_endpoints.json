{
  "service": "aiplatform",
  "version": "v1",
  "base_url": "https://aiplatform.googleapis.com/",
  "total_endpoints": 630,
  "endpoints": [
    {
      "operation_id": "aiplatform.datasets.create",
      "resource": "datasets",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/datasets",
      "description": "Creates a Dataset.",
      "required_params": [],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the Dataset in. Format: `projects/{project}/locations/{location}`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Dataset",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Dataset",
        "description": "A collection of DataItems and Annotations on them.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Identifier. The resource name of the Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the Dataset.",
            "type": "string"
          },
          "metadataSchemaUri": {
            "description": "Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.",
            "type": "string"
          },
          "metadata": {
            "description": "Required. Additional information about the Dataset.",
            "type": "any"
          },
          "dataItemCount": {
            "description": "Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "createTime": {
            "description": "Output only. Timestamp when this Dataset was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Dataset was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Dataset: * \"aiplatform.googleapis.com/dataset_metadata_schema\": output only, its value is the metadata_schema's title.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "savedQueries": {
            "description": "All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SavedQuery"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "metadataArtifact": {
            "description": "Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.",
            "readOnly": true,
            "type": "string"
          },
          "modelReference": {
            "description": "Optional. Reference to the public base model last used by the dataset. Only set for prompt datasets.",
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.datasets.get",
      "resource": "datasets",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a Dataset.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Dataset resource.",
          "pattern": "^datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Dataset"
    },
    {
      "operation_id": "aiplatform.datasets.patch",
      "resource": "datasets",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a Dataset.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. Identifier. The resource name of the Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see google.protobuf.FieldMask. Updatable fields: * `display_name` * `description` * `labels`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Dataset",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Dataset",
        "description": "A collection of DataItems and Annotations on them.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Identifier. The resource name of the Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the Dataset.",
            "type": "string"
          },
          "metadataSchemaUri": {
            "description": "Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.",
            "type": "string"
          },
          "metadata": {
            "description": "Required. Additional information about the Dataset.",
            "type": "any"
          },
          "dataItemCount": {
            "description": "Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "createTime": {
            "description": "Output only. Timestamp when this Dataset was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Dataset was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Dataset: * \"aiplatform.googleapis.com/dataset_metadata_schema\": output only, its value is the metadata_schema's title.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "savedQueries": {
            "description": "All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SavedQuery"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "metadataArtifact": {
            "description": "Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.",
            "readOnly": true,
            "type": "string"
          },
          "modelReference": {
            "description": "Optional. Reference to the public base model last used by the dataset. Only set for prompt datasets.",
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Dataset"
    },
    {
      "operation_id": "aiplatform.datasets.list",
      "resource": "datasets",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/datasets",
      "description": "Lists Datasets in a Location.",
      "required_params": [],
      "parameters": {
        "parent": {
          "description": "Required. The name of the Dataset's parent resource. Format: `projects/{project}/locations/{location}`",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`: supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListDatasetsResponse"
    },
    {
      "operation_id": "aiplatform.datasets.delete",
      "resource": "datasets",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Dataset.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Dataset to delete. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.datasets.datasetVersions.create",
      "resource": "datasets.datasetVersions",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/datasetVersions",
      "description": "Create a version from a Dataset.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DatasetVersion",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DatasetVersion",
        "description": "Describes the dataset version.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Identifier. The resource name of the DatasetVersion. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this DatasetVersion was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this DatasetVersion was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "bigQueryDatasetName": {
            "description": "Output only. Name of the associated BigQuery dataset.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The user-defined name of the DatasetVersion. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "metadata": {
            "description": "Required. Output only. Additional information about the DatasetVersion.",
            "readOnly": true,
            "type": "any"
          },
          "modelReference": {
            "description": "Output only. Reference to the public base model last used by the dataset version. Only set for prompt dataset versions.",
            "readOnly": true,
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.datasets.datasetVersions.patch",
      "resource": "datasets.datasetVersions",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a DatasetVersion.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. Identifier. The resource name of the DatasetVersion. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
          "pattern": "^datasets/[^/]+/datasetVersions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see google.protobuf.FieldMask. Updatable fields: * `display_name`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DatasetVersion",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DatasetVersion",
        "description": "Describes the dataset version.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Identifier. The resource name of the DatasetVersion. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this DatasetVersion was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this DatasetVersion was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "bigQueryDatasetName": {
            "description": "Output only. Name of the associated BigQuery dataset.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The user-defined name of the DatasetVersion. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "metadata": {
            "description": "Required. Output only. Additional information about the DatasetVersion.",
            "readOnly": true,
            "type": "any"
          },
          "modelReference": {
            "description": "Output only. Reference to the public base model last used by the dataset version. Only set for prompt dataset versions.",
            "readOnly": true,
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1DatasetVersion"
    },
    {
      "operation_id": "aiplatform.datasets.datasetVersions.delete",
      "resource": "datasets.datasetVersions",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Dataset version.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Dataset version to delete. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
          "pattern": "^datasets/[^/]+/datasetVersions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.datasets.datasetVersions.get",
      "resource": "datasets.datasetVersions",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a Dataset version.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Dataset version to delete. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
          "pattern": "^datasets/[^/]+/datasetVersions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1DatasetVersion"
    },
    {
      "operation_id": "aiplatform.datasets.datasetVersions.list",
      "resource": "datasets.datasetVersions",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/datasetVersions",
      "description": "Lists DatasetVersions in a Dataset.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Dataset to list DatasetVersions from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Optional. Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "Optional. A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListDatasetVersionsResponse"
    },
    {
      "operation_id": "aiplatform.datasets.datasetVersions.restore",
      "resource": "datasets.datasetVersions",
      "action": "restore",
      "http_method": "GET",
      "path_template": "v1/{+name}:restore",
      "description": "Restores a dataset version.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the DatasetVersion resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
          "pattern": "^datasets/[^/]+/datasetVersions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.updateCacheConfig",
      "resource": "projects",
      "action": "updateCacheConfig",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a cache config.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. Name of the cache config. Format: - `projects/{project}/cacheConfig`.",
          "pattern": "^projects/[^/]+/cacheConfig$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CacheConfig",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CacheConfig",
        "description": "Config of GenAI caching features. This is a singleton resource.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. Name of the cache config. Format: - `projects/{project}/cacheConfig`.",
            "type": "string"
          },
          "disableCache": {
            "description": "If set to true, disables GenAI caching. Otherwise caching is enabled.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.getCacheConfig",
      "resource": "projects",
      "action": "getCacheConfig",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a GenAI cache config.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. Name of the cache config. Format: - `projects/{project}/cacheConfig`.",
          "pattern": "^projects/[^/]+/cacheConfig$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CacheConfig"
    },
    {
      "operation_id": "aiplatform.projects.locations.list",
      "resource": "projects.locations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/locations",
      "description": "Lists information about the supported locations for this service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource that owns the locations collection, if applicable.",
          "pattern": "^projects/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return. If not set, the service selects a default.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
          "location": "query",
          "type": "string"
        },
        "extraLocationTypes": {
          "description": "Optional. A list of extra location types that should be used as conditions for controlling the visibility of the locations.",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudLocationListLocationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.get",
      "resource": "projects.locations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets information about a location.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Resource name for the location.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudLocationLocation"
    },
    {
      "operation_id": "aiplatform.projects.locations.evaluateInstances",
      "resource": "projects.locations",
      "action": "evaluateInstances",
      "http_method": "POST",
      "path_template": "v1/{+location}:evaluateInstances",
      "description": "Evaluates instances based on a given metric.",
      "required_params": [
        "location"
      ],
      "parameters": {
        "location": {
          "description": "Required. The resource name of the Location to evaluate the instances. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1EvaluateInstancesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1EvaluateInstancesRequest",
        "description": "Request message for EvaluationService.EvaluateInstances.",
        "type": "object",
        "properties": {
          "exactMatchInput": {
            "description": "Auto metric instances. Instances and metric spec for exact match metric.",
            "$ref": "GoogleCloudAiplatformV1ExactMatchInput"
          },
          "bleuInput": {
            "description": "Instances and metric spec for bleu metric.",
            "$ref": "GoogleCloudAiplatformV1BleuInput"
          },
          "rougeInput": {
            "description": "Instances and metric spec for rouge metric.",
            "$ref": "GoogleCloudAiplatformV1RougeInput"
          },
          "fluencyInput": {
            "description": "LLM-based metric instance. General text generation metrics, applicable to other categories. Input for fluency metric.",
            "$ref": "GoogleCloudAiplatformV1FluencyInput"
          },
          "coherenceInput": {
            "description": "Input for coherence metric.",
            "$ref": "GoogleCloudAiplatformV1CoherenceInput"
          },
          "safetyInput": {
            "description": "Input for safety metric.",
            "$ref": "GoogleCloudAiplatformV1SafetyInput"
          },
          "groundednessInput": {
            "description": "Input for groundedness metric.",
            "$ref": "GoogleCloudAiplatformV1GroundednessInput"
          },
          "fulfillmentInput": {
            "description": "Input for fulfillment metric.",
            "$ref": "GoogleCloudAiplatformV1FulfillmentInput"
          },
          "summarizationQualityInput": {
            "description": "Input for summarization quality metric.",
            "$ref": "GoogleCloudAiplatformV1SummarizationQualityInput"
          },
          "pairwiseSummarizationQualityInput": {
            "description": "Input for pairwise summarization quality metric.",
            "$ref": "GoogleCloudAiplatformV1PairwiseSummarizationQualityInput"
          },
          "summarizationHelpfulnessInput": {
            "description": "Input for summarization helpfulness metric.",
            "$ref": "GoogleCloudAiplatformV1SummarizationHelpfulnessInput"
          },
          "summarizationVerbosityInput": {
            "description": "Input for summarization verbosity metric.",
            "$ref": "GoogleCloudAiplatformV1SummarizationVerbosityInput"
          },
          "questionAnsweringQualityInput": {
            "description": "Input for question answering quality metric.",
            "$ref": "GoogleCloudAiplatformV1QuestionAnsweringQualityInput"
          },
          "pairwiseQuestionAnsweringQualityInput": {
            "description": "Input for pairwise question answering quality metric.",
            "$ref": "GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInput"
          },
          "questionAnsweringRelevanceInput": {
            "description": "Input for question answering relevance metric.",
            "$ref": "GoogleCloudAiplatformV1QuestionAnsweringRelevanceInput"
          },
          "questionAnsweringHelpfulnessInput": {
            "description": "Input for question answering helpfulness metric.",
            "$ref": "GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInput"
          },
          "questionAnsweringCorrectnessInput": {
            "description": "Input for question answering correctness metric.",
            "$ref": "GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInput"
          },
          "pointwiseMetricInput": {
            "description": "Input for pointwise metric.",
            "$ref": "GoogleCloudAiplatformV1PointwiseMetricInput"
          },
          "pairwiseMetricInput": {
            "description": "Input for pairwise metric.",
            "$ref": "GoogleCloudAiplatformV1PairwiseMetricInput"
          },
          "toolCallValidInput": {
            "description": "Tool call metric instances. Input for tool call valid metric.",
            "$ref": "GoogleCloudAiplatformV1ToolCallValidInput"
          },
          "toolNameMatchInput": {
            "description": "Input for tool name match metric.",
            "$ref": "GoogleCloudAiplatformV1ToolNameMatchInput"
          },
          "toolParameterKeyMatchInput": {
            "description": "Input for tool parameter key match metric.",
            "$ref": "GoogleCloudAiplatformV1ToolParameterKeyMatchInput"
          },
          "toolParameterKvMatchInput": {
            "description": "Input for tool parameter key value match metric.",
            "$ref": "GoogleCloudAiplatformV1ToolParameterKVMatchInput"
          },
          "cometInput": {
            "description": "Translation metrics. Input for Comet metric.",
            "$ref": "GoogleCloudAiplatformV1CometInput"
          },
          "metricxInput": {
            "description": "Input for Metricx metric.",
            "$ref": "GoogleCloudAiplatformV1MetricxInput"
          },
          "trajectoryExactMatchInput": {
            "description": "Input for trajectory exact match metric.",
            "$ref": "GoogleCloudAiplatformV1TrajectoryExactMatchInput"
          },
          "trajectoryInOrderMatchInput": {
            "description": "Input for trajectory in order match metric.",
            "$ref": "GoogleCloudAiplatformV1TrajectoryInOrderMatchInput"
          },
          "trajectoryAnyOrderMatchInput": {
            "description": "Input for trajectory match any order metric.",
            "$ref": "GoogleCloudAiplatformV1TrajectoryAnyOrderMatchInput"
          },
          "trajectoryPrecisionInput": {
            "description": "Input for trajectory precision metric.",
            "$ref": "GoogleCloudAiplatformV1TrajectoryPrecisionInput"
          },
          "trajectoryRecallInput": {
            "description": "Input for trajectory recall metric.",
            "$ref": "GoogleCloudAiplatformV1TrajectoryRecallInput"
          },
          "trajectorySingleToolUseInput": {
            "description": "Input for trajectory single tool use metric.",
            "$ref": "GoogleCloudAiplatformV1TrajectorySingleToolUseInput"
          },
          "rubricBasedInstructionFollowingInput": {
            "description": "Rubric Based Instruction Following metric.",
            "$ref": "GoogleCloudAiplatformV1RubricBasedInstructionFollowingInput"
          },
          "autoraterConfig": {
            "description": "Optional. Autorater config used for evaluation.",
            "$ref": "GoogleCloudAiplatformV1AutoraterConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1EvaluateInstancesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.evaluateDataset",
      "resource": "projects.locations",
      "action": "evaluateDataset",
      "http_method": "POST",
      "path_template": "v1/{+location}:evaluateDataset",
      "description": "Evaluates a dataset based on a set of given metrics.",
      "required_params": [
        "location"
      ],
      "parameters": {
        "location": {
          "description": "Required. The resource name of the Location to evaluate the dataset. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1EvaluateDatasetRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1EvaluateDatasetRequest",
        "description": "Request message for EvaluationService.EvaluateDataset.",
        "type": "object",
        "properties": {
          "dataset": {
            "description": "Required. The dataset used for evaluation.",
            "$ref": "GoogleCloudAiplatformV1EvaluationDataset"
          },
          "metrics": {
            "description": "Required. The metrics used for evaluation.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Metric"
            }
          },
          "outputConfig": {
            "description": "Required. Config for evaluation output.",
            "$ref": "GoogleCloudAiplatformV1OutputConfig"
          },
          "autoraterConfig": {
            "description": "Optional. Autorater config used for evaluation. Currently only publisher Gemini models are supported. Format: `projects/{PROJECT}/locations/{LOCATION}/publishers/google/models/{MODEL}.`",
            "$ref": "GoogleCloudAiplatformV1AutoraterConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploy",
      "resource": "projects.locations",
      "action": "deploy",
      "http_method": "POST",
      "path_template": "v1/{+destination}:deploy",
      "description": "Deploys a model to a new endpoint.",
      "required_params": [
        "destination"
      ],
      "parameters": {
        "destination": {
          "description": "Required. The resource name of the Location to deploy the model in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DeployRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DeployRequest",
        "description": "Request message for ModelGardenService.Deploy.",
        "type": "object",
        "properties": {
          "publisherModelName": {
            "description": "The Model Garden model to deploy. Format: `publishers/{publisher}/models/{publisher_model}@{version_id}`, or `publishers/hf-{hugging-face-author}/models/{hugging-face-model-name}@001`.",
            "type": "string"
          },
          "huggingFaceModelId": {
            "description": "The Hugging Face model to deploy. Format: Hugging Face model ID like `google/gemma-2-2b-it`.",
            "type": "string"
          },
          "modelConfig": {
            "description": "Optional. The model config to use for the deployment. If not specified, the default model config will be used.",
            "$ref": "GoogleCloudAiplatformV1DeployRequestModelConfig"
          },
          "endpointConfig": {
            "description": "Optional. The endpoint config to use for the deployment. If not specified, the default endpoint config will be used.",
            "$ref": "GoogleCloudAiplatformV1DeployRequestEndpointConfig"
          },
          "deployConfig": {
            "description": "Optional. The deploy config to use for the deployment. If not specified, the default deploy config will be used.",
            "$ref": "GoogleCloudAiplatformV1DeployRequestDeployConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.updateRagEngineConfig",
      "resource": "projects.locations",
      "action": "updateRagEngineConfig",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a RagEngineConfig.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. The name of the RagEngineConfig. Format: `projects/{project}/locations/{location}/ragEngineConfig`",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragEngineConfig$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1RagEngineConfig",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1RagEngineConfig",
        "description": "Config for RagEngine.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The name of the RagEngineConfig. Format: `projects/{project}/locations/{location}/ragEngineConfig`",
            "type": "string"
          },
          "ragManagedDbConfig": {
            "description": "The config of the RagManagedDb used by RagEngine.",
            "$ref": "GoogleCloudAiplatformV1RagManagedDbConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.getRagEngineConfig",
      "resource": "projects.locations",
      "action": "getRagEngineConfig",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a RagEngineConfig.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the RagEngineConfig resource. Format: `projects/{project}/locations/{location}/ragEngineConfig`",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragEngineConfig$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1RagEngineConfig"
    },
    {
      "operation_id": "aiplatform.projects.locations.retrieveContexts",
      "resource": "projects.locations",
      "action": "retrieveContexts",
      "http_method": "POST",
      "path_template": "v1/{+parent}:retrieveContexts",
      "description": "Retrieves relevant contexts for a query.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location from which to retrieve RagContexts. The users must have permission to make a call in the project. Format: `projects/{project}/locations/{location}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1RetrieveContextsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1RetrieveContextsRequest",
        "description": "Request message for VertexRagService.RetrieveContexts.",
        "type": "object",
        "properties": {
          "vertexRagStore": {
            "description": "The data source for Vertex RagStore.",
            "$ref": "GoogleCloudAiplatformV1RetrieveContextsRequestVertexRagStore"
          },
          "query": {
            "description": "Required. Single RAG retrieve query.",
            "$ref": "GoogleCloudAiplatformV1RagQuery"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1RetrieveContextsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.augmentPrompt",
      "resource": "projects.locations",
      "action": "augmentPrompt",
      "http_method": "POST",
      "path_template": "v1/{+parent}:augmentPrompt",
      "description": "Given an input prompt, it returns augmented prompt from vertex rag store to guide LLM towards generating grounded responses.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location from which to augment prompt. The users must have permission to make a call in the project. Format: `projects/{project}/locations/{location}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1AugmentPromptRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1AugmentPromptRequest",
        "description": "Request message for AugmentPrompt.",
        "type": "object",
        "properties": {
          "vertexRagStore": {
            "description": "Optional. Retrieves contexts from the Vertex RagStore.",
            "$ref": "GoogleCloudAiplatformV1VertexRagStore"
          },
          "contents": {
            "description": "Optional. Input content to augment, only text format is supported for now.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "model": {
            "description": "Optional. Metadata of the backend deployed model.",
            "$ref": "GoogleCloudAiplatformV1AugmentPromptRequestModel"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1AugmentPromptResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.corroborateContent",
      "resource": "projects.locations",
      "action": "corroborateContent",
      "http_method": "POST",
      "path_template": "v1/{+parent}:corroborateContent",
      "description": "Given an input text, it returns a score that evaluates the factuality of the text. It also extracts and returns claims from the text and provides supporting facts.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location from which to corroborate text. The users must have permission to make a call in the project. Format: `projects/{project}/locations/{location}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CorroborateContentRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CorroborateContentRequest",
        "description": "Request message for CorroborateContent.",
        "type": "object",
        "properties": {
          "content": {
            "description": "Optional. Input content to corroborate, only text format is supported for now.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "facts": {
            "description": "Optional. Facts used to generate the text can also be used to corroborate the text.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Fact"
            }
          },
          "parameters": {
            "description": "Optional. Parameters that can be set to override default settings per request.",
            "$ref": "GoogleCloudAiplatformV1CorroborateContentRequestParameters"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CorroborateContentResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.setIamPolicy",
      "resource": "projects.locations.featurestores",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleIamV1SetIamPolicyRequest",
      "body_schema": {
        "id": "GoogleIamV1SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "GoogleIamV1Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.getIamPolicy",
      "resource": "projects.locations.featurestores",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.testIamPermissions",
      "resource": "projects.locations.featurestores",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1TestIamPermissionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.create",
      "resource": "projects.locations.featurestores",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/featurestores",
      "description": "Creates a new Featurestore in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create Featurestores. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "featurestoreId": {
          "description": "Required. The ID to use for this Featurestore, which will become the final component of the Featurestore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Featurestore",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Featurestore",
        "description": "Vertex AI Feature Store provides a centralized repository for organizing, storing, and serving ML features. The Featurestore is a top-level container for your features and their values.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this Featurestore was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Featurestore was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "onlineServingConfig": {
            "description": "Optional. Config for online storage resources. The field should not co-exist with the field of `OnlineStoreReplicationConfig`. If both of it and OnlineStoreReplicationConfig are unset, the feature store will not have an online store and cannot be used for online serving.",
            "$ref": "GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig"
          },
          "state": {
            "description": "Output only. State of the featurestore.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Default value. This value is unused.",
              "State when the featurestore configuration is not being updated and the fields reflect the current configuration of the featurestore. The featurestore is usable in this state.",
              "The state of the featurestore configuration when it is being updated. During an update, the fields reflect either the original configuration or the updated configuration of the featurestore. For example, `online_serving_config.fixed_node_count` can take minutes to update. While the update is in progress, the featurestore is in the UPDATING state, and the value of `fixed_node_count` can be the original value or the updated value, depending on the progress of the operation. Until the update completes, the actual number of nodes can still be the original value of `fixed_node_count`. The featurestore is still usable in this state."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "STABLE",
              "UPDATING"
            ]
          },
          "onlineStorageTtlDays": {
            "description": "Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days",
            "type": "integer",
            "format": "int32"
          },
          "encryptionSpec": {
            "description": "Optional. Customer-managed encryption key spec for data storage. If set, both of the online and offline data storage will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.get",
      "resource": "projects.locations.featurestores",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single Featurestore.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Featurestore resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Featurestore"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.list",
      "resource": "projects.locations.featurestores",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/featurestores",
      "description": "Lists Featurestores in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list Featurestores. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the featurestores that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `online_serving_config.fixed_node_count`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > \"2020-01-01\" OR update_time > \"2020-01-01\"` Featurestores created or updated after 2020-01-01. * `labels.env = \"prod\"` Featurestores with label \"env\" set to \"prod\".",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of Featurestores to return. The service may return fewer than this value. If unspecified, at most 100 Featurestores will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous FeaturestoreService.ListFeaturestores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeaturestores must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported Fields: * `create_time` * `update_time` * `online_serving_config.fixed_node_count`",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListFeaturestoresResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.patch",
      "resource": "projects.locations.featurestores",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single Featurestore.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Field mask is used to specify the fields to be overwritten in the Featurestore resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then only the non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override all fields. Updatable fields: * `labels` * `online_serving_config.fixed_node_count` * `online_serving_config.scaling` * `online_storage_ttl_days`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Featurestore",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Featurestore",
        "description": "Vertex AI Feature Store provides a centralized repository for organizing, storing, and serving ML features. The Featurestore is a top-level container for your features and their values.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this Featurestore was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Featurestore was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "onlineServingConfig": {
            "description": "Optional. Config for online storage resources. The field should not co-exist with the field of `OnlineStoreReplicationConfig`. If both of it and OnlineStoreReplicationConfig are unset, the feature store will not have an online store and cannot be used for online serving.",
            "$ref": "GoogleCloudAiplatformV1FeaturestoreOnlineServingConfig"
          },
          "state": {
            "description": "Output only. State of the featurestore.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Default value. This value is unused.",
              "State when the featurestore configuration is not being updated and the fields reflect the current configuration of the featurestore. The featurestore is usable in this state.",
              "The state of the featurestore configuration when it is being updated. During an update, the fields reflect either the original configuration or the updated configuration of the featurestore. For example, `online_serving_config.fixed_node_count` can take minutes to update. While the update is in progress, the featurestore is in the UPDATING state, and the value of `fixed_node_count` can be the original value or the updated value, depending on the progress of the operation. Until the update completes, the actual number of nodes can still be the original value of `fixed_node_count`. The featurestore is still usable in this state."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "STABLE",
              "UPDATING"
            ]
          },
          "onlineStorageTtlDays": {
            "description": "Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days",
            "type": "integer",
            "format": "int32"
          },
          "encryptionSpec": {
            "description": "Optional. Customer-managed encryption key spec for data storage. If set, both of the online and offline data storage will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.delete",
      "resource": "projects.locations.featurestores",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single Featurestore. The Featurestore must not contain any EntityTypes or `force` must be set to true for the request to succeed.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Featurestore to be deleted. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "If set to true, any EntityTypes and Features for this Featurestore will also be deleted. (Otherwise, the request will only work if the Featurestore has no EntityTypes.)",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.batchReadFeatureValues",
      "resource": "projects.locations.featurestores",
      "action": "batchReadFeatureValues",
      "http_method": "POST",
      "path_template": "v1/{+featurestore}:batchReadFeatureValues",
      "description": "Batch reads Feature values from a Featurestore. This API enables batch reading Feature values, where each read instance in the batch may read Feature values of entities from one or more EntityTypes. Point-in-time correctness is guaranteed for Feature values of each read instance as of each instance's read timestamp.",
      "required_params": [
        "featurestore"
      ],
      "parameters": {
        "featurestore": {
          "description": "Required. The resource name of the Featurestore from which to query Feature values. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchReadFeatureValuesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchReadFeatureValuesRequest",
        "description": "Request message for FeaturestoreService.BatchReadFeatureValues.",
        "type": "object",
        "properties": {
          "csvReadInstances": {
            "description": "Each read instance consists of exactly one read timestamp and one or more entity IDs identifying entities of the corresponding EntityTypes whose Features are requested. Each output instance contains Feature values of requested entities concatenated together as of the read time. An example read instance may be `foo_entity_id, bar_entity_id, 2020-01-01T10:00:00.123Z`. An example output instance may be `foo_entity_id, bar_entity_id, 2020-01-01T10:00:00.123Z, foo_entity_feature1_value, bar_entity_feature2_value`. Timestamp in each read instance must be millisecond-aligned. `csv_read_instances` are read instances stored in a plain-text CSV file. The header should be: [ENTITY_TYPE_ID1], [ENTITY_TYPE_ID2], ..., timestamp The columns can be in any order. Values in the timestamp column must use the RFC 3339 format, e.g. `2012-07-30T10:43:17.123Z`.",
            "$ref": "GoogleCloudAiplatformV1CsvSource"
          },
          "bigqueryReadInstances": {
            "description": "Similar to csv_read_instances, but from BigQuery source.",
            "$ref": "GoogleCloudAiplatformV1BigQuerySource"
          },
          "destination": {
            "description": "Required. Specifies output location and format.",
            "$ref": "GoogleCloudAiplatformV1FeatureValueDestination"
          },
          "passThroughFields": {
            "description": "When not empty, the specified fields in the *_read_instances source will be joined as-is in the output, in addition to those fields from the Featurestore Entity. For BigQuery source, the type of the pass-through values will be automatically inferred. For CSV source, the pass-through values will be passed as opaque bytes.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1BatchReadFeatureValuesRequestPassThroughField"
            }
          },
          "entityTypeSpecs": {
            "description": "Required. Specifies EntityType grouping Features to read values of and settings.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1BatchReadFeatureValuesRequestEntityTypeSpec"
            }
          },
          "startTime": {
            "description": "Optional. Excludes Feature values with feature generation timestamp before this timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp, if present, must not have higher than millisecond precision.",
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.searchFeatures",
      "resource": "projects.locations.featurestores",
      "action": "searchFeatures",
      "http_method": "GET",
      "path_template": "v1/{+location}/featurestores:searchFeatures",
      "description": "Searches Features matching a query in a given project.",
      "required_params": [
        "location"
      ],
      "parameters": {
        "location": {
          "description": "Required. The resource name of the Location to search Features. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "query": {
          "description": "Query string that is a conjunction of field-restricted queries and/or field-restricted filters. Field-restricted queries and filters can be combined using `AND` to form a conjunction. A field query is in the form FIELD:QUERY. This implicitly checks if QUERY exists as a substring within Feature's FIELD. The QUERY and the FIELD are converted to a sequence of words (i.e. tokens) for comparison. This is done by: * Removing leading/trailing whitespace and tokenizing the search value. Characters that are not one of alphanumeric `[a-zA-Z0-9]`, underscore `_`, or asterisk `*` are treated as delimiters for tokens. `*` is treated as a wildcard that matches characters within a token. * Ignoring case. * Prepending an asterisk to the first and appending an asterisk to the last token in QUERY. A QUERY must be either a singular token or a phrase. A phrase is one or multiple words enclosed in double quotation marks (\"). With phrases, the order of the words is important. Words in the phrase must be matching in order and consecutively. Supported FIELDs for field-restricted queries: * `feature_id` * `description` * `entity_type_id` Examples: * `feature_id: foo` --> Matches a Feature with ID containing the substring `foo` (eg. `foo`, `foofeature`, `barfoo`). * `feature_id: foo*feature` --> Matches a Feature with ID containing the substring `foo*feature` (eg. `foobarfeature`). * `feature_id: foo AND description: bar` --> Matches a Feature with ID containing the substring `foo` and description containing the substring `bar`. Besides field queries, the following exact-match filters are supported. The exact-match filters do not support wildcards. Unlike field-restricted queries, exact-match filters are case-sensitive. * `feature_id`: Supports = comparisons. * `description`: Supports = comparisons. Multi-token filters should be enclosed in quotes. * `entity_type_id`: Supports = comparisons. * `value_type`: Supports = and != comparisons. * `labels`: Supports key-value equality as well as key presence. * `featurestore_id`: Supports = comparisons. Examples: * `description = \"foo bar\"` --> Any Feature with description exactly equal to `foo bar` * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with `env` as the key.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 100 Features will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous FeaturestoreService.SearchFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.SearchFeatures, except `page_size`, must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1SearchFeaturesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.setIamPolicy",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleIamV1SetIamPolicyRequest",
      "body_schema": {
        "id": "GoogleIamV1SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "GoogleIamV1Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.getIamPolicy",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.testIamPermissions",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1TestIamPermissionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.readFeatureValues",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "readFeatureValues",
      "http_method": "POST",
      "path_template": "v1/{+entityType}:readFeatureValues",
      "description": "Reads Feature values of a specific entity of an EntityType. For reading feature values of multiple entities of an EntityType, please use StreamingReadFeatureValues.",
      "required_params": [
        "entityType"
      ],
      "parameters": {
        "entityType": {
          "description": "Required. The resource name of the EntityType for the entity being read. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ReadFeatureValuesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ReadFeatureValuesRequest",
        "description": "Request message for FeaturestoreOnlineServingService.ReadFeatureValues.",
        "type": "object",
        "properties": {
          "entityId": {
            "description": "Required. ID for a specific entity. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`.",
            "type": "string"
          },
          "featureSelector": {
            "description": "Required. Selector choosing Features of the target EntityType.",
            "$ref": "GoogleCloudAiplatformV1FeatureSelector"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ReadFeatureValuesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.streamingReadFeatureValues",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "streamingReadFeatureValues",
      "http_method": "POST",
      "path_template": "v1/{+entityType}:streamingReadFeatureValues",
      "description": "Reads Feature values for multiple entities. Depending on their size, data for different entities may be broken up across multiple responses.",
      "required_params": [
        "entityType"
      ],
      "parameters": {
        "entityType": {
          "description": "Required. The resource name of the entities' type. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1StreamingReadFeatureValuesRequest",
        "description": "Request message for FeaturestoreOnlineServingService.StreamingReadFeatureValues.",
        "type": "object",
        "properties": {
          "entityIds": {
            "description": "Required. IDs of entities to read Feature values of. The maximum number of IDs is 100. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "featureSelector": {
            "description": "Required. Selector choosing Features of the target EntityType. Feature IDs will be deduplicated.",
            "$ref": "GoogleCloudAiplatformV1FeatureSelector"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ReadFeatureValuesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.writeFeatureValues",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "writeFeatureValues",
      "http_method": "POST",
      "path_template": "v1/{+entityType}:writeFeatureValues",
      "description": "Writes Feature values of one or more entities of an EntityType. The Feature values are merged into existing entities if any. The Feature values to be written must have timestamp within the online storage retention.",
      "required_params": [
        "entityType"
      ],
      "parameters": {
        "entityType": {
          "description": "Required. The resource name of the EntityType for the entities being written. Value format: `projects/{project}/locations/{location}/featurestores/ {featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1WriteFeatureValuesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1WriteFeatureValuesRequest",
        "description": "Request message for FeaturestoreOnlineServingService.WriteFeatureValues.",
        "type": "object",
        "properties": {
          "payloads": {
            "description": "Required. The entities to be written. Up to 100,000 feature values can be written across all `payloads`.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1WriteFeatureValuesPayload"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1WriteFeatureValuesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.create",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/entityTypes",
      "description": "Creates a new EntityType in a given Featurestore.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Featurestore to create EntityTypes. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "entityTypeId": {
          "description": "Required. The ID to use for the EntityType, which will become the final component of the EntityType's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a featurestore.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1EntityType",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1EntityType",
        "description": "An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.",
            "type": "string"
          },
          "description": {
            "description": "Optional. Description of the EntityType.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this EntityType was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this EntityType was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Optional. Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "monitoringConfig": {
            "description": "Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.",
            "$ref": "GoogleCloudAiplatformV1FeaturestoreMonitoringConfig"
          },
          "offlineStorageTtlDays": {
            "description": "Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.",
            "type": "integer",
            "format": "int32"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.get",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single EntityType.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the EntityType resource. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1EntityType"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.list",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/entityTypes",
      "description": "Lists EntityTypes in a given Featurestore.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Featurestore to list EntityTypes. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the EntityTypes that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\" OR update_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> EntityTypes having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any EntityType which has a label with 'env' as the key.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of EntityTypes to return. The service may return fewer than this value. If unspecified, at most 1000 EntityTypes will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous FeaturestoreService.ListEntityTypes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListEntityTypes must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `entity_type_id` * `create_time` * `update_time`",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListEntityTypesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.patch",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single EntityType.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Field mask is used to specify the fields to be overwritten in the EntityType resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then only the non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override all fields. Updatable fields: * `description` * `labels` * `monitoring_config.snapshot_analysis.disabled` * `monitoring_config.snapshot_analysis.monitoring_interval_days` * `monitoring_config.snapshot_analysis.staleness_days` * `monitoring_config.import_features_analysis.state` * `monitoring_config.import_features_analysis.anomaly_detection_baseline` * `monitoring_config.numerical_threshold_config.value` * `monitoring_config.categorical_threshold_config.value` * `offline_storage_ttl_days`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1EntityType",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1EntityType",
        "description": "An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.",
            "type": "string"
          },
          "description": {
            "description": "Optional. Description of the EntityType.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this EntityType was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this EntityType was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Optional. Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "monitoringConfig": {
            "description": "Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.",
            "$ref": "GoogleCloudAiplatformV1FeaturestoreMonitoringConfig"
          },
          "offlineStorageTtlDays": {
            "description": "Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.",
            "type": "integer",
            "format": "int32"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1EntityType"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.delete",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single EntityType. The EntityType must not have any Features or `force` must be set to true for the request to succeed.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the EntityType to be deleted. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "If set to true, any Features for this EntityType will also be deleted. (Otherwise, the request will only work if the EntityType has no Features.)",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.importFeatureValues",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "importFeatureValues",
      "http_method": "POST",
      "path_template": "v1/{+entityType}:importFeatureValues",
      "description": "Imports Feature values into the Featurestore from a source storage. The progress of the import is tracked by the returned operation. The imported features are guaranteed to be visible to subsequent read operations after the operation is marked as successfully done. If an import operation fails, the Feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same import request again and wait till the new operation returned is marked as successfully done. There are also scenarios where the caller can cause inconsistency. - Source data for import contains multiple distinct Feature values for the same entity ID and timestamp. - Source is modified during an import. This includes adding, updating, or removing source data and/or metadata. Examples of updating metadata include but are not limited to changing storage location, storage class, or retention policy. - Online serving cluster is under-provisioned.",
      "required_params": [
        "entityType"
      ],
      "parameters": {
        "entityType": {
          "description": "Required. The resource name of the EntityType grouping the Features for which values are being imported. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ImportFeatureValuesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ImportFeatureValuesRequest",
        "description": "Request message for FeaturestoreService.ImportFeatureValues.",
        "type": "object",
        "properties": {
          "avroSource": {
            "$ref": "GoogleCloudAiplatformV1AvroSource"
          },
          "bigquerySource": {
            "$ref": "GoogleCloudAiplatformV1BigQuerySource"
          },
          "csvSource": {
            "$ref": "GoogleCloudAiplatformV1CsvSource"
          },
          "featureTimeField": {
            "description": "Source column that holds the Feature timestamp for all Feature values in each entity.",
            "type": "string"
          },
          "featureTime": {
            "description": "Single Feature timestamp for all entities being imported. The timestamp must not have higher than millisecond precision.",
            "type": "string",
            "format": "google-datetime"
          },
          "entityIdField": {
            "description": "Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id.",
            "type": "string"
          },
          "featureSpecs": {
            "description": "Required. Specifications defining which Feature values to import from the entity. The request fails if no feature_specs are provided, and having multiple feature_specs for one Feature is not allowed.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec"
            }
          },
          "disableOnlineServing": {
            "description": "If set, data will not be imported for online serving. This is typically used for backfilling, where Feature generation timestamps are not in the timestamp range needed for online serving.",
            "type": "boolean"
          },
          "workerCount": {
            "description": "Specifies the number of workers that are used to write data to the Featurestore. Consider the online serving capacity that you require to achieve the desired import throughput without interfering with online serving. The value must be positive, and less than or equal to 100. If not set, defaults to using 1 worker. The low count ensures minimal impact on online serving performance.",
            "type": "integer",
            "format": "int32"
          },
          "disableIngestionAnalysis": {
            "description": "If true, API doesn't start ingestion analysis pipeline.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.exportFeatureValues",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "exportFeatureValues",
      "http_method": "POST",
      "path_template": "v1/{+entityType}:exportFeatureValues",
      "description": "Exports Feature values from all the entities of a target EntityType.",
      "required_params": [
        "entityType"
      ],
      "parameters": {
        "entityType": {
          "description": "Required. The resource name of the EntityType from which to export Feature values. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ExportFeatureValuesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ExportFeatureValuesRequest",
        "description": "Request message for FeaturestoreService.ExportFeatureValues.",
        "type": "object",
        "properties": {
          "snapshotExport": {
            "description": "Exports the latest Feature values of all entities of the EntityType within a time range.",
            "$ref": "GoogleCloudAiplatformV1ExportFeatureValuesRequestSnapshotExport"
          },
          "fullExport": {
            "description": "Exports all historical values of all entities of the EntityType within a time range",
            "$ref": "GoogleCloudAiplatformV1ExportFeatureValuesRequestFullExport"
          },
          "destination": {
            "description": "Required. Specifies destination location and format.",
            "$ref": "GoogleCloudAiplatformV1FeatureValueDestination"
          },
          "featureSelector": {
            "description": "Required. Selects Features to export values of.",
            "$ref": "GoogleCloudAiplatformV1FeatureSelector"
          },
          "settings": {
            "description": "Per-Feature export settings.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1DestinationFeatureSetting"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.deleteFeatureValues",
      "resource": "projects.locations.featurestores.entityTypes",
      "action": "deleteFeatureValues",
      "http_method": "POST",
      "path_template": "v1/{+entityType}:deleteFeatureValues",
      "description": "Delete Feature values from Featurestore. The progress of the deletion is tracked by the returned operation. The deleted feature values are guaranteed to be invisible to subsequent read operations after the operation is marked as successfully done. If a delete feature values operation fails, the feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same delete request again and wait till the new operation returned is marked as successfully done.",
      "required_params": [
        "entityType"
      ],
      "parameters": {
        "entityType": {
          "description": "Required. The resource name of the EntityType grouping the Features for which values are being deleted from. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DeleteFeatureValuesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DeleteFeatureValuesRequest",
        "description": "Request message for FeaturestoreService.DeleteFeatureValues.",
        "type": "object",
        "properties": {
          "selectEntity": {
            "description": "Select feature values to be deleted by specifying entities.",
            "$ref": "GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity"
          },
          "selectTimeRangeAndFeature": {
            "description": "Select feature values to be deleted by specifying time range and features.",
            "$ref": "GoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.operations.list",
      "resource": "projects.locations.featurestores.entityTypes.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.operations.get",
      "resource": "projects.locations.featurestores.entityTypes.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.operations.delete",
      "resource": "projects.locations.featurestores.entityTypes.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.operations.cancel",
      "resource": "projects.locations.featurestores.entityTypes.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.operations.wait",
      "resource": "projects.locations.featurestores.entityTypes.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.create",
      "resource": "projects.locations.featurestores.entityTypes.features",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/features",
      "description": "Creates a new Feature in a given EntityType.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "featureId": {
          "description": "Required. The ID to use for the Feature, which will become the final component of the Feature's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Feature",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Feature",
        "description": "Feature Metadata information. For example, color is a feature that describes an apple.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.",
            "type": "string"
          },
          "description": {
            "description": "Description of the Feature.",
            "type": "string"
          },
          "valueType": {
            "description": "Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.",
            "type": "string",
            "enumDescriptions": [
              "The value type is unspecified.",
              "Used for Feature that is a boolean.",
              "Used for Feature that is a list of boolean.",
              "Used for Feature that is double.",
              "Used for Feature that is a list of double.",
              "Used for Feature that is INT64.",
              "Used for Feature that is a list of INT64.",
              "Used for Feature that is string.",
              "Used for Feature that is a list of String.",
              "Used for Feature that is bytes.",
              "Used for Feature that is struct."
            ],
            "enum": [
              "VALUE_TYPE_UNSPECIFIED",
              "BOOL",
              "BOOL_ARRAY",
              "DOUBLE",
              "DOUBLE_ARRAY",
              "INT64",
              "INT64_ARRAY",
              "STRING",
              "STRING_ARRAY",
              "BYTES",
              "STRUCT"
            ]
          },
          "createTime": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "disableMonitoring": {
            "description": "Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.",
            "type": "boolean"
          },
          "monitoringStatsAnomalies": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly"
            }
          },
          "versionColumnName": {
            "description": "Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id.",
            "type": "string"
          },
          "pointOfContact": {
            "description": "Entity responsible for maintaining this feature. Can be comma separated list of email addresses or URIs.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.batchCreate",
      "resource": "projects.locations.featurestores.entityTypes.features",
      "action": "batchCreate",
      "http_method": "POST",
      "path_template": "v1/{+parent}/features:batchCreate",
      "description": "Creates a batch of Features in a given EntityType.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the EntityType/FeatureGroup to create the batch of Features under. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` `projects/{project}/locations/{location}/featureGroups/{feature_group}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchCreateFeaturesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchCreateFeaturesRequest",
        "description": "Request message for FeaturestoreService.BatchCreateFeatures. Request message for FeatureRegistryService.BatchCreateFeatures.",
        "type": "object",
        "properties": {
          "requests": {
            "description": "Required. The request message specifying the Features to create. All Features must be created under the same parent EntityType / FeatureGroup. The `parent` field in each child request message can be omitted. If `parent` is set in a child request, then the value must match the `parent` value in this request message.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1CreateFeatureRequest"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.get",
      "resource": "projects.locations.featurestores.entityTypes.features",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single Feature.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Feature resource. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Feature"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.list",
      "resource": "projects.locations.featurestores.entityTypes.features",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/features",
      "description": "Lists Features in a given EntityType.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list Features. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the Features that match the filter expression. The following filters are supported: * `value_type`: Supports = and != comparisons. * `create_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\" OR update_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with 'env' as the key.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 1000 Features will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous FeaturestoreService.ListFeatures call or FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `feature_id` * `value_type` (Not supported for FeatureRegistry Feature) * `create_time` * `update_time`",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "latestStatsCount": {
          "description": "Only applicable for Vertex AI Feature Store (Legacy). If set, return the most recent ListFeaturesRequest.latest_stats_count of stats for each Feature in response. Valid value is [0, 10]. If number of stats exists < ListFeaturesRequest.latest_stats_count, return all existing stats.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListFeaturesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.patch",
      "resource": "projects.locations.featurestores.entityTypes.features",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single Feature.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Field mask is used to specify the fields to be overwritten in the Features resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then only the non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override all fields. Updatable fields: * `description` * `labels` * `disable_monitoring` (Not supported for FeatureRegistryService Feature) * `point_of_contact` (Not supported for FeaturestoreService FeatureStore)",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Feature",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Feature",
        "description": "Feature Metadata information. For example, color is a feature that describes an apple.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.",
            "type": "string"
          },
          "description": {
            "description": "Description of the Feature.",
            "type": "string"
          },
          "valueType": {
            "description": "Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.",
            "type": "string",
            "enumDescriptions": [
              "The value type is unspecified.",
              "Used for Feature that is a boolean.",
              "Used for Feature that is a list of boolean.",
              "Used for Feature that is double.",
              "Used for Feature that is a list of double.",
              "Used for Feature that is INT64.",
              "Used for Feature that is a list of INT64.",
              "Used for Feature that is string.",
              "Used for Feature that is a list of String.",
              "Used for Feature that is bytes.",
              "Used for Feature that is struct."
            ],
            "enum": [
              "VALUE_TYPE_UNSPECIFIED",
              "BOOL",
              "BOOL_ARRAY",
              "DOUBLE",
              "DOUBLE_ARRAY",
              "INT64",
              "INT64_ARRAY",
              "STRING",
              "STRING_ARRAY",
              "BYTES",
              "STRUCT"
            ]
          },
          "createTime": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "disableMonitoring": {
            "description": "Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.",
            "type": "boolean"
          },
          "monitoringStatsAnomalies": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly"
            }
          },
          "versionColumnName": {
            "description": "Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id.",
            "type": "string"
          },
          "pointOfContact": {
            "description": "Entity responsible for maintaining this feature. Can be comma separated list of email addresses or URIs.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Feature"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.delete",
      "resource": "projects.locations.featurestores.entityTypes.features",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single Feature.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Features to be deleted. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.operations.list",
      "resource": "projects.locations.featurestores.entityTypes.features.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.operations.get",
      "resource": "projects.locations.featurestores.entityTypes.features.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.operations.delete",
      "resource": "projects.locations.featurestores.entityTypes.features.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.operations.cancel",
      "resource": "projects.locations.featurestores.entityTypes.features.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.entityTypes.features.operations.wait",
      "resource": "projects.locations.featurestores.entityTypes.features.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/entityTypes/[^/]+/features/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.operations.list",
      "resource": "projects.locations.featurestores.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.operations.get",
      "resource": "projects.locations.featurestores.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.operations.delete",
      "resource": "projects.locations.featurestores.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.operations.cancel",
      "resource": "projects.locations.featurestores.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.featurestores.operations.wait",
      "resource": "projects.locations.featurestores.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featurestores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.setIamPolicy",
      "resource": "projects.locations.models",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleIamV1SetIamPolicyRequest",
      "body_schema": {
        "id": "GoogleIamV1SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "GoogleIamV1Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.getIamPolicy",
      "resource": "projects.locations.models",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.testIamPermissions",
      "resource": "projects.locations.models",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1TestIamPermissionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.upload",
      "resource": "projects.locations.models",
      "action": "upload",
      "http_method": "POST",
      "path_template": "v1/{+parent}/models:upload",
      "description": "Uploads a Model artifact into Vertex AI.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location into which to upload the Model. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1UploadModelRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1UploadModelRequest",
        "description": "Request message for ModelService.UploadModel.",
        "type": "object",
        "properties": {
          "parentModel": {
            "description": "Optional. The resource name of the model into which to upload the version. Only specify this field when uploading a new version.",
            "type": "string"
          },
          "modelId": {
            "description": "Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.",
            "type": "string"
          },
          "model": {
            "description": "Required. The Model to create.",
            "$ref": "GoogleCloudAiplatformV1Model"
          },
          "serviceAccount": {
            "description": "Optional. The user-provided custom service account to use to do the model upload. If empty, [Vertex AI Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) will be used to access resources needed to upload the model. This account must belong to the target project where the model is uploaded to, i.e., the project specified in the `parent` field of this request and have necessary read permissions (to Google Cloud Storage, Artifact Registry, etc.).",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.get",
      "resource": "projects.locations.models",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a Model.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Model resource. Format: `projects/{project}/locations/{location}/models/{model}` In order to retrieve a specific version of the model, also provide the version ID or version alias. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias is specified, the \"default\" version will be returned. The \"default\" version alias is created for the first version of the model, and can be moved to other versions later on. There will be exactly one default version.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Model"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.list",
      "resource": "projects.locations.models",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/models",
      "description": "Lists Models in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the Models from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `model` supports = and !=. `model` represents the Model ID, i.e. the last segment of the Model's resource name. * `display_name` supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. * `base_model_name` only supports = Some examples: * `model=1234` * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"` * `baseModelName=\"text-bison\"`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListModelsResponse.next_page_token of the previous ModelService.ListModels call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListModelsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.listVersions",
      "resource": "projects.locations.models",
      "action": "listVersions",
      "http_method": "GET",
      "path_template": "v1/{+name}:listVersions",
      "description": "Lists versions of the specified model.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the model to list versions for.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via next_page_token of the previous ListModelVersions call.",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `labels.myKey=\"myValue\"`",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `create_time` * `update_time` Example: `update_time asc, create_time desc`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListModelVersionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.listCheckpoints",
      "resource": "projects.locations.models",
      "action": "listCheckpoints",
      "http_method": "GET",
      "path_template": "v1/{+name}:listCheckpoints",
      "description": "Lists checkpoints of the specified model version.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the model version to list checkpoints for. `projects/{project}/locations/{location}/models/{model}@{version}` Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias is specified, the latest version will be used.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token. Typically obtained via next_page_token of the previous ListModelVersionCheckpoints call.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListModelVersionCheckpointsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.patch",
      "resource": "projects.locations.models",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a Model.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource name of the Model.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see google.protobuf.FieldMask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Model",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Model",
        "description": "A trained machine learning Model.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The resource name of the Model.",
            "type": "string"
          },
          "versionId": {
            "description": "Output only. Immutable. The version ID of the model. A new version is committed when a new model version is uploaded or trained under an existing model id. It is an auto-incrementing decimal number in string representation.",
            "readOnly": true,
            "type": "string"
          },
          "versionAliases": {
            "description": "User provided version aliases so that a model version can be referenced via alias (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_alias}` instead of auto-generated version id (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_id})`. The format is a-z{0,126}[a-z0-9] to distinguish from version_id. A default version alias will be created for the first version of the model, and there must be exactly one default version alias for a model.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "versionCreateTime": {
            "description": "Output only. Timestamp when this version was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "versionUpdateTime": {
            "description": "Output only. Timestamp when this version was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "displayName": {
            "description": "Required. The display name of the Model. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the Model.",
            "type": "string"
          },
          "versionDescription": {
            "description": "The description of this version.",
            "type": "string"
          },
          "defaultCheckpointId": {
            "description": "The default checkpoint id of a model version.",
            "type": "string"
          },
          "predictSchemata": {
            "description": "The schemata that describe formats of the Model's predictions and explanations as given and returned via PredictionService.Predict and PredictionService.Explain.",
            "$ref": "GoogleCloudAiplatformV1PredictSchemata"
          },
          "metadataSchemaUri": {
            "description": "Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it. Unset if the Model does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no additional metadata is needed, this field is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
            "type": "string"
          },
          "metadata": {
            "description": "Immutable. An additional information about the Model; the schema of the metadata can be found in metadata_schema. Unset if the Model does not have any additional information.",
            "type": "any"
          },
          "supportedExportFormats": {
            "description": "Output only. The formats in which this Model may be exported. If empty, this Model is not available for export.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1ModelExportFormat"
            }
          },
          "trainingPipeline": {
            "description": "Output only. The resource name of the TrainingPipeline that uploaded this Model, if any.",
            "readOnly": true,
            "type": "string"
          },
          "pipelineJob": {
            "description": "Optional. This field is populated if the model is produced by a pipeline job.",
            "type": "string"
          },
          "containerSpec": {
            "description": "Input only. The specification of the container that is to be used when deploying this Model. The specification is ingested upon ModelService.UploadModel, and all binaries it contains are copied and stored internally by Vertex AI. Not required for AutoML Models.",
            "$ref": "GoogleCloudAiplatformV1ModelContainerSpec"
          },
          "artifactUri": {
            "description": "Immutable. The path to the directory containing the Model artifact and any of its supporting files. Not required for AutoML Models.",
            "type": "string"
          },
          "supportedDeploymentResourcesTypes": {
            "description": "Output only. When this Model is deployed, its prediction resources are described by the `prediction_resources` field of the Endpoint.deployed_models object. Because not all Models support all resource configuration types, the configuration types this Model supports are listed here. If no configuration types are listed, the Model cannot be deployed to an Endpoint and does not support online predictions (PredictionService.Predict or PredictionService.Explain). Such a Model can serve predictions by using a BatchPredictionJob, if it has at least one entry each in supported_input_storage_formats and supported_output_storage_formats.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "enumDescriptions": [
                "Should not be used.",
                "Resources that are dedicated to the DeployedModel, and that need a higher degree of manual configuration.",
                "Resources that to large degree are decided by Vertex AI, and require only a modest additional configuration.",
                "Resources that can be shared by multiple DeployedModels. A pre-configured DeploymentResourcePool is required."
              ],
              "enum": [
                "DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED",
                "DEDICATED_RESOURCES",
                "AUTOMATIC_RESOURCES",
                "SHARED_RESOURCES"
              ]
            }
          },
          "supportedInputStorageFormats": {
            "description": "Output only. The formats this Model supports in BatchPredictionJob.input_config. If PredictSchemata.instance_schema_uri exists, the instances should be given as per that schema. The possible formats are: * `jsonl` The JSON Lines format, where each instance is a single line. Uses GcsSource. * `csv` The CSV format, where each instance is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsSource. * `tf-record` The TFRecord format, where each instance is a single record in tfrecord syntax. Uses GcsSource. * `tf-record-gzip` Similar to `tf-record`, but the file is gzipped. Uses GcsSource. * `bigquery` Each instance is a single row in BigQuery. Uses BigQuerySource. * `file-list` Each line of the file is the location of an instance to process, uses `gcs_source` field of the InputConfig object. If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportedOutputStorageFormats": {
            "description": "Output only. The formats this Model supports in BatchPredictionJob.output_config. If both PredictSchemata.instance_schema_uri and PredictSchemata.prediction_schema_uri exist, the predictions are returned together with their instances. In other words, the prediction has the original instance data first, followed by the actual prediction content (as per the schema). The possible formats are: * `jsonl` The JSON Lines format, where each prediction is a single line. Uses GcsDestination. * `csv` The CSV format, where each prediction is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsDestination. * `bigquery` Each prediction is a single row in a BigQuery table, uses BigQueryDestination . If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Model was uploaded into Vertex AI.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Model was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "deployedModels": {
            "description": "Output only. The pointers to DeployedModels created from this Model. Note that Model could have been deployed to Endpoints in different Locations.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1DeployedModelRef"
            }
          },
          "explanationSpec": {
            "description": "The default explanation specification for this Model. The Model can be used for requesting explanation after being deployed if it is populated. The Model can be used for batch explanation if it is populated. All fields of the explanation_spec can be overridden by explanation_spec of DeployModelRequest.deployed_model, or explanation_spec of BatchPredictionJob. If the default explanation specification is not set for this Model, this Model can still be used for requesting explanation by setting explanation_spec of DeployModelRequest.deployed_model and for batch explanation by setting explanation_spec of BatchPredictionJob.",
            "$ref": "GoogleCloudAiplatformV1ExplanationSpec"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Models. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "dataStats": {
            "description": "Stats of data used for training or evaluating the Model. Only populated when the Model is trained by a TrainingPipeline with data_input_config.",
            "$ref": "GoogleCloudAiplatformV1ModelDataStats"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a Model. If set, this Model and all sub-resources of this Model will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "modelSourceInfo": {
            "description": "Output only. Source of a model. It can either be automl training pipeline, custom training pipeline, BigQuery ML, or saved and tuned from Genie or Model Garden.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1ModelSourceInfo"
          },
          "originalModelInfo": {
            "description": "Output only. If this Model is a copy of another Model, this contains info about the original.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1ModelOriginalModelInfo"
          },
          "metadataArtifact": {
            "description": "Output only. The resource name of the Artifact that was created in MetadataStore when creating the Model. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.",
            "readOnly": true,
            "type": "string"
          },
          "baseModelSource": {
            "description": "Optional. User input field to specify the base model source. Currently it only supports specifing the Model Garden models and Genie models.",
            "$ref": "GoogleCloudAiplatformV1ModelBaseModelSource"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "checkpoints": {
            "description": "Optional. Output only. The checkpoints of the model.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Checkpoint"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Model"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.updateExplanationDataset",
      "resource": "projects.locations.models",
      "action": "updateExplanationDataset",
      "http_method": "POST",
      "path_template": "v1/{+model}:updateExplanationDataset",
      "description": "Incrementally update the dataset used for an examples model.",
      "required_params": [
        "model"
      ],
      "parameters": {
        "model": {
          "description": "Required. The resource name of the Model to update. Format: `projects/{project}/locations/{location}/models/{model}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1UpdateExplanationDatasetRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1UpdateExplanationDatasetRequest",
        "description": "Request message for ModelService.UpdateExplanationDataset.",
        "type": "object",
        "properties": {
          "examples": {
            "description": "The example config containing the location of the dataset.",
            "$ref": "GoogleCloudAiplatformV1Examples"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.delete",
      "resource": "projects.locations.models",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Model. A model cannot be deleted if any Endpoint resource has a DeployedModel based on the model in its deployed_models field.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Model resource to be deleted. Format: `projects/{project}/locations/{location}/models/{model}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.deleteVersion",
      "resource": "projects.locations.models",
      "action": "deleteVersion",
      "http_method": "DELETE",
      "path_template": "v1/{+name}:deleteVersion",
      "description": "Deletes a Model version. Model version can only be deleted if there are no DeployedModels created from it. Deleting the only version in the Model is not allowed. Use DeleteModel for deleting the Model instead.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the model version to be deleted, with a version ID explicitly included. Example: `projects/{project}/locations/{location}/models/{model}@1234`",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.mergeVersionAliases",
      "resource": "projects.locations.models",
      "action": "mergeVersionAliases",
      "http_method": "POST",
      "path_template": "v1/{+name}:mergeVersionAliases",
      "description": "Merges a set of aliases for a Model version.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the model version to merge aliases, with a version ID explicitly included. Example: `projects/{project}/locations/{location}/models/{model}@1234`",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1MergeVersionAliasesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1MergeVersionAliasesRequest",
        "description": "Request message for ModelService.MergeVersionAliases.",
        "type": "object",
        "properties": {
          "versionAliases": {
            "description": "Required. The set of version aliases to merge. The alias should be at most 128 characters, and match `a-z{0,126}[a-z-0-9]`. Add the `-` prefix to an alias means removing that alias from the version. `-` is NOT counted in the 128 characters. Example: `-golden` means removing the `golden` alias from the version. There is NO ordering in aliases, which means 1) The aliases returned from GetModel API might not have the exactly same order from this MergeVersionAliases API. 2) Adding and deleting the same alias in the request is not recommended, and the 2 operations will be cancelled out.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Model"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.export",
      "resource": "projects.locations.models",
      "action": "export",
      "http_method": "POST",
      "path_template": "v1/{+name}:export",
      "description": "Exports a trained, exportable Model to a location specified by the user. A Model is considered to be exportable if it has at least one supported export format.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Model to export. The resource name may contain version id or version alias to specify the version, if no version is specified, the default version will be exported.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ExportModelRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ExportModelRequest",
        "description": "Request message for ModelService.ExportModel.",
        "type": "object",
        "properties": {
          "outputConfig": {
            "description": "Required. The desired output location and configuration.",
            "$ref": "GoogleCloudAiplatformV1ExportModelRequestOutputConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.copy",
      "resource": "projects.locations.models",
      "action": "copy",
      "http_method": "POST",
      "path_template": "v1/{+parent}/models:copy",
      "description": "Copies an already existing Vertex AI Model into the specified Location. The source Model must exist in the same Project. When copying custom Models, the users themselves are responsible for Model.metadata content to be region-agnostic, as well as making sure that any resources (e.g. files) it depends on remain accessible.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location into which to copy the Model. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CopyModelRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CopyModelRequest",
        "description": "Request message for ModelService.CopyModel.",
        "type": "object",
        "properties": {
          "modelId": {
            "description": "Optional. Copy source_model into a new Model with this ID. The ID will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.",
            "type": "string"
          },
          "parentModel": {
            "description": "Optional. Specify this field to copy source_model into this existing Model as a new version. Format: `projects/{project}/locations/{location}/models/{model}`",
            "type": "string"
          },
          "sourceModel": {
            "description": "Required. The resource name of the Model to copy. That Model must be in the same Project. Format: `projects/{project}/locations/{location}/models/{model}`",
            "type": "string"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key options. If this is set, then the Model copy will be encrypted with the provided encryption key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.operations.list",
      "resource": "projects.locations.models.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.operations.get",
      "resource": "projects.locations.models.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.operations.delete",
      "resource": "projects.locations.models.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.operations.cancel",
      "resource": "projects.locations.models.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.operations.wait",
      "resource": "projects.locations.models.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.import",
      "resource": "projects.locations.models.evaluations",
      "action": "import",
      "http_method": "POST",
      "path_template": "v1/{+parent}/evaluations:import",
      "description": "Imports an externally generated ModelEvaluation.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the parent model resource. Format: `projects/{project}/locations/{location}/models/{model}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ImportModelEvaluationRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ImportModelEvaluationRequest",
        "description": "Request message for ModelService.ImportModelEvaluation",
        "type": "object",
        "properties": {
          "modelEvaluation": {
            "description": "Required. Model evaluation resource to be imported.",
            "$ref": "GoogleCloudAiplatformV1ModelEvaluation"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ModelEvaluation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.get",
      "resource": "projects.locations.models.evaluations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a ModelEvaluation.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ModelEvaluation resource. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ModelEvaluation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.list",
      "resource": "projects.locations.models.evaluations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/evaluations",
      "description": "Lists ModelEvaluations in a Model.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Model to list the ModelEvaluations from. Format: `projects/{project}/locations/{location}/models/{model}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListModelEvaluationsResponse.next_page_token of the previous ModelService.ListModelEvaluations call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListModelEvaluationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.operations.list",
      "resource": "projects.locations.models.evaluations.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.operations.get",
      "resource": "projects.locations.models.evaluations.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.operations.delete",
      "resource": "projects.locations.models.evaluations.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.operations.cancel",
      "resource": "projects.locations.models.evaluations.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.operations.wait",
      "resource": "projects.locations.models.evaluations.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.slices.batchImport",
      "resource": "projects.locations.models.evaluations.slices",
      "action": "batchImport",
      "http_method": "POST",
      "path_template": "v1/{+parent}:batchImport",
      "description": "Imports a list of externally generated EvaluatedAnnotations.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the parent ModelEvaluationSlice resource. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/slices/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsRequest",
        "description": "Request message for ModelService.BatchImportEvaluatedAnnotations",
        "type": "object",
        "properties": {
          "evaluatedAnnotations": {
            "description": "Required. Evaluated annotations resource to be imported.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1EvaluatedAnnotation"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1BatchImportEvaluatedAnnotationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.slices.get",
      "resource": "projects.locations.models.evaluations.slices",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a ModelEvaluationSlice.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ModelEvaluationSlice resource. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+/slices/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ModelEvaluationSlice"
    },
    {
      "operation_id": "aiplatform.projects.locations.models.evaluations.slices.list",
      "resource": "projects.locations.models.evaluations.slices",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/slices",
      "description": "Lists ModelEvaluationSlices in a ModelEvaluation.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the ModelEvaluation to list the ModelEvaluationSlices from. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+/evaluations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter. * `slice.dimension` - for =.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListModelEvaluationSlicesResponse.next_page_token of the previous ModelService.ListModelEvaluationSlices call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListModelEvaluationSlicesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.setIamPolicy",
      "resource": "projects.locations.notebookRuntimeTemplates",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleIamV1SetIamPolicyRequest",
      "body_schema": {
        "id": "GoogleIamV1SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "GoogleIamV1Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.getIamPolicy",
      "resource": "projects.locations.notebookRuntimeTemplates",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.testIamPermissions",
      "resource": "projects.locations.notebookRuntimeTemplates",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1TestIamPermissionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.create",
      "resource": "projects.locations.notebookRuntimeTemplates",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/notebookRuntimeTemplates",
      "description": "Creates a NotebookRuntimeTemplate.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the NotebookRuntimeTemplate. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "notebookRuntimeTemplateId": {
          "description": "Optional. User specified ID for the notebook runtime template.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1NotebookRuntimeTemplate",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1NotebookRuntimeTemplate",
        "description": "A template that specifies runtime configurations such as machine type, runtime version, network configurations, etc. Multiple runtimes can be created from a runtime template.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The resource name of the NotebookRuntimeTemplate.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the NotebookRuntimeTemplate. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the NotebookRuntimeTemplate.",
            "type": "string"
          },
          "isDefault": {
            "description": "Output only. Deprecated: This field has no behavior. Use notebook_runtime_type = 'ONE_CLICK' instead. The default template to use if not specified.",
            "readOnly": true,
            "deprecated": true,
            "type": "boolean"
          },
          "machineSpec": {
            "description": "Optional. Immutable. The specification of a single machine for the template.",
            "$ref": "GoogleCloudAiplatformV1MachineSpec"
          },
          "dataPersistentDiskSpec": {
            "description": "Optional. The specification of persistent disk attached to the runtime as data disk storage.",
            "$ref": "GoogleCloudAiplatformV1PersistentDiskSpec"
          },
          "networkSpec": {
            "description": "Optional. Network spec.",
            "$ref": "GoogleCloudAiplatformV1NetworkSpec"
          },
          "serviceAccount": {
            "description": "Deprecated: This field is ignored and the \"Vertex AI Notebook Service Account\" (service-PROJECT_NUMBER@gcp-sa-aiplatform-vm.iam.gserviceaccount.com) is used for the runtime workload identity. See https://cloud.google.com/iam/docs/service-agents#vertex-ai-notebook-service-account for more details. For NotebookExecutionJob, use NotebookExecutionJob.service_account instead. The service account that the runtime workload runs as. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.",
            "deprecated": true,
            "type": "string"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize the NotebookRuntimeTemplates. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "idleShutdownConfig": {
            "description": "The idle shutdown configuration of NotebookRuntimeTemplate. This config will only be set when idle shutdown is enabled.",
            "$ref": "GoogleCloudAiplatformV1NotebookIdleShutdownConfig"
          },
          "eucConfig": {
            "description": "EUC configuration of the NotebookRuntimeTemplate.",
            "$ref": "GoogleCloudAiplatformV1NotebookEucConfig"
          },
          "createTime": {
            "description": "Output only. Timestamp when this NotebookRuntimeTemplate was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this NotebookRuntimeTemplate was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "notebookRuntimeType": {
            "description": "Optional. Immutable. The type of the notebook runtime template.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified notebook runtime type, NotebookRuntimeType will default to USER_DEFINED.",
              "runtime or template with coustomized configurations from user.",
              "runtime or template with system defined configurations."
            ],
            "enum": [
              "NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED",
              "USER_DEFINED",
              "ONE_CLICK"
            ]
          },
          "shieldedVmConfig": {
            "description": "Optional. Immutable. Runtime Shielded VM spec.",
            "$ref": "GoogleCloudAiplatformV1ShieldedVmConfig"
          },
          "networkTags": {
            "description": "Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reservationAffinity": {
            "description": "Optional. Reservation Affinity of the notebook runtime template.",
            "$ref": "GoogleCloudAiplatformV1NotebookReservationAffinity"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for the notebook runtime.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "softwareConfig": {
            "description": "Optional. The notebook software configuration of the notebook runtime.",
            "$ref": "GoogleCloudAiplatformV1NotebookSoftwareConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.get",
      "resource": "projects.locations.notebookRuntimeTemplates",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a NotebookRuntimeTemplate.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NotebookRuntimeTemplate resource. Format: `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1NotebookRuntimeTemplate"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.list",
      "resource": "projects.locations.notebookRuntimeTemplates",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/notebookRuntimeTemplates",
      "description": "Lists NotebookRuntimeTemplates in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location from which to list the NotebookRuntimeTemplates. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's resource name. * `display_name` supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. * `machineType` supports = and !=. * `acceleratorType` supports = and !=. Some examples: * `notebookRuntimeTemplate=notebookRuntimeTemplate123` * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"` * `notebookRuntimeType=USER_DEFINED` * `machineType=e2-standard-4` * `acceleratorType=NVIDIA_TESLA_T4`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token. Typically obtained via ListNotebookRuntimeTemplatesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimeTemplates call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Optional. Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "Optional. A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListNotebookRuntimeTemplatesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.delete",
      "resource": "projects.locations.notebookRuntimeTemplates",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a NotebookRuntimeTemplate.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NotebookRuntimeTemplate resource to be deleted. Format: `projects/{project}/locations/{location}/notebookRuntimeTemplates/{notebook_runtime_template}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.patch",
      "resource": "projects.locations.notebookRuntimeTemplates",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a NotebookRuntimeTemplate.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The resource name of the NotebookRuntimeTemplate.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see google.protobuf.FieldMask. Input format: `{paths: \"${updated_filed}\"}` Updatable fields: * `encryption_spec.kms_key_name`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1NotebookRuntimeTemplate",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1NotebookRuntimeTemplate",
        "description": "A template that specifies runtime configurations such as machine type, runtime version, network configurations, etc. Multiple runtimes can be created from a runtime template.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The resource name of the NotebookRuntimeTemplate.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the NotebookRuntimeTemplate. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the NotebookRuntimeTemplate.",
            "type": "string"
          },
          "isDefault": {
            "description": "Output only. Deprecated: This field has no behavior. Use notebook_runtime_type = 'ONE_CLICK' instead. The default template to use if not specified.",
            "readOnly": true,
            "deprecated": true,
            "type": "boolean"
          },
          "machineSpec": {
            "description": "Optional. Immutable. The specification of a single machine for the template.",
            "$ref": "GoogleCloudAiplatformV1MachineSpec"
          },
          "dataPersistentDiskSpec": {
            "description": "Optional. The specification of persistent disk attached to the runtime as data disk storage.",
            "$ref": "GoogleCloudAiplatformV1PersistentDiskSpec"
          },
          "networkSpec": {
            "description": "Optional. Network spec.",
            "$ref": "GoogleCloudAiplatformV1NetworkSpec"
          },
          "serviceAccount": {
            "description": "Deprecated: This field is ignored and the \"Vertex AI Notebook Service Account\" (service-PROJECT_NUMBER@gcp-sa-aiplatform-vm.iam.gserviceaccount.com) is used for the runtime workload identity. See https://cloud.google.com/iam/docs/service-agents#vertex-ai-notebook-service-account for more details. For NotebookExecutionJob, use NotebookExecutionJob.service_account instead. The service account that the runtime workload runs as. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.",
            "deprecated": true,
            "type": "string"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize the NotebookRuntimeTemplates. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "idleShutdownConfig": {
            "description": "The idle shutdown configuration of NotebookRuntimeTemplate. This config will only be set when idle shutdown is enabled.",
            "$ref": "GoogleCloudAiplatformV1NotebookIdleShutdownConfig"
          },
          "eucConfig": {
            "description": "EUC configuration of the NotebookRuntimeTemplate.",
            "$ref": "GoogleCloudAiplatformV1NotebookEucConfig"
          },
          "createTime": {
            "description": "Output only. Timestamp when this NotebookRuntimeTemplate was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this NotebookRuntimeTemplate was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "notebookRuntimeType": {
            "description": "Optional. Immutable. The type of the notebook runtime template.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified notebook runtime type, NotebookRuntimeType will default to USER_DEFINED.",
              "runtime or template with coustomized configurations from user.",
              "runtime or template with system defined configurations."
            ],
            "enum": [
              "NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED",
              "USER_DEFINED",
              "ONE_CLICK"
            ]
          },
          "shieldedVmConfig": {
            "description": "Optional. Immutable. Runtime Shielded VM spec.",
            "$ref": "GoogleCloudAiplatformV1ShieldedVmConfig"
          },
          "networkTags": {
            "description": "Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reservationAffinity": {
            "description": "Optional. Reservation Affinity of the notebook runtime template.",
            "$ref": "GoogleCloudAiplatformV1NotebookReservationAffinity"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for the notebook runtime.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "softwareConfig": {
            "description": "Optional. The notebook software configuration of the notebook runtime.",
            "$ref": "GoogleCloudAiplatformV1NotebookSoftwareConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1NotebookRuntimeTemplate"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.operations.list",
      "resource": "projects.locations.notebookRuntimeTemplates.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.operations.get",
      "resource": "projects.locations.notebookRuntimeTemplates.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.operations.delete",
      "resource": "projects.locations.notebookRuntimeTemplates.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.operations.cancel",
      "resource": "projects.locations.notebookRuntimeTemplates.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimeTemplates.operations.wait",
      "resource": "projects.locations.notebookRuntimeTemplates.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimeTemplates/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.setIamPolicy",
      "resource": "projects.locations.featureOnlineStores",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleIamV1SetIamPolicyRequest",
      "body_schema": {
        "id": "GoogleIamV1SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "GoogleIamV1Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.getIamPolicy",
      "resource": "projects.locations.featureOnlineStores",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.testIamPermissions",
      "resource": "projects.locations.featureOnlineStores",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1TestIamPermissionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.create",
      "resource": "projects.locations.featureOnlineStores",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/featureOnlineStores",
      "description": "Creates a new FeatureOnlineStore in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create FeatureOnlineStores. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "featureOnlineStoreId": {
          "description": "Required. The ID to use for this FeatureOnlineStore, which will become the final component of the FeatureOnlineStore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FeatureOnlineStore",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FeatureOnlineStore",
        "description": "Vertex AI Feature Online Store provides a centralized repository for serving ML features and embedding indexes at low latency. The Feature Online Store is a top-level container.",
        "type": "object",
        "properties": {
          "bigtable": {
            "description": "Contains settings for the Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.",
            "$ref": "GoogleCloudAiplatformV1FeatureOnlineStoreBigtable"
          },
          "optimized": {
            "description": "Contains settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore. When choose Optimized storage type, need to set PrivateServiceConnectConfig.enable_private_service_connect to use private endpoint. Otherwise will use public endpoint by default.",
            "$ref": "GoogleCloudAiplatformV1FeatureOnlineStoreOptimized"
          },
          "name": {
            "description": "Identifier. Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this FeatureOnlineStore was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this FeatureOnlineStore was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "state": {
            "description": "Output only. State of the featureOnlineStore.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Default value. This value is unused.",
              "State when the featureOnlineStore configuration is not being updated and the fields reflect the current configuration of the featureOnlineStore. The featureOnlineStore is usable in this state.",
              "The state of the featureOnlineStore configuration when it is being updated. During an update, the fields reflect either the original configuration or the updated configuration of the featureOnlineStore. The featureOnlineStore is still usable in this state."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "STABLE",
              "UPDATING"
            ]
          },
          "dedicatedServingEndpoint": {
            "description": "Optional. The dedicated serving endpoint for this FeatureOnlineStore, which is different from common Vertex service endpoint.",
            "$ref": "GoogleCloudAiplatformV1FeatureOnlineStoreDedicatedServingEndpoint"
          },
          "encryptionSpec": {
            "description": "Optional. Customer-managed encryption key spec for data storage. If set, online store will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.get",
      "resource": "projects.locations.featureOnlineStores",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single FeatureOnlineStore.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the FeatureOnlineStore resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1FeatureOnlineStore"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.list",
      "resource": "projects.locations.featureOnlineStores",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/featureOnlineStores",
      "description": "Lists FeatureOnlineStores in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list FeatureOnlineStores. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the FeatureOnlineStores that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > \"2020-01-01\" OR update_time > \"2020-01-01\"` FeatureOnlineStores created or updated after 2020-01-01. * `labels.env = \"prod\"` FeatureOnlineStores with label \"env\" set to \"prod\".",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of FeatureOnlineStores to return. The service may return fewer than this value. If unspecified, at most 100 FeatureOnlineStores will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureOnlineStores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureOnlineStores must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported Fields: * `create_time` * `update_time`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListFeatureOnlineStoresResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.patch",
      "resource": "projects.locations.featureOnlineStores",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single FeatureOnlineStore.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Field mask is used to specify the fields to be overwritten in the FeatureOnlineStore resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then only the non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override all fields. Updatable fields: * `labels` * `description` * `bigtable` * `bigtable.auto_scaling` * `bigtable.enable_multi_region_replica`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FeatureOnlineStore",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FeatureOnlineStore",
        "description": "Vertex AI Feature Online Store provides a centralized repository for serving ML features and embedding indexes at low latency. The Feature Online Store is a top-level container.",
        "type": "object",
        "properties": {
          "bigtable": {
            "description": "Contains settings for the Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.",
            "$ref": "GoogleCloudAiplatformV1FeatureOnlineStoreBigtable"
          },
          "optimized": {
            "description": "Contains settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore. When choose Optimized storage type, need to set PrivateServiceConnectConfig.enable_private_service_connect to use private endpoint. Otherwise will use public endpoint by default.",
            "$ref": "GoogleCloudAiplatformV1FeatureOnlineStoreOptimized"
          },
          "name": {
            "description": "Identifier. Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this FeatureOnlineStore was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this FeatureOnlineStore was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "state": {
            "description": "Output only. State of the featureOnlineStore.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Default value. This value is unused.",
              "State when the featureOnlineStore configuration is not being updated and the fields reflect the current configuration of the featureOnlineStore. The featureOnlineStore is usable in this state.",
              "The state of the featureOnlineStore configuration when it is being updated. During an update, the fields reflect either the original configuration or the updated configuration of the featureOnlineStore. The featureOnlineStore is still usable in this state."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "STABLE",
              "UPDATING"
            ]
          },
          "dedicatedServingEndpoint": {
            "description": "Optional. The dedicated serving endpoint for this FeatureOnlineStore, which is different from common Vertex service endpoint.",
            "$ref": "GoogleCloudAiplatformV1FeatureOnlineStoreDedicatedServingEndpoint"
          },
          "encryptionSpec": {
            "description": "Optional. Customer-managed encryption key spec for data storage. If set, online store will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.delete",
      "resource": "projects.locations.featureOnlineStores",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single FeatureOnlineStore. The FeatureOnlineStore must not contain any FeatureViews.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the FeatureOnlineStore to be deleted. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted. (Otherwise, the request will only work if the FeatureOnlineStore has no FeatureViews.)",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.setIamPolicy",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleIamV1SetIamPolicyRequest",
      "body_schema": {
        "id": "GoogleIamV1SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "GoogleIamV1Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.getIamPolicy",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.testIamPermissions",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1TestIamPermissionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.create",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/featureViews",
      "description": "Creates a new FeatureView in a given FeatureOnlineStore.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the FeatureOnlineStore to create FeatureViews. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "featureViewId": {
          "description": "Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.",
          "location": "query",
          "type": "string"
        },
        "runSyncImmediately": {
          "description": "Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FeatureView",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FeatureView",
        "description": "FeatureView is representation of values that the FeatureOnlineStore will serve based on its syncConfig.",
        "type": "object",
        "properties": {
          "bigQuerySource": {
            "description": "Optional. Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewBigQuerySource"
          },
          "featureRegistrySource": {
            "description": "Optional. Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource"
          },
          "vertexRagSource": {
            "description": "Optional. The Vertex RAG Source that the FeatureView is linked to.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewVertexRagSource"
          },
          "name": {
            "description": "Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this FeatureView was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this FeatureView was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "syncConfig": {
            "description": "Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for each entityId of this FeatureView are made ready for online serving.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewSyncConfig"
          },
          "indexConfig": {
            "description": "Optional. Configuration for index preparation for vector search. It contains the required configurations to create an index from source data, so that approximate nearest neighbor (a.k.a ANN) algorithms search can be performed during online serving.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewIndexConfig"
          },
          "optimizedConfig": {
            "description": "Optional. Configuration for FeatureView created under Optimized FeatureOnlineStore.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewOptimizedConfig"
          },
          "serviceAgentType": {
            "description": "Optional. Service agent type used during data sync. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureView within a project, a separate service account should be provisioned by setting this field to `SERVICE_AGENT_TYPE_FEATURE_VIEW`. This will generate a separate service account to access the BigQuery source table.",
            "type": "string",
            "enumDescriptions": [
              "By default, the project-level Vertex AI Service Agent is enabled.",
              "Indicates the project-level Vertex AI Service Agent (https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) will be used during sync jobs.",
              "Enable a FeatureView service account to be created by Vertex AI and output in the field `service_account_email`. This service account will be used to read from the source BigQuery table during sync."
            ],
            "enum": [
              "SERVICE_AGENT_TYPE_UNSPECIFIED",
              "SERVICE_AGENT_TYPE_PROJECT",
              "SERVICE_AGENT_TYPE_FEATURE_VIEW"
            ]
          },
          "serviceAccountEmail": {
            "description": "Output only. A Service Account unique to this FeatureView. The role bigquery.dataViewer should be granted to this service account to allow Vertex AI Feature Store to sync data to the online store.",
            "readOnly": true,
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.get",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single FeatureView.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the FeatureView resource. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1FeatureView"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.list",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/featureViews",
      "description": "Lists FeatureViews in a given FeatureOnlineStore.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the FeatureOnlineStore to list FeatureViews. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the FeatureViews that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\" OR update_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> FeatureViews created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> FeatureViews having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any FeatureView which has a label with 'env' as the key.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of FeatureViews to return. The service may return fewer than this value. If unspecified, at most 1000 FeatureViews will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViews call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureViews must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `feature_view_id` * `create_time` * `update_time`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListFeatureViewsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.patch",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single FeatureView.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Field mask is used to specify the fields to be overwritten in the FeatureView resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then only the non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override all fields. Updatable fields: * `labels` * `service_agent_type` * `big_query_source` * `big_query_source.uri` * `big_query_source.entity_id_columns` * `feature_registry_source` * `feature_registry_source.feature_groups` * `sync_config` * `sync_config.cron` * `optimized_config.automatic_resources`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FeatureView",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FeatureView",
        "description": "FeatureView is representation of values that the FeatureOnlineStore will serve based on its syncConfig.",
        "type": "object",
        "properties": {
          "bigQuerySource": {
            "description": "Optional. Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewBigQuerySource"
          },
          "featureRegistrySource": {
            "description": "Optional. Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource"
          },
          "vertexRagSource": {
            "description": "Optional. The Vertex RAG Source that the FeatureView is linked to.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewVertexRagSource"
          },
          "name": {
            "description": "Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this FeatureView was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this FeatureView was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "syncConfig": {
            "description": "Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for each entityId of this FeatureView are made ready for online serving.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewSyncConfig"
          },
          "indexConfig": {
            "description": "Optional. Configuration for index preparation for vector search. It contains the required configurations to create an index from source data, so that approximate nearest neighbor (a.k.a ANN) algorithms search can be performed during online serving.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewIndexConfig"
          },
          "optimizedConfig": {
            "description": "Optional. Configuration for FeatureView created under Optimized FeatureOnlineStore.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewOptimizedConfig"
          },
          "serviceAgentType": {
            "description": "Optional. Service agent type used during data sync. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureView within a project, a separate service account should be provisioned by setting this field to `SERVICE_AGENT_TYPE_FEATURE_VIEW`. This will generate a separate service account to access the BigQuery source table.",
            "type": "string",
            "enumDescriptions": [
              "By default, the project-level Vertex AI Service Agent is enabled.",
              "Indicates the project-level Vertex AI Service Agent (https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) will be used during sync jobs.",
              "Enable a FeatureView service account to be created by Vertex AI and output in the field `service_account_email`. This service account will be used to read from the source BigQuery table during sync."
            ],
            "enum": [
              "SERVICE_AGENT_TYPE_UNSPECIFIED",
              "SERVICE_AGENT_TYPE_PROJECT",
              "SERVICE_AGENT_TYPE_FEATURE_VIEW"
            ]
          },
          "serviceAccountEmail": {
            "description": "Output only. A Service Account unique to this FeatureView. The role bigquery.dataViewer should be granted to this service account to allow Vertex AI Feature Store to sync data to the online store.",
            "readOnly": true,
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.delete",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single FeatureView.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the FeatureView to be deleted. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.sync",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "sync",
      "http_method": "POST",
      "path_template": "v1/{+featureView}:sync",
      "description": "Triggers on-demand sync for the FeatureView.",
      "required_params": [
        "featureView"
      ],
      "parameters": {
        "featureView": {
          "description": "Required. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1SyncFeatureViewRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1SyncFeatureViewRequest",
        "description": "Request message for FeatureOnlineStoreAdminService.SyncFeatureView.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1SyncFeatureViewResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.fetchFeatureValues",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "fetchFeatureValues",
      "http_method": "POST",
      "path_template": "v1/{+featureView}:fetchFeatureValues",
      "description": "Fetch feature values under a FeatureView.",
      "required_params": [
        "featureView"
      ],
      "parameters": {
        "featureView": {
          "description": "Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FetchFeatureValuesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FetchFeatureValuesRequest",
        "description": "Request message for FeatureOnlineStoreService.FetchFeatureValues. All the features under the requested feature view will be returned.",
        "type": "object",
        "properties": {
          "dataKey": {
            "description": "Optional. The request key to fetch feature values for.",
            "$ref": "GoogleCloudAiplatformV1FeatureViewDataKey"
          },
          "dataFormat": {
            "description": "Optional. Response data format. If not set, FeatureViewDataFormat.KEY_VALUE will be used.",
            "type": "string",
            "enumDescriptions": [
              "Not set. Will be treated as the KeyValue format.",
              "Return response data in key-value format.",
              "Return response data in proto Struct format."
            ],
            "enum": [
              "FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED",
              "KEY_VALUE",
              "PROTO_STRUCT"
            ]
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1FetchFeatureValuesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.searchNearestEntities",
      "resource": "projects.locations.featureOnlineStores.featureViews",
      "action": "searchNearestEntities",
      "http_method": "POST",
      "path_template": "v1/{+featureView}:searchNearestEntities",
      "description": "Search the nearest entities under a FeatureView. Search only works for indexable feature view; if a feature view isn't indexable, returns Invalid argument response.",
      "required_params": [
        "featureView"
      ],
      "parameters": {
        "featureView": {
          "description": "Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1SearchNearestEntitiesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1SearchNearestEntitiesRequest",
        "description": "The request message for FeatureOnlineStoreService.SearchNearestEntities.",
        "type": "object",
        "properties": {
          "query": {
            "description": "Required. The query.",
            "$ref": "GoogleCloudAiplatformV1NearestNeighborQuery"
          },
          "returnFullEntity": {
            "description": "Optional. If set to true, the full entities (including all vector values and metadata) of the nearest neighbors are returned; otherwise only entity id of the nearest neighbors will be returned. Note that returning full entities will significantly increase the latency and cost of the query.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1SearchNearestEntitiesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.operations.listWait",
      "resource": "projects.locations.featureOnlineStores.featureViews.operations",
      "action": "listWait",
      "http_method": "GET",
      "path_template": "v1/{+name}:wait",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.operations.get",
      "resource": "projects.locations.featureOnlineStores.featureViews.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.operations.delete",
      "resource": "projects.locations.featureOnlineStores.featureViews.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.operations.wait",
      "resource": "projects.locations.featureOnlineStores.featureViews.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.featureViewSyncs.get",
      "resource": "projects.locations.featureOnlineStores.featureViews.featureViewSyncs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single FeatureViewSync.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the FeatureViewSync resource. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}/featureViewSyncs/{feature_view_sync}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+/featureViewSyncs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1FeatureViewSync"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.featureViews.featureViewSyncs.list",
      "resource": "projects.locations.featureOnlineStores.featureViews.featureViewSyncs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/featureViewSyncs",
      "description": "Lists FeatureViewSyncs in a given FeatureView.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the FeatureView to list FeatureViewSyncs. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/featureViews/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the FeatureViewSyncs that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. Examples: * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> FeatureViewSyncs created after 2020-01-31T15:30:00.000000Z.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of FeatureViewSyncs to return. The service may return fewer than this value. If unspecified, at most 1000 FeatureViewSyncs will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViewSyncs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureViewSyncs must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `create_time`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListFeatureViewSyncsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.operations.listWait",
      "resource": "projects.locations.featureOnlineStores.operations",
      "action": "listWait",
      "http_method": "GET",
      "path_template": "v1/{+name}:wait",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.operations.get",
      "resource": "projects.locations.featureOnlineStores.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.operations.delete",
      "resource": "projects.locations.featureOnlineStores.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureOnlineStores.operations.wait",
      "resource": "projects.locations.featureOnlineStores.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureOnlineStores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.setIamPolicy",
      "resource": "projects.locations.featureGroups",
      "action": "setIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:setIamPolicy",
      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleIamV1SetIamPolicyRequest",
      "body_schema": {
        "id": "GoogleIamV1SetIamPolicyRequest",
        "description": "Request message for `SetIamPolicy` method.",
        "type": "object",
        "properties": {
          "policy": {
            "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
            "$ref": "GoogleIamV1Policy"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.getIamPolicy",
      "resource": "projects.locations.featureGroups",
      "action": "getIamPolicy",
      "http_method": "POST",
      "path_template": "v1/{+resource}:getIamPolicy",
      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "options.requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1Policy"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.testIamPermissions",
      "resource": "projects.locations.featureGroups",
      "action": "testIamPermissions",
      "http_method": "POST",
      "path_template": "v1/{+resource}:testIamPermissions",
      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "required_params": [
        "resource"
      ],
      "parameters": {
        "resource": {
          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleIamV1TestIamPermissionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.create",
      "resource": "projects.locations.featureGroups",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/featureGroups",
      "description": "Creates a new FeatureGroup in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create FeatureGroups. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "featureGroupId": {
          "description": "Required. The ID to use for this FeatureGroup, which will become the final component of the FeatureGroup's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FeatureGroup",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FeatureGroup",
        "description": "Vertex AI Feature Group.",
        "type": "object",
        "properties": {
          "bigQuery": {
            "description": "Indicates that features for this group come from BigQuery Table/View. By default treats the source as a sparse time series source. The BigQuery source table or view must have at least one entity ID column and a column named `feature_timestamp`.",
            "$ref": "GoogleCloudAiplatformV1FeatureGroupBigQuery"
          },
          "name": {
            "description": "Identifier. Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this FeatureGroup was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this FeatureGroup was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. Description of the FeatureGroup.",
            "type": "string"
          },
          "serviceAgentType": {
            "description": "Optional. Service agent type used during jobs under a FeatureGroup. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureGroup within a project, a separate service account should be provisioned by setting this field to `SERVICE_AGENT_TYPE_FEATURE_GROUP`. This will generate a separate service account to access the BigQuery source table.",
            "type": "string",
            "enumDescriptions": [
              "By default, the project-level Vertex AI Service Agent is enabled.",
              "Specifies the project-level Vertex AI Service Agent (https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents).",
              "Enable a FeatureGroup service account to be created by Vertex AI and output in the field `service_account_email`. This service account will be used to read from the source BigQuery table during jobs under a FeatureGroup."
            ],
            "enum": [
              "SERVICE_AGENT_TYPE_UNSPECIFIED",
              "SERVICE_AGENT_TYPE_PROJECT",
              "SERVICE_AGENT_TYPE_FEATURE_GROUP"
            ]
          },
          "serviceAccountEmail": {
            "description": "Output only. A Service Account unique to this FeatureGroup. The role bigquery.dataViewer should be granted to this service account to allow Vertex AI Feature Store to access source data while running jobs under this FeatureGroup.",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.get",
      "resource": "projects.locations.featureGroups",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single FeatureGroup.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the FeatureGroup resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1FeatureGroup"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.list",
      "resource": "projects.locations.featureGroups",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/featureGroups",
      "description": "Lists FeatureGroups in a given project and location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list FeatureGroups. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the FeatureGroups that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > \"2020-01-01\" OR update_time > \"2020-01-01\"` FeatureGroups created or updated after 2020-01-01. * `labels.env = \"prod\"` FeatureGroups with label \"env\" set to \"prod\".",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of FeatureGroups to return. The service may return fewer than this value. If unspecified, at most 100 FeatureGroups will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous FeatureRegistryService.ListFeatureGroups call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureRegistryService.ListFeatureGroups must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported Fields: * `create_time` * `update_time`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListFeatureGroupsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.patch",
      "resource": "projects.locations.featureGroups",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single FeatureGroup.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Field mask is used to specify the fields to be overwritten in the FeatureGroup resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then only the non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override all fields. Updatable fields: * `labels` * `description` * `big_query` * `big_query.entity_id_columns` * `service_agent_type`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FeatureGroup",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FeatureGroup",
        "description": "Vertex AI Feature Group.",
        "type": "object",
        "properties": {
          "bigQuery": {
            "description": "Indicates that features for this group come from BigQuery Table/View. By default treats the source as a sparse time series source. The BigQuery source table or view must have at least one entity ID column and a column named `feature_timestamp`.",
            "$ref": "GoogleCloudAiplatformV1FeatureGroupBigQuery"
          },
          "name": {
            "description": "Identifier. Name of the FeatureGroup. Format: `projects/{project}/locations/{location}/featureGroups/{featureGroup}`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this FeatureGroup was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this FeatureGroup was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your FeatureGroup. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureGroup(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "description": "Optional. Description of the FeatureGroup.",
            "type": "string"
          },
          "serviceAgentType": {
            "description": "Optional. Service agent type used during jobs under a FeatureGroup. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureGroup within a project, a separate service account should be provisioned by setting this field to `SERVICE_AGENT_TYPE_FEATURE_GROUP`. This will generate a separate service account to access the BigQuery source table.",
            "type": "string",
            "enumDescriptions": [
              "By default, the project-level Vertex AI Service Agent is enabled.",
              "Specifies the project-level Vertex AI Service Agent (https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents).",
              "Enable a FeatureGroup service account to be created by Vertex AI and output in the field `service_account_email`. This service account will be used to read from the source BigQuery table during jobs under a FeatureGroup."
            ],
            "enum": [
              "SERVICE_AGENT_TYPE_UNSPECIFIED",
              "SERVICE_AGENT_TYPE_PROJECT",
              "SERVICE_AGENT_TYPE_FEATURE_GROUP"
            ]
          },
          "serviceAccountEmail": {
            "description": "Output only. A Service Account unique to this FeatureGroup. The role bigquery.dataViewer should be granted to this service account to allow Vertex AI Feature Store to access source data while running jobs under this FeatureGroup.",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.delete",
      "resource": "projects.locations.featureGroups",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single FeatureGroup.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the FeatureGroup to be deleted. Format: `projects/{project}/locations/{location}/featureGroups/{feature_group}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "If set to true, any Features under this FeatureGroup will also be deleted. (Otherwise, the request will only work if the FeatureGroup has no Features.)",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.operations.listWait",
      "resource": "projects.locations.featureGroups.operations",
      "action": "listWait",
      "http_method": "GET",
      "path_template": "v1/{+name}:wait",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.operations.get",
      "resource": "projects.locations.featureGroups.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.operations.delete",
      "resource": "projects.locations.featureGroups.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.operations.wait",
      "resource": "projects.locations.featureGroups.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.features.create",
      "resource": "projects.locations.featureGroups.features",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/features",
      "description": "Creates a new Feature in a given FeatureGroup.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "featureId": {
          "description": "Required. The ID to use for the Feature, which will become the final component of the Feature's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Feature",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Feature",
        "description": "Feature Metadata information. For example, color is a feature that describes an apple.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.",
            "type": "string"
          },
          "description": {
            "description": "Description of the Feature.",
            "type": "string"
          },
          "valueType": {
            "description": "Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.",
            "type": "string",
            "enumDescriptions": [
              "The value type is unspecified.",
              "Used for Feature that is a boolean.",
              "Used for Feature that is a list of boolean.",
              "Used for Feature that is double.",
              "Used for Feature that is a list of double.",
              "Used for Feature that is INT64.",
              "Used for Feature that is a list of INT64.",
              "Used for Feature that is string.",
              "Used for Feature that is a list of String.",
              "Used for Feature that is bytes.",
              "Used for Feature that is struct."
            ],
            "enum": [
              "VALUE_TYPE_UNSPECIFIED",
              "BOOL",
              "BOOL_ARRAY",
              "DOUBLE",
              "DOUBLE_ARRAY",
              "INT64",
              "INT64_ARRAY",
              "STRING",
              "STRING_ARRAY",
              "BYTES",
              "STRUCT"
            ]
          },
          "createTime": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "disableMonitoring": {
            "description": "Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.",
            "type": "boolean"
          },
          "monitoringStatsAnomalies": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly"
            }
          },
          "versionColumnName": {
            "description": "Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id.",
            "type": "string"
          },
          "pointOfContact": {
            "description": "Entity responsible for maintaining this feature. Can be comma separated list of email addresses or URIs.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.features.batchCreate",
      "resource": "projects.locations.featureGroups.features",
      "action": "batchCreate",
      "http_method": "POST",
      "path_template": "v1/{+parent}/features:batchCreate",
      "description": "Creates a batch of Features in a given FeatureGroup.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the EntityType/FeatureGroup to create the batch of Features under. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` `projects/{project}/locations/{location}/featureGroups/{feature_group}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchCreateFeaturesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchCreateFeaturesRequest",
        "description": "Request message for FeaturestoreService.BatchCreateFeatures. Request message for FeatureRegistryService.BatchCreateFeatures.",
        "type": "object",
        "properties": {
          "requests": {
            "description": "Required. The request message specifying the Features to create. All Features must be created under the same parent EntityType / FeatureGroup. The `parent` field in each child request message can be omitted. If `parent` is set in a child request, then the value must match the `parent` value in this request message.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1CreateFeatureRequest"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.features.get",
      "resource": "projects.locations.featureGroups.features",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets details of a single Feature.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Feature resource. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Feature"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.features.list",
      "resource": "projects.locations.featureGroups.features",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/features",
      "description": "Lists Features in a given FeatureGroup.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list Features. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the Features that match the filter expression. The following filters are supported: * `value_type`: Supports = and != comparisons. * `create_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\" OR update_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with 'env' as the key.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 1000 Features will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous FeaturestoreService.ListFeatures call or FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `feature_id` * `value_type` (Not supported for FeatureRegistry Feature) * `create_time` * `update_time`",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "latestStatsCount": {
          "description": "Only applicable for Vertex AI Feature Store (Legacy). If set, return the most recent ListFeaturesRequest.latest_stats_count of stats for each Feature in response. Valid value is [0, 10]. If number of stats exists < ListFeaturesRequest.latest_stats_count, return all existing stats.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListFeaturesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.features.patch",
      "resource": "projects.locations.featureGroups.features",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates the parameters of a single Feature.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Field mask is used to specify the fields to be overwritten in the Features resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then only the non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override all fields. Updatable fields: * `description` * `labels` * `disable_monitoring` (Not supported for FeatureRegistryService Feature) * `point_of_contact` (Not supported for FeaturestoreService FeatureStore)",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Feature",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Feature",
        "description": "Feature Metadata information. For example, color is a feature that describes an apple.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.",
            "type": "string"
          },
          "description": {
            "description": "Description of the Feature.",
            "type": "string"
          },
          "valueType": {
            "description": "Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.",
            "type": "string",
            "enumDescriptions": [
              "The value type is unspecified.",
              "Used for Feature that is a boolean.",
              "Used for Feature that is a list of boolean.",
              "Used for Feature that is double.",
              "Used for Feature that is a list of double.",
              "Used for Feature that is INT64.",
              "Used for Feature that is a list of INT64.",
              "Used for Feature that is string.",
              "Used for Feature that is a list of String.",
              "Used for Feature that is bytes.",
              "Used for Feature that is struct."
            ],
            "enum": [
              "VALUE_TYPE_UNSPECIFIED",
              "BOOL",
              "BOOL_ARRAY",
              "DOUBLE",
              "DOUBLE_ARRAY",
              "INT64",
              "INT64_ARRAY",
              "STRING",
              "STRING_ARRAY",
              "BYTES",
              "STRUCT"
            ]
          },
          "createTime": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "disableMonitoring": {
            "description": "Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.",
            "type": "boolean"
          },
          "monitoringStatsAnomalies": {
            "description": "Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly"
            }
          },
          "versionColumnName": {
            "description": "Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id.",
            "type": "string"
          },
          "pointOfContact": {
            "description": "Entity responsible for maintaining this feature. Can be comma separated list of email addresses or URIs.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.features.delete",
      "resource": "projects.locations.featureGroups.features",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single Feature.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Features to be deleted. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.features.operations.listWait",
      "resource": "projects.locations.featureGroups.features.operations",
      "action": "listWait",
      "http_method": "GET",
      "path_template": "v1/{+name}:wait",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.features.operations.get",
      "resource": "projects.locations.featureGroups.features.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.features.operations.delete",
      "resource": "projects.locations.featureGroups.features.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.featureGroups.features.operations.wait",
      "resource": "projects.locations.featureGroups.features.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/featureGroups/[^/]+/features/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.operations.list",
      "resource": "projects.locations.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.operations.get",
      "resource": "projects.locations.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.operations.delete",
      "resource": "projects.locations.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.operations.cancel",
      "resource": "projects.locations.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.operations.wait",
      "resource": "projects.locations.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragEngineConfig.operations.list",
      "resource": "projects.locations.ragEngineConfig.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragEngineConfig$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragEngineConfig.operations.get",
      "resource": "projects.locations.ragEngineConfig.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragEngineConfig/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragEngineConfig.operations.delete",
      "resource": "projects.locations.ragEngineConfig.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragEngineConfig/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragEngineConfig.operations.cancel",
      "resource": "projects.locations.ragEngineConfig.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragEngineConfig/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragEngineConfig.operations.wait",
      "resource": "projects.locations.ragEngineConfig.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragEngineConfig/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.create",
      "resource": "projects.locations.datasets",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/datasets",
      "description": "Creates a Dataset.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the Dataset in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Dataset",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Dataset",
        "description": "A collection of DataItems and Annotations on them.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Identifier. The resource name of the Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the Dataset.",
            "type": "string"
          },
          "metadataSchemaUri": {
            "description": "Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.",
            "type": "string"
          },
          "metadata": {
            "description": "Required. Additional information about the Dataset.",
            "type": "any"
          },
          "dataItemCount": {
            "description": "Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "createTime": {
            "description": "Output only. Timestamp when this Dataset was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Dataset was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Dataset: * \"aiplatform.googleapis.com/dataset_metadata_schema\": output only, its value is the metadata_schema's title.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "savedQueries": {
            "description": "All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SavedQuery"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "metadataArtifact": {
            "description": "Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.",
            "readOnly": true,
            "type": "string"
          },
          "modelReference": {
            "description": "Optional. Reference to the public base model last used by the dataset. Only set for prompt datasets.",
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.get",
      "resource": "projects.locations.datasets",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a Dataset.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Dataset resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Dataset"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.patch",
      "resource": "projects.locations.datasets",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a Dataset.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. Identifier. The resource name of the Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see google.protobuf.FieldMask. Updatable fields: * `display_name` * `description` * `labels`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Dataset",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Dataset",
        "description": "A collection of DataItems and Annotations on them.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Identifier. The resource name of the Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the Dataset.",
            "type": "string"
          },
          "metadataSchemaUri": {
            "description": "Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.",
            "type": "string"
          },
          "metadata": {
            "description": "Required. Additional information about the Dataset.",
            "type": "any"
          },
          "dataItemCount": {
            "description": "Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "createTime": {
            "description": "Output only. Timestamp when this Dataset was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Dataset was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Dataset: * \"aiplatform.googleapis.com/dataset_metadata_schema\": output only, its value is the metadata_schema's title.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "savedQueries": {
            "description": "All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SavedQuery"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "metadataArtifact": {
            "description": "Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.",
            "readOnly": true,
            "type": "string"
          },
          "modelReference": {
            "description": "Optional. Reference to the public base model last used by the dataset. Only set for prompt datasets.",
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Dataset"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.list",
      "resource": "projects.locations.datasets",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/datasets",
      "description": "Lists Datasets in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the Dataset's parent resource. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`: supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListDatasetsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.delete",
      "resource": "projects.locations.datasets",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Dataset.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Dataset to delete. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.import",
      "resource": "projects.locations.datasets",
      "action": "import",
      "http_method": "POST",
      "path_template": "v1/{+name}:import",
      "description": "Imports data into a Dataset.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ImportDataRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ImportDataRequest",
        "description": "Request message for DatasetService.ImportData.",
        "type": "object",
        "properties": {
          "importConfigs": {
            "description": "Required. The desired input locations. The contents of all input locations will be imported in one batch.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1ImportDataConfig"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.export",
      "resource": "projects.locations.datasets",
      "action": "export",
      "http_method": "POST",
      "path_template": "v1/{+name}:export",
      "description": "Exports data from a Dataset.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ExportDataRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ExportDataRequest",
        "description": "Request message for DatasetService.ExportData.",
        "type": "object",
        "properties": {
          "exportConfig": {
            "description": "Required. The desired output location.",
            "$ref": "GoogleCloudAiplatformV1ExportDataConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.searchDataItems",
      "resource": "projects.locations.datasets",
      "action": "searchDataItems",
      "http_method": "GET",
      "path_template": "v1/{+dataset}:searchDataItems",
      "description": "Searches DataItems in a Dataset.",
      "required_params": [
        "dataset"
      ],
      "parameters": {
        "dataset": {
          "description": "Required. The resource name of the Dataset from which to search DataItems. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "orderByDataItem": {
          "description": "A comma-separated list of data item fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.",
          "location": "query",
          "type": "string"
        },
        "orderByAnnotation.savedQuery": {
          "description": "Required. Saved query of the Annotation. Only Annotations belong to this saved query will be considered for ordering.",
          "location": "query",
          "type": "string"
        },
        "orderByAnnotation.orderBy": {
          "description": "A comma-separated list of annotation fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Must also specify saved_query.",
          "location": "query",
          "type": "string"
        },
        "savedQuery": {
          "description": "The resource name of a SavedQuery(annotation set in UI). Format: `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}` All of the search will be done in the context of this SavedQuery.",
          "location": "query",
          "deprecated": true,
          "type": "string"
        },
        "dataLabelingJob": {
          "description": "The resource name of a DataLabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` If this field is set, all of the search will be done in the context of this DataLabelingJob.",
          "location": "query",
          "type": "string"
        },
        "dataItemFilter": {
          "description": "An expression for filtering the DataItem that will be returned. * `data_item_id` - for = or !=. * `labeled` - for = or !=. * `has_annotation(ANNOTATION_SPEC_ID)` - true only for DataItem that have at least one annotation with annotation_spec_id = `ANNOTATION_SPEC_ID` in the context of SavedQuery or DataLabelingJob. For example: * `data_item=1` * `has_annotation(5)`",
          "location": "query",
          "type": "string"
        },
        "annotationsFilter": {
          "description": "An expression for filtering the Annotations that will be returned per DataItem. * `annotation_spec_id` - for = or !=.",
          "location": "query",
          "deprecated": true,
          "type": "string"
        },
        "annotationFilters": {
          "description": "An expression that specifies what Annotations will be returned per DataItem. Annotations satisfied either of the conditions will be returned. * `annotation_spec_id` - for = or !=. Must specify `saved_query_id=` - saved query id that annotations should belong to.",
          "location": "query",
          "repeated": true,
          "type": "string"
        },
        "fieldMask": {
          "description": "Mask specifying which fields of DataItemView to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "annotationsLimit": {
          "description": "If set, only up to this many of Annotations will be returned per DataItemView. The maximum value is 1000. If not set, the maximum value will be used.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Requested page size. Server may return fewer results than requested. Default and maximum page size is 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.",
          "location": "query",
          "deprecated": true,
          "type": "string"
        },
        "pageToken": {
          "description": "A token identifying a page of results for the server to return Typically obtained via SearchDataItemsResponse.next_page_token of the previous DatasetService.SearchDataItems call.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1SearchDataItemsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.operations.list",
      "resource": "projects.locations.datasets.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.operations.get",
      "resource": "projects.locations.datasets.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.operations.delete",
      "resource": "projects.locations.datasets.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.operations.cancel",
      "resource": "projects.locations.datasets.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.operations.wait",
      "resource": "projects.locations.datasets.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.datasetVersions.create",
      "resource": "projects.locations.datasets.datasetVersions",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/datasetVersions",
      "description": "Create a version from a Dataset.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DatasetVersion",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DatasetVersion",
        "description": "Describes the dataset version.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Identifier. The resource name of the DatasetVersion. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this DatasetVersion was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this DatasetVersion was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "bigQueryDatasetName": {
            "description": "Output only. Name of the associated BigQuery dataset.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The user-defined name of the DatasetVersion. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "metadata": {
            "description": "Required. Output only. Additional information about the DatasetVersion.",
            "readOnly": true,
            "type": "any"
          },
          "modelReference": {
            "description": "Output only. Reference to the public base model last used by the dataset version. Only set for prompt dataset versions.",
            "readOnly": true,
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.datasetVersions.patch",
      "resource": "projects.locations.datasets.datasetVersions",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a DatasetVersion.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. Identifier. The resource name of the DatasetVersion. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see google.protobuf.FieldMask. Updatable fields: * `display_name`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DatasetVersion",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DatasetVersion",
        "description": "Describes the dataset version.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Identifier. The resource name of the DatasetVersion. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this DatasetVersion was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this DatasetVersion was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "bigQueryDatasetName": {
            "description": "Output only. Name of the associated BigQuery dataset.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The user-defined name of the DatasetVersion. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "metadata": {
            "description": "Required. Output only. Additional information about the DatasetVersion.",
            "readOnly": true,
            "type": "any"
          },
          "modelReference": {
            "description": "Output only. Reference to the public base model last used by the dataset version. Only set for prompt dataset versions.",
            "readOnly": true,
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1DatasetVersion"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.datasetVersions.delete",
      "resource": "projects.locations.datasets.datasetVersions",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Dataset version.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Dataset version to delete. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.datasetVersions.get",
      "resource": "projects.locations.datasets.datasetVersions",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a Dataset version.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Dataset version to delete. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1DatasetVersion"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.datasetVersions.list",
      "resource": "projects.locations.datasets.datasetVersions",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/datasetVersions",
      "description": "Lists DatasetVersions in a Dataset.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Dataset to list DatasetVersions from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Optional. Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "Optional. A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListDatasetVersionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.datasetVersions.restore",
      "resource": "projects.locations.datasets.datasetVersions",
      "action": "restore",
      "http_method": "GET",
      "path_template": "v1/{+name}:restore",
      "description": "Restores a dataset version.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the DatasetVersion resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/datasetVersions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.list",
      "resource": "projects.locations.datasets.dataItems",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/dataItems",
      "description": "Lists DataItems in a Dataset.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Dataset to list DataItems from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListDataItemsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.operations.list",
      "resource": "projects.locations.datasets.dataItems.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.operations.get",
      "resource": "projects.locations.datasets.dataItems.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.operations.delete",
      "resource": "projects.locations.datasets.dataItems.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.operations.cancel",
      "resource": "projects.locations.datasets.dataItems.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.operations.wait",
      "resource": "projects.locations.datasets.dataItems.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.annotations.list",
      "resource": "projects.locations.datasets.dataItems.annotations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/annotations",
      "description": "Lists Annotations belongs to a dataitem.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the DataItem to list Annotations from. Format: `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListAnnotationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.annotations.operations.list",
      "resource": "projects.locations.datasets.dataItems.annotations.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.annotations.operations.get",
      "resource": "projects.locations.datasets.dataItems.annotations.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.annotations.operations.delete",
      "resource": "projects.locations.datasets.dataItems.annotations.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.annotations.operations.cancel",
      "resource": "projects.locations.datasets.dataItems.annotations.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.dataItems.annotations.operations.wait",
      "resource": "projects.locations.datasets.dataItems.annotations.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataItems/[^/]+/annotations/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.savedQueries.list",
      "resource": "projects.locations.datasets.savedQueries",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/savedQueries",
      "description": "Lists SavedQueries in a Dataset.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Dataset to list SavedQueries from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListSavedQueriesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.savedQueries.delete",
      "resource": "projects.locations.datasets.savedQueries",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a SavedQuery.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the SavedQuery to delete. Format: `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.savedQueries.operations.list",
      "resource": "projects.locations.datasets.savedQueries.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.savedQueries.operations.get",
      "resource": "projects.locations.datasets.savedQueries.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.savedQueries.operations.delete",
      "resource": "projects.locations.datasets.savedQueries.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.savedQueries.operations.cancel",
      "resource": "projects.locations.datasets.savedQueries.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.savedQueries.operations.wait",
      "resource": "projects.locations.datasets.savedQueries.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/savedQueries/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.annotationSpecs.get",
      "resource": "projects.locations.datasets.annotationSpecs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an AnnotationSpec.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the AnnotationSpec resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}/annotationSpecs/{annotation_spec}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1AnnotationSpec"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.annotationSpecs.operations.list",
      "resource": "projects.locations.datasets.annotationSpecs.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.annotationSpecs.operations.get",
      "resource": "projects.locations.datasets.annotationSpecs.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.annotationSpecs.operations.delete",
      "resource": "projects.locations.datasets.annotationSpecs.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.annotationSpecs.operations.cancel",
      "resource": "projects.locations.datasets.annotationSpecs.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.datasets.annotationSpecs.operations.wait",
      "resource": "projects.locations.datasets.annotationSpecs.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/annotationSpecs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.create",
      "resource": "projects.locations.deploymentResourcePools",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/deploymentResourcePools",
      "description": "Create a DeploymentResourcePool.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent location resource where this DeploymentResourcePool will be created. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest",
        "description": "Request message for CreateDeploymentResourcePool method.",
        "type": "object",
        "properties": {
          "deploymentResourcePool": {
            "description": "Required. The DeploymentResourcePool to create.",
            "$ref": "GoogleCloudAiplatformV1DeploymentResourcePool"
          },
          "deploymentResourcePoolId": {
            "description": "Required. The ID to use for the DeploymentResourcePool, which will become the final component of the DeploymentResourcePool's resource name. The maximum length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.get",
      "resource": "projects.locations.deploymentResourcePools",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Get a DeploymentResourcePool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the DeploymentResourcePool to retrieve. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1DeploymentResourcePool"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.list",
      "resource": "projects.locations.deploymentResourcePools",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/deploymentResourcePools",
      "description": "List DeploymentResourcePools in a location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent Location which owns this collection of DeploymentResourcePools. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of DeploymentResourcePools to return. The service may return fewer than this value.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous `ListDeploymentResourcePools` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDeploymentResourcePools` must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListDeploymentResourcePoolsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.patch",
      "resource": "projects.locations.deploymentResourcePools",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Update a DeploymentResourcePool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DeploymentResourcePool",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DeploymentResourcePool",
        "description": "A description of resources that can be shared by multiple DeployedModels, whose underlying specification consists of a DedicatedResources.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The resource name of the DeploymentResourcePool. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`",
            "type": "string"
          },
          "dedicatedResources": {
            "description": "Required. The underlying DedicatedResources that the DeploymentResourcePool uses.",
            "$ref": "GoogleCloudAiplatformV1DedicatedResources"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a DeploymentResourcePool. If set, this DeploymentResourcePool will be secured by this key. Endpoints and the DeploymentResourcePool they deploy in need to have the same EncryptionSpec.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "serviceAccount": {
            "description": "The service account that the DeploymentResourcePool's container(s) run as. Specify the email address of the service account. If this service account is not specified, the container(s) run as a service account that doesn't have access to the resource project. Users deploying the Models to this DeploymentResourcePool must have the `iam.serviceAccounts.actAs` permission on this service account.",
            "type": "string"
          },
          "disableContainerLogging": {
            "description": "If the DeploymentResourcePool is deployed with custom-trained Models or AutoML Tabular Models, the container(s) of the DeploymentResourcePool will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.",
            "type": "boolean"
          },
          "createTime": {
            "description": "Output only. Timestamp when this DeploymentResourcePool was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.delete",
      "resource": "projects.locations.deploymentResourcePools",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Delete a DeploymentResourcePool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the DeploymentResourcePool to delete. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.queryDeployedModels",
      "resource": "projects.locations.deploymentResourcePools",
      "action": "queryDeployedModels",
      "http_method": "GET",
      "path_template": "v1/{+deploymentResourcePool}:queryDeployedModels",
      "description": "List DeployedModels that have been deployed on this DeploymentResourcePool.",
      "required_params": [
        "deploymentResourcePool"
      ],
      "parameters": {
        "deploymentResourcePool": {
          "description": "Required. The name of the target DeploymentResourcePool to query. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of DeployedModels to return. The service may return fewer than this value.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous `QueryDeployedModels` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `QueryDeployedModels` must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1QueryDeployedModelsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.operations.list",
      "resource": "projects.locations.deploymentResourcePools.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.operations.get",
      "resource": "projects.locations.deploymentResourcePools.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.operations.delete",
      "resource": "projects.locations.deploymentResourcePools.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.operations.cancel",
      "resource": "projects.locations.deploymentResourcePools.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.deploymentResourcePools.operations.wait",
      "resource": "projects.locations.deploymentResourcePools.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/deploymentResourcePools/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.create",
      "resource": "projects.locations.endpoints",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/endpoints",
      "description": "Creates an Endpoint.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the Endpoint in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "endpointId": {
          "description": "Immutable. The ID to use for endpoint, which will become the final component of the endpoint resource name. If not provided, Vertex AI will generate a value for this ID. If the first character is a letter, this value may be up to 63 characters, and valid characters are `[a-z0-9-]`. The last character must be a letter or number. If the first character is a number, this value may be up to 9 characters, and valid characters are `[0-9]` with no leading zeros. When using HTTP/JSON, this field is populated based on a query string argument, such as `?endpoint_id=12345`. This is the fallback for fields that are not included in either the URI or the body.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Endpoint",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Endpoint",
        "description": "Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the Endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the Endpoint.",
            "type": "string"
          },
          "deployedModels": {
            "description": "Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1DeployedModel"
            }
          },
          "trafficSplit": {
            "description": "A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Endpoint was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Endpoint was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for an Endpoint. If set, this Endpoint and all sub-resources of this Endpoint will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "network": {
            "description": "Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name.",
            "type": "string"
          },
          "enablePrivateServiceConnect": {
            "description": "Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.",
            "deprecated": true,
            "type": "boolean"
          },
          "privateServiceConnectConfig": {
            "description": "Optional. Configuration for private service connect. network and private_service_connect_config are mutually exclusive.",
            "$ref": "GoogleCloudAiplatformV1PrivateServiceConnectConfig"
          },
          "modelDeploymentMonitoringJob": {
            "description": "Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`",
            "readOnly": true,
            "type": "string"
          },
          "predictRequestResponseLoggingConfig": {
            "description": "Configures the request-response logging for online prediction.",
            "$ref": "GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig"
          },
          "dedicatedEndpointEnabled": {
            "description": "If true, the endpoint will be exposed through a dedicated DNS [Endpoint.dedicated_endpoint_dns]. Your request to the dedicated DNS will be isolated from other users' traffic and will have better performance and reliability. Note: Once you enabled dedicated endpoint, you won't be able to send request to the shared DNS {region}-aiplatform.googleapis.com. The limitation will be removed soon.",
            "type": "boolean"
          },
          "dedicatedEndpointDns": {
            "description": "Output only. DNS of the dedicated endpoint. Will only be populated if dedicated_endpoint_enabled is true. Depending on the features enabled, uid might be a random number or a string. For example, if fast_tryout is enabled, uid will be fasttryout. Format: `https://{endpoint_id}.{region}-{uid}.prediction.vertexai.goog`.",
            "readOnly": true,
            "type": "string"
          },
          "clientConnectionConfig": {
            "description": "Configurations that are applied to the endpoint for online prediction.",
            "$ref": "GoogleCloudAiplatformV1ClientConnectionConfig"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "genAiAdvancedFeaturesConfig": {
            "description": "Optional. Configuration for GenAiAdvancedFeatures. If the endpoint is serving GenAI models, advanced features like native RAG integration can be configured. Currently, only Model Garden models are supported.",
            "$ref": "GoogleCloudAiplatformV1GenAiAdvancedFeaturesConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.get",
      "resource": "projects.locations.endpoints",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an Endpoint.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Endpoint resource. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Endpoint"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.list",
      "resource": "projects.locations.endpoints",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/endpoints",
      "description": "Lists Endpoints in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location from which to list the Endpoints. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `endpoint` supports `=` and `!=`. `endpoint` represents the Endpoint ID, i.e. the last segment of the Endpoint's resource name. * `display_name` supports `=` and `!=`. * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:*` or `labels:key` - key existence * A key including a space must be quoted. `labels.\"a key\"`. * `base_model_name` only supports `=`. Some examples: * `endpoint=1` * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"` * `baseModelName=\"text-bison\"`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token. Typically obtained via ListEndpointsResponse.next_page_token of the previous EndpointService.ListEndpoints call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Optional. Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListEndpointsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.patch",
      "resource": "projects.locations.endpoints",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an Endpoint.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the Endpoint.",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. See google.protobuf.FieldMask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Endpoint",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Endpoint",
        "description": "Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the Endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the Endpoint.",
            "type": "string"
          },
          "deployedModels": {
            "description": "Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1DeployedModel"
            }
          },
          "trafficSplit": {
            "description": "A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Endpoint was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Endpoint was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for an Endpoint. If set, this Endpoint and all sub-resources of this Endpoint will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "network": {
            "description": "Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name.",
            "type": "string"
          },
          "enablePrivateServiceConnect": {
            "description": "Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.",
            "deprecated": true,
            "type": "boolean"
          },
          "privateServiceConnectConfig": {
            "description": "Optional. Configuration for private service connect. network and private_service_connect_config are mutually exclusive.",
            "$ref": "GoogleCloudAiplatformV1PrivateServiceConnectConfig"
          },
          "modelDeploymentMonitoringJob": {
            "description": "Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`",
            "readOnly": true,
            "type": "string"
          },
          "predictRequestResponseLoggingConfig": {
            "description": "Configures the request-response logging for online prediction.",
            "$ref": "GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig"
          },
          "dedicatedEndpointEnabled": {
            "description": "If true, the endpoint will be exposed through a dedicated DNS [Endpoint.dedicated_endpoint_dns]. Your request to the dedicated DNS will be isolated from other users' traffic and will have better performance and reliability. Note: Once you enabled dedicated endpoint, you won't be able to send request to the shared DNS {region}-aiplatform.googleapis.com. The limitation will be removed soon.",
            "type": "boolean"
          },
          "dedicatedEndpointDns": {
            "description": "Output only. DNS of the dedicated endpoint. Will only be populated if dedicated_endpoint_enabled is true. Depending on the features enabled, uid might be a random number or a string. For example, if fast_tryout is enabled, uid will be fasttryout. Format: `https://{endpoint_id}.{region}-{uid}.prediction.vertexai.goog`.",
            "readOnly": true,
            "type": "string"
          },
          "clientConnectionConfig": {
            "description": "Configurations that are applied to the endpoint for online prediction.",
            "$ref": "GoogleCloudAiplatformV1ClientConnectionConfig"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "genAiAdvancedFeaturesConfig": {
            "description": "Optional. Configuration for GenAiAdvancedFeatures. If the endpoint is serving GenAI models, advanced features like native RAG integration can be configured. Currently, only Model Garden models are supported.",
            "$ref": "GoogleCloudAiplatformV1GenAiAdvancedFeaturesConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Endpoint"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.update",
      "resource": "projects.locations.endpoints",
      "action": "update",
      "http_method": "POST",
      "path_template": "v1/{+name}:update",
      "description": "Updates an Endpoint with a long running operation.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the Endpoint.",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1UpdateEndpointLongRunningRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1UpdateEndpointLongRunningRequest",
        "description": "Request message for EndpointService.UpdateEndpointLongRunning.",
        "type": "object",
        "properties": {
          "endpoint": {
            "description": "Required. The Endpoint which replaces the resource on the server. Currently we only support updating the `client_connection_config` field, all the other fields' update will be blocked.",
            "$ref": "GoogleCloudAiplatformV1Endpoint"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.delete",
      "resource": "projects.locations.endpoints",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes an Endpoint.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Endpoint resource to be deleted. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.deployModel",
      "resource": "projects.locations.endpoints",
      "action": "deployModel",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:deployModel",
      "description": "Deploys a Model into this Endpoint, creating a DeployedModel within it.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint resource into which to deploy a Model. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DeployModelRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DeployModelRequest",
        "description": "Request message for EndpointService.DeployModel.",
        "type": "object",
        "properties": {
          "deployedModel": {
            "description": "Required. The DeployedModel to be created within the Endpoint. Note that Endpoint.traffic_split must be updated for the DeployedModel to start receiving traffic, either as part of this call, or via EndpointService.UpdateEndpoint.",
            "$ref": "GoogleCloudAiplatformV1DeployedModel"
          },
          "trafficSplit": {
            "description": "A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If this field is non-empty, then the Endpoint's traffic_split will be overwritten with it. To refer to the ID of the just being deployed Model, a \"0\" should be used, and the actual ID of the new DeployedModel will be filled in its place by this method. The traffic percentage values must add up to 100. If this field is empty, then the Endpoint's traffic_split is not updated.",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.undeployModel",
      "resource": "projects.locations.endpoints",
      "action": "undeployModel",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:undeployModel",
      "description": "Undeploys a Model from an Endpoint, removing a DeployedModel from it, and freeing all resources it's using.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint resource from which to undeploy a Model. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1UndeployModelRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1UndeployModelRequest",
        "description": "Request message for EndpointService.UndeployModel.",
        "type": "object",
        "properties": {
          "deployedModelId": {
            "description": "Required. The ID of the DeployedModel to be undeployed from the Endpoint.",
            "type": "string"
          },
          "trafficSplit": {
            "description": "If this field is provided, then the Endpoint's traffic_split will be overwritten with it. If last DeployedModel is being undeployed from the Endpoint, the [Endpoint.traffic_split] will always end up empty when this call returns. A DeployedModel will be successfully undeployed only if it doesn't have any traffic assigned to it when this method executes, or if this field unassigns any traffic to it.",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.mutateDeployedModel",
      "resource": "projects.locations.endpoints",
      "action": "mutateDeployedModel",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:mutateDeployedModel",
      "description": "Updates an existing deployed model. Updatable fields include `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`, `disable_container_logging` (v1 only), and `enable_container_logging` (v1beta1 only).",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint resource into which to mutate a DeployedModel. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1MutateDeployedModelRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1MutateDeployedModelRequest",
        "description": "Request message for EndpointService.MutateDeployedModel.",
        "type": "object",
        "properties": {
          "deployedModel": {
            "description": "Required. The DeployedModel to be mutated within the Endpoint. Only the following fields can be mutated: * `min_replica_count` in either DedicatedResources or AutomaticResources * `max_replica_count` in either DedicatedResources or AutomaticResources * autoscaling_metric_specs * `disable_container_logging` (v1 only) * `enable_container_logging` (v1beta1 only)",
            "$ref": "GoogleCloudAiplatformV1DeployedModel"
          },
          "updateMask": {
            "description": "Required. The update mask applies to the resource. See google.protobuf.FieldMask.",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.predict",
      "resource": "projects.locations.endpoints",
      "action": "predict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:predict",
      "description": "Perform an online prediction.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PredictRequest",
        "description": "Request message for PredictionService.Predict.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "parameters": {
            "description": "The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1PredictResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.rawPredict",
      "resource": "projects.locations.endpoints",
      "action": "rawPredict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:rawPredict",
      "description": "Perform an online prediction with an arbitrary HTTP payload. The response includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's DeployedModel that served this prediction.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1RawPredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1RawPredictRequest",
        "description": "Request message for PredictionService.RawPredict.",
        "type": "object",
        "properties": {
          "httpBody": {
            "description": "The prediction input. Supports HTTP headers and arbitrary data payload. A DeployedModel may have an upper limit on the number of instances it supports per request. When this limit it is exceeded for an AutoML model, the RawPredict method returns an error. When this limit is exceeded for a custom-trained model, the behavior varies depending on the model. You can specify the schema for each instance in the predict_schemata.instance_schema_uri field when you create a Model. This schema applies when you deploy the `Model` as a `DeployedModel` to an Endpoint and use the `RawPredict` method.",
            "$ref": "GoogleApiHttpBody"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleApiHttpBody"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.streamRawPredict",
      "resource": "projects.locations.endpoints",
      "action": "streamRawPredict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:streamRawPredict",
      "description": "Perform a streaming online prediction with an arbitrary HTTP payload.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1StreamRawPredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1StreamRawPredictRequest",
        "description": "Request message for PredictionService.StreamRawPredict.",
        "type": "object",
        "properties": {
          "httpBody": {
            "description": "The prediction input. Supports HTTP headers and arbitrary data payload.",
            "$ref": "GoogleApiHttpBody"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleApiHttpBody"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.directPredict",
      "resource": "projects.locations.endpoints",
      "action": "directPredict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:directPredict",
      "description": "Perform an unary online prediction request to a gRPC model server for Vertex first-party products and frameworks.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DirectPredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DirectPredictRequest",
        "description": "Request message for PredictionService.DirectPredict.",
        "type": "object",
        "properties": {
          "inputs": {
            "description": "The prediction input.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tensor"
            }
          },
          "parameters": {
            "description": "The parameters that govern the prediction.",
            "$ref": "GoogleCloudAiplatformV1Tensor"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1DirectPredictResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.directRawPredict",
      "resource": "projects.locations.endpoints",
      "action": "directRawPredict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:directRawPredict",
      "description": "Perform an unary online prediction request to a gRPC model server for custom containers.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DirectRawPredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DirectRawPredictRequest",
        "description": "Request message for PredictionService.DirectRawPredict.",
        "type": "object",
        "properties": {
          "methodName": {
            "description": "Fully qualified name of the API method being invoked to perform predictions. Format: `/namespace.Service/Method/` Example: `/tensorflow.serving.PredictionService/Predict`",
            "type": "string"
          },
          "input": {
            "description": "The prediction input.",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1DirectRawPredictResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.serverStreamingPredict",
      "resource": "projects.locations.endpoints",
      "action": "serverStreamingPredict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:serverStreamingPredict",
      "description": "Perform a server-side streaming online prediction request for Vertex LLM streaming.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1StreamingPredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1StreamingPredictRequest",
        "description": "Request message for PredictionService.StreamingPredict. The first message must contain endpoint field and optionally input. The subsequent messages must contain input.",
        "type": "object",
        "properties": {
          "inputs": {
            "description": "The prediction input.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tensor"
            }
          },
          "parameters": {
            "description": "The parameters that govern the prediction.",
            "$ref": "GoogleCloudAiplatformV1Tensor"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1StreamingPredictResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.predictLongRunning",
      "resource": "projects.locations.endpoints",
      "action": "predictLongRunning",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:predictLongRunning",
      "description": "",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PredictLongRunningRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PredictLongRunningRequest",
        "description": "Request message for PredictionService.PredictLongRunning.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "parameters": {
            "description": "Optional. The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.fetchPredictOperation",
      "resource": "projects.locations.endpoints",
      "action": "fetchPredictOperation",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:fetchPredictOperation",
      "description": "Fetch an asynchronous online prediction operation.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FetchPredictOperationRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FetchPredictOperationRequest",
        "description": "Request message for PredictionService.FetchPredictOperation.",
        "type": "object",
        "properties": {
          "operationName": {
            "description": "Required. The server-assigned name for the operation.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.explain",
      "resource": "projects.locations.endpoints",
      "action": "explain",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:explain",
      "description": "Perform an online explanation. If deployed_model_id is specified, the corresponding DeployModel must have explanation_spec populated. If deployed_model_id is not specified, all DeployedModels must have explanation_spec populated.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the explanation. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ExplainRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ExplainRequest",
        "description": "Request message for PredictionService.Explain.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Required. The instances that are the input to the explanation call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the explanation call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "parameters": {
            "description": "The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          },
          "explanationSpecOverride": {
            "description": "If specified, overrides the explanation_spec of the DeployedModel. Can be used for explaining prediction results with different configurations, such as: - Explaining top-5 predictions results as opposed to top-1; - Increasing path count or step count of the attribution methods to reduce approximate errors; - Using different baselines for explaining the prediction results.",
            "$ref": "GoogleCloudAiplatformV1ExplanationSpecOverride"
          },
          "deployedModelId": {
            "description": "If specified, this ExplainRequest will be served by the chosen DeployedModel, overriding Endpoint.traffic_split.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1ExplainResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.generateContent",
      "resource": "projects.locations.endpoints",
      "action": "generateContent",
      "http_method": "POST",
      "path_template": "v1/{+model}:generateContent",
      "description": "Generate content with multimodal inputs.",
      "required_params": [
        "model"
      ],
      "parameters": {
        "model": {
          "description": "Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher model format: `projects/{project}/locations/{location}/publishers/*/models/*` Tuned model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1GenerateContentRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1GenerateContentRequest",
        "description": "Request message for [PredictionService.GenerateContent].",
        "type": "object",
        "properties": {
          "contents": {
            "description": "Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "cachedContent": {
            "description": "Optional. The name of the cached content used as context to serve the prediction. Note: only used in explicit caching, where users can have control over caching (e.g. what content to cache) and enjoy guaranteed cost savings. Format: `projects/{project}/locations/{location}/cachedContents/{cachedContent}`",
            "type": "string"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "toolConfig": {
            "description": "Optional. Tool config. This config is shared for all tools provided in the request.",
            "$ref": "GoogleCloudAiplatformV1ToolConfig"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata for the request. It is used for billing and reporting only. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "safetySettings": {
            "description": "Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SafetySetting"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1GenerateContentResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.streamGenerateContent",
      "resource": "projects.locations.endpoints",
      "action": "streamGenerateContent",
      "http_method": "POST",
      "path_template": "v1/{+model}:streamGenerateContent",
      "description": "Generate content with multimodal inputs with streaming support.",
      "required_params": [
        "model"
      ],
      "parameters": {
        "model": {
          "description": "Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher model format: `projects/{project}/locations/{location}/publishers/*/models/*` Tuned model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1GenerateContentRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1GenerateContentRequest",
        "description": "Request message for [PredictionService.GenerateContent].",
        "type": "object",
        "properties": {
          "contents": {
            "description": "Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "cachedContent": {
            "description": "Optional. The name of the cached content used as context to serve the prediction. Note: only used in explicit caching, where users can have control over caching (e.g. what content to cache) and enjoy guaranteed cost savings. Format: `projects/{project}/locations/{location}/cachedContents/{cachedContent}`",
            "type": "string"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "toolConfig": {
            "description": "Optional. Tool config. This config is shared for all tools provided in the request.",
            "$ref": "GoogleCloudAiplatformV1ToolConfig"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata for the request. It is used for billing and reporting only. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "safetySettings": {
            "description": "Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SafetySetting"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1GenerateContentResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.countTokens",
      "resource": "projects.locations.endpoints",
      "action": "countTokens",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:countTokens",
      "description": "Perform a token counting.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to perform token counting. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CountTokensRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CountTokensRequest",
        "description": "Request message for PredictionService.CountTokens.",
        "type": "object",
        "properties": {
          "model": {
            "description": "Optional. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/*/models/*`",
            "type": "string"
          },
          "instances": {
            "description": "Optional. The instances that are the input to token counting call. Schema is identical to the prediction schema of the underlying model.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "contents": {
            "description": "Optional. Input content.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config that the model will use to generate the response.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CountTokensResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.computeTokens",
      "resource": "projects.locations.endpoints",
      "action": "computeTokens",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:computeTokens",
      "description": "Return a list of tokens based on the input text.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to get lists of tokens and token ids.",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ComputeTokensRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ComputeTokensRequest",
        "description": "Request message for ComputeTokens RPC call.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Optional. The instances that are the input to token computing API call. Schema is identical to the prediction schema of the text model, even for the non-text models, like chat models, or Codey models.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "model": {
            "description": "Optional. The name of the publisher model requested to serve the prediction. Format: projects/{project}/locations/{location}/publishers/*/models/*",
            "type": "string"
          },
          "contents": {
            "description": "Optional. Input content.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ComputeTokensResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.operations.list",
      "resource": "projects.locations.endpoints.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.operations.get",
      "resource": "projects.locations.endpoints.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.operations.delete",
      "resource": "projects.locations.endpoints.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.operations.cancel",
      "resource": "projects.locations.endpoints.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.operations.wait",
      "resource": "projects.locations.endpoints.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.endpoints.chat.completions",
      "resource": "projects.locations.endpoints.chat",
      "action": "completions",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}/chat/completions",
      "description": "Exposes an OpenAI-compatible endpoint for chat completions.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleApiHttpBody",
      "body_schema": {
        "id": "GoogleApiHttpBody",
        "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
        "type": "object",
        "properties": {
          "contentType": {
            "description": "The HTTP Content-Type header value specifying the content type of the body.",
            "type": "string"
          },
          "data": {
            "description": "The HTTP request/response body as raw binary.",
            "type": "string",
            "format": "byte"
          },
          "extensions": {
            "description": "Application specific response metadata. Must be set in the first response for streaming APIs.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleApiHttpBody"
    },
    {
      "operation_id": "aiplatform.projects.locations.cachedContents.create",
      "resource": "projects.locations.cachedContents",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/cachedContents",
      "description": "Creates cached content, this call will initialize the cached content in the data storage, and users need to pay for the cache data storage.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent resource where the cached content will be created",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CachedContent",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CachedContent",
        "description": "A resource used in LLM queries for users to explicitly specify what to cache and how to cache.",
        "type": "object",
        "properties": {
          "expireTime": {
            "description": "Timestamp of when this resource is considered expired. This is *always* provided on output, regardless of what was sent on input.",
            "type": "string",
            "format": "google-datetime"
          },
          "ttl": {
            "description": "Input only. The TTL for this resource. The expiration time is computed: now + TTL.",
            "type": "string",
            "format": "google-duration"
          },
          "name": {
            "description": "Immutable. Identifier. The server-generated resource name of the cached content Format: projects/{project}/locations/{location}/cachedContents/{cached_content}",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. Immutable. The user-generated meaningful display name of the cached content.",
            "type": "string"
          },
          "model": {
            "description": "Immutable. The name of the `Model` to use for cached content. Currently, only the published Gemini base models are supported, in form of projects/{PROJECT}/locations/{LOCATION}/publishers/google/models/{MODEL}",
            "type": "string"
          },
          "systemInstruction": {
            "description": "Optional. Input only. Immutable. Developer set system instruction. Currently, text only",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "contents": {
            "description": "Optional. Input only. Immutable. The content to cache",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "tools": {
            "description": "Optional. Input only. Immutable. A list of `Tools` the model may use to generate the next response",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "toolConfig": {
            "description": "Optional. Input only. Immutable. Tool config. This config is shared for all tools",
            "$ref": "GoogleCloudAiplatformV1ToolConfig"
          },
          "createTime": {
            "description": "Output only. Creation time of the cache entry.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. When the cache entry was last updated in UTC time.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "usageMetadata": {
            "description": "Output only. Metadata on the usage of the cached content.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1CachedContentUsageMetadata"
          },
          "encryptionSpec": {
            "description": "Input only. Immutable. Customer-managed encryption key spec for a `CachedContent`. If set, this `CachedContent` and all its sub-resources will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CachedContent"
    },
    {
      "operation_id": "aiplatform.projects.locations.cachedContents.get",
      "resource": "projects.locations.cachedContents",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets cached content configurations",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name referring to the cached content",
          "pattern": "^projects/[^/]+/locations/[^/]+/cachedContents/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CachedContent"
    },
    {
      "operation_id": "aiplatform.projects.locations.cachedContents.patch",
      "resource": "projects.locations.cachedContents",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates cached content configurations",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. Identifier. The server-generated resource name of the cached content Format: projects/{project}/locations/{location}/cachedContents/{cached_content}",
          "pattern": "^projects/[^/]+/locations/[^/]+/cachedContents/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The list of fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CachedContent",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CachedContent",
        "description": "A resource used in LLM queries for users to explicitly specify what to cache and how to cache.",
        "type": "object",
        "properties": {
          "expireTime": {
            "description": "Timestamp of when this resource is considered expired. This is *always* provided on output, regardless of what was sent on input.",
            "type": "string",
            "format": "google-datetime"
          },
          "ttl": {
            "description": "Input only. The TTL for this resource. The expiration time is computed: now + TTL.",
            "type": "string",
            "format": "google-duration"
          },
          "name": {
            "description": "Immutable. Identifier. The server-generated resource name of the cached content Format: projects/{project}/locations/{location}/cachedContents/{cached_content}",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. Immutable. The user-generated meaningful display name of the cached content.",
            "type": "string"
          },
          "model": {
            "description": "Immutable. The name of the `Model` to use for cached content. Currently, only the published Gemini base models are supported, in form of projects/{PROJECT}/locations/{LOCATION}/publishers/google/models/{MODEL}",
            "type": "string"
          },
          "systemInstruction": {
            "description": "Optional. Input only. Immutable. Developer set system instruction. Currently, text only",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "contents": {
            "description": "Optional. Input only. Immutable. The content to cache",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "tools": {
            "description": "Optional. Input only. Immutable. A list of `Tools` the model may use to generate the next response",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "toolConfig": {
            "description": "Optional. Input only. Immutable. Tool config. This config is shared for all tools",
            "$ref": "GoogleCloudAiplatformV1ToolConfig"
          },
          "createTime": {
            "description": "Output only. Creation time of the cache entry.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. When the cache entry was last updated in UTC time.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "usageMetadata": {
            "description": "Output only. Metadata on the usage of the cached content.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1CachedContentUsageMetadata"
          },
          "encryptionSpec": {
            "description": "Input only. Immutable. Customer-managed encryption key spec for a `CachedContent`. If set, this `CachedContent` and all its sub-resources will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CachedContent"
    },
    {
      "operation_id": "aiplatform.projects.locations.cachedContents.delete",
      "resource": "projects.locations.cachedContents",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes cached content",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name referring to the cached content",
          "pattern": "^projects/[^/]+/locations/[^/]+/cachedContents/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.cachedContents.list",
      "resource": "projects.locations.cachedContents",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/cachedContents",
      "description": "Lists cached contents in a project",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent, which owns this collection of cached contents.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The maximum number of cached contents to return. The service may return fewer than this value. If unspecified, some default (under maximum) number of items will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. A page token, received from a previous `ListCachedContents` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCachedContents` must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListCachedContentsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tuningJobs.create",
      "resource": "projects.locations.tuningJobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/tuningJobs",
      "description": "Creates a TuningJob. A created TuningJob right away will be attempted to be run.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the TuningJob in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1TuningJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1TuningJob",
        "description": "Represents a TuningJob that runs with Google owned models.",
        "type": "object",
        "properties": {
          "baseModel": {
            "description": "The base model that is being tuned. See [Supported models](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/tuning#supported_models).",
            "type": "string"
          },
          "supervisedTuningSpec": {
            "description": "Tuning Spec for Supervised Fine Tuning.",
            "$ref": "GoogleCloudAiplatformV1SupervisedTuningSpec"
          },
          "name": {
            "description": "Output only. Identifier. Resource name of a TuningJob. Format: `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`",
            "readOnly": true,
            "type": "string"
          },
          "tunedModelDisplayName": {
            "description": "Optional. The display name of the TunedModel. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. The description of the TuningJob.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The detailed state of the job.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The job state is unspecified.",
              "The job has been just created or resumed and processing has not yet begun.",
              "The service is preparing to run the job.",
              "The job is in progress.",
              "The job completed successfully.",
              "The job failed.",
              "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
              "The job has been cancelled.",
              "The job has been stopped, and can be resumed.",
              "The job has expired.",
              "The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.",
              "The job is partially succeeded, some results may be missing due to errors."
            ],
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ]
          },
          "createTime": {
            "description": "Output only. Time when the TuningJob was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "startTime": {
            "description": "Output only. Time when the TuningJob for the first time entered the `JOB_STATE_RUNNING` state.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Output only. Time when the TuningJob entered any of the following JobStates: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`, `JOB_STATE_EXPIRED`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the TuningJob was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "error": {
            "description": "Output only. Only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize TuningJob and generated resources such as Model and Endpoint. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "experiment": {
            "description": "Output only. The Experiment associated with this TuningJob.",
            "readOnly": true,
            "type": "string"
          },
          "tunedModel": {
            "description": "Output only. The tuned model resources associated with this TuningJob.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1TunedModel"
          },
          "tuningDataStats": {
            "description": "Output only. The tuning data statistics associated with this TuningJob.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1TuningDataStats"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key options for a TuningJob. If this is set, then all resources created by the TuningJob will be encrypted with the provided encryption key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "serviceAccount": {
            "description": "The service account that the tuningJob workload runs as. If not specified, the Vertex AI Secure Fine-Tuned Service Agent in the project will be used. See https://cloud.google.com/iam/docs/service-agents#vertex-ai-secure-fine-tuning-service-agent Users starting the pipeline must have the `iam.serviceAccounts.actAs` permission on this service account.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1TuningJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.tuningJobs.get",
      "resource": "projects.locations.tuningJobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a TuningJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TuningJob resource. Format: `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1TuningJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.tuningJobs.list",
      "resource": "projects.locations.tuningJobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/tuningJobs",
      "description": "Lists TuningJobs in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the TuningJobs from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token. Typically obtained via ListTuningJobsResponse.next_page_token of the previous GenAiTuningService.ListTuningJob][] call.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListTuningJobsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tuningJobs.cancel",
      "resource": "projects.locations.tuningJobs",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Cancels a TuningJob. Starts asynchronous cancellation on the TuningJob. The server makes a best effort to cancel the job, but success is not guaranteed. Clients can use GenAiTuningService.GetTuningJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On successful cancellation, the TuningJob is not deleted; instead it becomes a job with a TuningJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and TuningJob.state is set to `CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TuningJob to cancel. Format: `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CancelTuningJobRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CancelTuningJobRequest",
        "description": "Request message for GenAiTuningService.CancelTuningJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.tuningJobs.rebaseTunedModel",
      "resource": "projects.locations.tuningJobs",
      "action": "rebaseTunedModel",
      "http_method": "POST",
      "path_template": "v1/{+parent}/tuningJobs:rebaseTunedModel",
      "description": "Rebase a TunedModel.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location into which to rebase the Model. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1RebaseTunedModelRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1RebaseTunedModelRequest",
        "description": "Request message for GenAiTuningService.RebaseTunedModel.",
        "type": "object",
        "properties": {
          "tunedModelRef": {
            "description": "Required. TunedModel reference to retrieve the legacy model information.",
            "$ref": "GoogleCloudAiplatformV1TunedModelRef"
          },
          "tuningJob": {
            "description": "Optional. The TuningJob to be updated. Users can use this TuningJob field to overwrite tuning configs.",
            "$ref": "GoogleCloudAiplatformV1TuningJob"
          },
          "artifactDestination": {
            "description": "Optional. The Google Cloud Storage location to write the artifacts.",
            "$ref": "GoogleCloudAiplatformV1GcsDestination"
          },
          "deployToSameEndpoint": {
            "description": "Optional. By default, bison to gemini migration will always create new model/endpoint, but for gemini-1.0 to gemini-1.5 migration, we default deploy to the same endpoint. See details in this Section.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tuningJobs.operations.list",
      "resource": "projects.locations.tuningJobs.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tuningJobs.operations.get",
      "resource": "projects.locations.tuningJobs.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tuningJobs.operations.delete",
      "resource": "projects.locations.tuningJobs.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.tuningJobs.operations.cancel",
      "resource": "projects.locations.tuningJobs.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tuningJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.create",
      "resource": "projects.locations.indexes",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/indexes",
      "description": "Creates an Index.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the Index in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Index",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Index",
        "description": "A representation of a collection of database items organized in a way that allows for approximate nearest neighbor (a.k.a ANN) algorithms search.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the Index.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the Index.",
            "type": "string"
          },
          "metadataSchemaUri": {
            "description": "Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Index, that is specific to it. Unset if the Index does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
            "type": "string"
          },
          "metadata": {
            "description": "An additional information about the Index; the schema of the metadata can be found in metadata_schema.",
            "type": "any"
          },
          "deployedIndexes": {
            "description": "Output only. The pointers to DeployedIndexes created from this Index. An Index can be only deleted if all its DeployedIndexes had been undeployed first.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1DeployedIndexRef"
            }
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Indexes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Index was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Index was most recently updated. This also includes any update to the contents of the Index. Note that Operations working on this Index may have their Operations.metadata.generic_metadata.update_time a little after the value of this timestamp, yet that does not mean their results are not already reflected in the Index. Result of any successfully completed Operation on the Index is reflected in it.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "indexStats": {
            "description": "Output only. Stats of the index resource.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1IndexStats"
          },
          "indexUpdateMethod": {
            "description": "Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default.",
            "type": "string",
            "enumDescriptions": [
              "Should not be used.",
              "BatchUpdate: user can call UpdateIndex with files on Cloud Storage of Datapoints to update.",
              "StreamUpdate: user can call UpsertDatapoints/DeleteDatapoints to update the Index and the updates will be applied in corresponding DeployedIndexes in nearly real-time."
            ],
            "enum": [
              "INDEX_UPDATE_METHOD_UNSPECIFIED",
              "BATCH_UPDATE",
              "STREAM_UPDATE"
            ]
          },
          "encryptionSpec": {
            "description": "Immutable. Customer-managed encryption key spec for an Index. If set, this Index and all sub-resources of this Index will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.get",
      "resource": "projects.locations.indexes",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an Index.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Index resource. Format: `projects/{project}/locations/{location}/indexes/{index}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Index"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.list",
      "resource": "projects.locations.indexes",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/indexes",
      "description": "Lists Indexes in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location from which to list the Indexes. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListIndexesResponse.next_page_token of the previous IndexService.ListIndexes call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListIndexesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.patch",
      "resource": "projects.locations.indexes",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an Index.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the Index.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "The update mask applies to the resource. For the `FieldMask` definition, see google.protobuf.FieldMask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Index",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Index",
        "description": "A representation of a collection of database items organized in a way that allows for approximate nearest neighbor (a.k.a ANN) algorithms search.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the Index.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the Index.",
            "type": "string"
          },
          "metadataSchemaUri": {
            "description": "Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Index, that is specific to it. Unset if the Index does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
            "type": "string"
          },
          "metadata": {
            "description": "An additional information about the Index; the schema of the metadata can be found in metadata_schema.",
            "type": "any"
          },
          "deployedIndexes": {
            "description": "Output only. The pointers to DeployedIndexes created from this Index. An Index can be only deleted if all its DeployedIndexes had been undeployed first.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1DeployedIndexRef"
            }
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Indexes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Index was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Index was most recently updated. This also includes any update to the contents of the Index. Note that Operations working on this Index may have their Operations.metadata.generic_metadata.update_time a little after the value of this timestamp, yet that does not mean their results are not already reflected in the Index. Result of any successfully completed Operation on the Index is reflected in it.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "indexStats": {
            "description": "Output only. Stats of the index resource.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1IndexStats"
          },
          "indexUpdateMethod": {
            "description": "Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default.",
            "type": "string",
            "enumDescriptions": [
              "Should not be used.",
              "BatchUpdate: user can call UpdateIndex with files on Cloud Storage of Datapoints to update.",
              "StreamUpdate: user can call UpsertDatapoints/DeleteDatapoints to update the Index and the updates will be applied in corresponding DeployedIndexes in nearly real-time."
            ],
            "enum": [
              "INDEX_UPDATE_METHOD_UNSPECIFIED",
              "BATCH_UPDATE",
              "STREAM_UPDATE"
            ]
          },
          "encryptionSpec": {
            "description": "Immutable. Customer-managed encryption key spec for an Index. If set, this Index and all sub-resources of this Index will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.delete",
      "resource": "projects.locations.indexes",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes an Index. An Index can only be deleted when all its DeployedIndexes had been undeployed.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Index resource to be deleted. Format: `projects/{project}/locations/{location}/indexes/{index}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.upsertDatapoints",
      "resource": "projects.locations.indexes",
      "action": "upsertDatapoints",
      "http_method": "POST",
      "path_template": "v1/{+index}:upsertDatapoints",
      "description": "Add/update Datapoints into an Index.",
      "required_params": [
        "index"
      ],
      "parameters": {
        "index": {
          "description": "Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1UpsertDatapointsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1UpsertDatapointsRequest",
        "description": "Request message for IndexService.UpsertDatapoints",
        "type": "object",
        "properties": {
          "datapoints": {
            "description": "A list of datapoints to be created/updated.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1IndexDatapoint"
            }
          },
          "updateMask": {
            "description": "Optional. Update mask is used to specify the fields to be overwritten in the datapoints by the update. The fields specified in the update_mask are relative to each IndexDatapoint inside datapoints, not the full request. Updatable fields: * Use `all_restricts` to update both restricts and numeric_restricts.",
            "type": "string",
            "format": "google-fieldmask"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1UpsertDatapointsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.removeDatapoints",
      "resource": "projects.locations.indexes",
      "action": "removeDatapoints",
      "http_method": "POST",
      "path_template": "v1/{+index}:removeDatapoints",
      "description": "Remove Datapoints from an Index.",
      "required_params": [
        "index"
      ],
      "parameters": {
        "index": {
          "description": "Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1RemoveDatapointsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1RemoveDatapointsRequest",
        "description": "Request message for IndexService.RemoveDatapoints",
        "type": "object",
        "properties": {
          "datapointIds": {
            "description": "A list of datapoint ids to be deleted.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1RemoveDatapointsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.operations.list",
      "resource": "projects.locations.indexes.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.operations.get",
      "resource": "projects.locations.indexes.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.operations.delete",
      "resource": "projects.locations.indexes.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.operations.cancel",
      "resource": "projects.locations.indexes.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexes.operations.wait",
      "resource": "projects.locations.indexes.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.create",
      "resource": "projects.locations.indexEndpoints",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/indexEndpoints",
      "description": "Creates an IndexEndpoint.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the IndexEndpoint in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1IndexEndpoint",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1IndexEndpoint",
        "description": "Indexes are deployed into it. An IndexEndpoint can have multiple DeployedIndexes.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the IndexEndpoint.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the IndexEndpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the IndexEndpoint.",
            "type": "string"
          },
          "deployedIndexes": {
            "description": "Output only. The indexes deployed in this endpoint.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1DeployedIndex"
            }
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your IndexEndpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this IndexEndpoint was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this IndexEndpoint was last updated. This timestamp is not updated when the endpoint's DeployedIndexes are updated, e.g. due to updates of the original Indexes they are the deployments of.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "network": {
            "description": "Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the IndexEndpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. network and private_service_connect_config are mutually exclusive. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in '12345', and {network} is network name.",
            "type": "string"
          },
          "enablePrivateServiceConnect": {
            "description": "Optional. Deprecated: If true, expose the IndexEndpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.",
            "deprecated": true,
            "type": "boolean"
          },
          "privateServiceConnectConfig": {
            "description": "Optional. Configuration for private service connect. network and private_service_connect_config are mutually exclusive.",
            "$ref": "GoogleCloudAiplatformV1PrivateServiceConnectConfig"
          },
          "publicEndpointEnabled": {
            "description": "Optional. If true, the deployed index will be accessible through public endpoint.",
            "type": "boolean"
          },
          "publicEndpointDomainName": {
            "description": "Output only. If public_endpoint_enabled is true, this field will be populated with the domain name to use for this index endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "encryptionSpec": {
            "description": "Immutable. Customer-managed encryption key spec for an IndexEndpoint. If set, this IndexEndpoint and all sub-resources of this IndexEndpoint will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.get",
      "resource": "projects.locations.indexEndpoints",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets an IndexEndpoint.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the IndexEndpoint resource. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1IndexEndpoint"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.list",
      "resource": "projects.locations.indexEndpoints",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/indexEndpoints",
      "description": "Lists IndexEndpoints in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location from which to list the IndexEndpoints. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `index_endpoint` supports = and !=. `index_endpoint` represents the IndexEndpoint ID, ie. the last segment of the IndexEndpoint's resourcename. * `display_name` supports =, != and regex() (uses [re2](https://github.com/google/re2/wiki/Syntax) syntax) * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* or labels:key - key existence A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `index_endpoint=\"1\"` * `display_name=\"myDisplayName\"` * `regex(display_name, \"^A\") -> The display name starts with an A. * `labels.myKey=\"myValue\"`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token. Typically obtained via ListIndexEndpointsResponse.next_page_token of the previous IndexEndpointService.ListIndexEndpoints call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Optional. Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListIndexEndpointsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.patch",
      "resource": "projects.locations.indexEndpoints",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an IndexEndpoint.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the IndexEndpoint.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. See google.protobuf.FieldMask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1IndexEndpoint",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1IndexEndpoint",
        "description": "Indexes are deployed into it. An IndexEndpoint can have multiple DeployedIndexes.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the IndexEndpoint.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the IndexEndpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "The description of the IndexEndpoint.",
            "type": "string"
          },
          "deployedIndexes": {
            "description": "Output only. The indexes deployed in this endpoint.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1DeployedIndex"
            }
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your IndexEndpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this IndexEndpoint was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this IndexEndpoint was last updated. This timestamp is not updated when the endpoint's DeployedIndexes are updated, e.g. due to updates of the original Indexes they are the deployments of.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "network": {
            "description": "Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the IndexEndpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. network and private_service_connect_config are mutually exclusive. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in '12345', and {network} is network name.",
            "type": "string"
          },
          "enablePrivateServiceConnect": {
            "description": "Optional. Deprecated: If true, expose the IndexEndpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.",
            "deprecated": true,
            "type": "boolean"
          },
          "privateServiceConnectConfig": {
            "description": "Optional. Configuration for private service connect. network and private_service_connect_config are mutually exclusive.",
            "$ref": "GoogleCloudAiplatformV1PrivateServiceConnectConfig"
          },
          "publicEndpointEnabled": {
            "description": "Optional. If true, the deployed index will be accessible through public endpoint.",
            "type": "boolean"
          },
          "publicEndpointDomainName": {
            "description": "Output only. If public_endpoint_enabled is true, this field will be populated with the domain name to use for this index endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "encryptionSpec": {
            "description": "Immutable. Customer-managed encryption key spec for an IndexEndpoint. If set, this IndexEndpoint and all sub-resources of this IndexEndpoint will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1IndexEndpoint"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.delete",
      "resource": "projects.locations.indexEndpoints",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes an IndexEndpoint.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the IndexEndpoint resource to be deleted. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.deployIndex",
      "resource": "projects.locations.indexEndpoints",
      "action": "deployIndex",
      "http_method": "POST",
      "path_template": "v1/{+indexEndpoint}:deployIndex",
      "description": "Deploys an Index into this IndexEndpoint, creating a DeployedIndex within it.",
      "required_params": [
        "indexEndpoint"
      ],
      "parameters": {
        "indexEndpoint": {
          "description": "Required. The name of the IndexEndpoint resource into which to deploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DeployIndexRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DeployIndexRequest",
        "description": "Request message for IndexEndpointService.DeployIndex.",
        "type": "object",
        "properties": {
          "deployedIndex": {
            "description": "Required. The DeployedIndex to be created within the IndexEndpoint.",
            "$ref": "GoogleCloudAiplatformV1DeployedIndex"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.undeployIndex",
      "resource": "projects.locations.indexEndpoints",
      "action": "undeployIndex",
      "http_method": "POST",
      "path_template": "v1/{+indexEndpoint}:undeployIndex",
      "description": "Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it, and freeing all resources it's using.",
      "required_params": [
        "indexEndpoint"
      ],
      "parameters": {
        "indexEndpoint": {
          "description": "Required. The name of the IndexEndpoint resource from which to undeploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1UndeployIndexRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1UndeployIndexRequest",
        "description": "Request message for IndexEndpointService.UndeployIndex.",
        "type": "object",
        "properties": {
          "deployedIndexId": {
            "description": "Required. The ID of the DeployedIndex to be undeployed from the IndexEndpoint.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.mutateDeployedIndex",
      "resource": "projects.locations.indexEndpoints",
      "action": "mutateDeployedIndex",
      "http_method": "POST",
      "path_template": "v1/{+indexEndpoint}:mutateDeployedIndex",
      "description": "Update an existing DeployedIndex under an IndexEndpoint.",
      "required_params": [
        "indexEndpoint"
      ],
      "parameters": {
        "indexEndpoint": {
          "description": "Required. The name of the IndexEndpoint resource into which to deploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DeployedIndex",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DeployedIndex",
        "description": "A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Required. The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.",
            "type": "string"
          },
          "index": {
            "description": "Required. The name of the Index this is the deployment of. We may refer to this Index as the DeployedIndex's \"original\" Index.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the DeployedIndex. If not provided upon creation, the Index's display_name is used.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when the DeployedIndex was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "privateEndpoints": {
            "description": "Output only. Provides paths for users to send requests directly to the deployed index services running on Cloud via private services access. This field is populated if network is configured.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1IndexPrivateEndpoints"
          },
          "indexSyncTime": {
            "description": "Output only. The DeployedIndex may depend on various data on its original Index. Additionally when certain changes to the original Index are being done (e.g. when what the Index contains is being changed) the DeployedIndex may be asynchronously updated in the background to reflect these changes. If this timestamp's value is at least the Index.update_time of the original Index, it means that this DeployedIndex and the original Index are in sync. If this timestamp is older, then to see which updates this DeployedIndex already contains (and which it does not), one must list the operations that are running on the original Index. Only the successfully completed Operations with update_time equal or before this sync time are contained in this DeployedIndex.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "automaticResources": {
            "description": "Optional. A description of resources that the DeployedIndex uses, which to large degree are decided by Vertex AI, and optionally allows only a modest additional configuration. If min_replica_count is not set, the default value is 2 (we don't provide SLA when min_replica_count=1). If max_replica_count is not set, the default value is min_replica_count. The max allowed replica count is 1000.",
            "$ref": "GoogleCloudAiplatformV1AutomaticResources"
          },
          "dedicatedResources": {
            "description": "Optional. A description of resources that are dedicated to the DeployedIndex, and that need a higher degree of manual configuration. The field min_replica_count must be set to a value strictly greater than 0, or else validation will fail. We don't provide SLA when min_replica_count=1. If max_replica_count is not set, the default value is min_replica_count. The max allowed replica count is 1000. Available machine types for SMALL shard: e2-standard-2 and all machine types available for MEDIUM and LARGE shard. Available machine types for MEDIUM shard: e2-standard-16 and all machine types available for LARGE shard. Available machine types for LARGE shard: e2-highmem-16, n2d-standard-32. n1-standard-16 and n1-standard-32 are still available, but we recommend e2-standard-16 and e2-highmem-16 for cost efficiency.",
            "$ref": "GoogleCloudAiplatformV1DedicatedResources"
          },
          "enableAccessLogging": {
            "description": "Optional. If true, private endpoint's access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each MatchRequest. Note that logs may incur a cost, especially if the deployed index receives a high queries per second rate (QPS). Estimate your costs before enabling this option.",
            "type": "boolean"
          },
          "deployedIndexAuthConfig": {
            "description": "Optional. If set, the authentication is enabled for the private endpoint.",
            "$ref": "GoogleCloudAiplatformV1DeployedIndexAuthConfig"
          },
          "reservedIpRanges": {
            "description": "Optional. A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex. If set, we will deploy the index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC network. The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: ['vertex-ai-ip-range']. For more information about subnets and network IP ranges, please see https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deploymentGroup": {
            "description": "Optional. The deployment group can be no longer than 64 characters (eg: 'test', 'prod'). If not set, we will use the 'default' deployment group. Creating `deployment_groups` with `reserved_ip_ranges` is a recommended practice when the peered network has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration. Also, one deployment_group (except 'default') can only be used with the same reserved_ip_ranges which means if the deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. Note: we only support up to 5 deployment groups(not including 'default').",
            "type": "string"
          },
          "pscAutomationConfigs": {
            "description": "Optional. If set for PSC deployed index, PSC connection will be automatically created after deployment is done and the endpoint information is populated in private_endpoints.psc_automated_endpoints.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1PSCAutomationConfig"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.findNeighbors",
      "resource": "projects.locations.indexEndpoints",
      "action": "findNeighbors",
      "http_method": "POST",
      "path_template": "v1/{+indexEndpoint}:findNeighbors",
      "description": "Finds the nearest neighbors of each vector within the request.",
      "required_params": [
        "indexEndpoint"
      ],
      "parameters": {
        "indexEndpoint": {
          "description": "Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FindNeighborsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FindNeighborsRequest",
        "description": "The request message for MatchService.FindNeighbors.",
        "type": "object",
        "properties": {
          "deployedIndexId": {
            "description": "The ID of the DeployedIndex that will serve the request. This request is sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index has a DeployedIndex.id field. The value of the field below must equal one of the DeployedIndex.id fields of the IndexEndpoint that is being called for this request.",
            "type": "string"
          },
          "queries": {
            "description": "The list of queries.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1FindNeighborsRequestQuery"
            }
          },
          "returnFullDatapoint": {
            "description": "If set to true, the full datapoints (including all vector values and restricts) of the nearest neighbors are returned. Note that returning full datapoint will significantly increase the latency and cost of the query.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1FindNeighborsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.readIndexDatapoints",
      "resource": "projects.locations.indexEndpoints",
      "action": "readIndexDatapoints",
      "http_method": "POST",
      "path_template": "v1/{+indexEndpoint}:readIndexDatapoints",
      "description": "Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints can be retrieved in a batch.",
      "required_params": [
        "indexEndpoint"
      ],
      "parameters": {
        "indexEndpoint": {
          "description": "Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ReadIndexDatapointsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ReadIndexDatapointsRequest",
        "description": "The request message for MatchService.ReadIndexDatapoints.",
        "type": "object",
        "properties": {
          "deployedIndexId": {
            "description": "The ID of the DeployedIndex that will serve the request.",
            "type": "string"
          },
          "ids": {
            "description": "IDs of the datapoints to be searched for.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ReadIndexDatapointsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.operations.list",
      "resource": "projects.locations.indexEndpoints.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.operations.get",
      "resource": "projects.locations.indexEndpoints.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.operations.delete",
      "resource": "projects.locations.indexEndpoints.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.operations.cancel",
      "resource": "projects.locations.indexEndpoints.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.indexEndpoints.operations.wait",
      "resource": "projects.locations.indexEndpoints.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/indexEndpoints/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.customJobs.create",
      "resource": "projects.locations.customJobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/customJobs",
      "description": "Creates a CustomJob. A created CustomJob right away will be attempted to be run.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the CustomJob in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CustomJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CustomJob",
        "description": "Represents a job that runs custom workloads such as a Docker container or a Python package. A CustomJob can have multiple worker pools and each worker pool can have its own machine and input spec. A CustomJob will be cleaned up once the job enters terminal state (failed or succeeded).",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Resource name of a CustomJob.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "jobSpec": {
            "description": "Required. Job spec.",
            "$ref": "GoogleCloudAiplatformV1CustomJobSpec"
          },
          "state": {
            "description": "Output only. The detailed state of the job.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The job state is unspecified.",
              "The job has been just created or resumed and processing has not yet begun.",
              "The service is preparing to run the job.",
              "The job is in progress.",
              "The job completed successfully.",
              "The job failed.",
              "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
              "The job has been cancelled.",
              "The job has been stopped, and can be resumed.",
              "The job has expired.",
              "The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.",
              "The job is partially succeeded, some results may be missing due to errors."
            ],
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ]
          },
          "createTime": {
            "description": "Output only. Time when the CustomJob was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "startTime": {
            "description": "Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the CustomJob was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "error": {
            "description": "Output only. Only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key options for a CustomJob. If this is set, then all resources created by the CustomJob will be encrypted with the provided encryption key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "webAccessUris": {
            "description": "Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.",
            "readOnly": true,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CustomJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.customJobs.get",
      "resource": "projects.locations.customJobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a CustomJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the CustomJob resource. Format: `projects/{project}/locations/{location}/customJobs/{custom_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CustomJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.customJobs.list",
      "resource": "projects.locations.customJobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/customJobs",
      "description": "Lists CustomJobs in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the CustomJobs from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListCustomJobsResponse.next_page_token of the previous JobService.ListCustomJobs call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListCustomJobsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.customJobs.delete",
      "resource": "projects.locations.customJobs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a CustomJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the CustomJob resource to be deleted. Format: `projects/{project}/locations/{location}/customJobs/{custom_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.customJobs.cancel",
      "resource": "projects.locations.customJobs",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Cancels a CustomJob. Starts asynchronous cancellation on the CustomJob. The server makes a best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetCustomJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On successful cancellation, the CustomJob is not deleted; instead it becomes a job with a CustomJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and CustomJob.state is set to `CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the CustomJob to cancel. Format: `projects/{project}/locations/{location}/customJobs/{custom_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CancelCustomJobRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CancelCustomJobRequest",
        "description": "Request message for JobService.CancelCustomJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.customJobs.operations.list",
      "resource": "projects.locations.customJobs.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.customJobs.operations.get",
      "resource": "projects.locations.customJobs.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.customJobs.operations.delete",
      "resource": "projects.locations.customJobs.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.customJobs.operations.cancel",
      "resource": "projects.locations.customJobs.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.customJobs.operations.wait",
      "resource": "projects.locations.customJobs.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/customJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.dataLabelingJobs.create",
      "resource": "projects.locations.dataLabelingJobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/dataLabelingJobs",
      "description": "Creates a DataLabelingJob.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1DataLabelingJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1DataLabelingJob",
        "description": "DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Resource name of the DataLabelingJob.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.",
            "type": "string"
          },
          "datasets": {
            "description": "Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "annotationLabels": {
            "description": "Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "labelerCount": {
            "description": "Required. Number of labelers to work on each DataItem.",
            "type": "integer",
            "format": "int32"
          },
          "instructionUri": {
            "description": "Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.",
            "type": "string"
          },
          "inputsSchemaUri": {
            "description": "Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.",
            "type": "string"
          },
          "inputs": {
            "description": "Required. Input config parameters for the DataLabelingJob.",
            "type": "any"
          },
          "state": {
            "description": "Output only. The detailed state of the job.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The job state is unspecified.",
              "The job has been just created or resumed and processing has not yet begun.",
              "The service is preparing to run the job.",
              "The job is in progress.",
              "The job completed successfully.",
              "The job failed.",
              "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
              "The job has been cancelled.",
              "The job has been stopped, and can be resumed.",
              "The job has expired.",
              "The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.",
              "The job is partially succeeded, some results may be missing due to errors."
            ],
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ]
          },
          "labelingProgress": {
            "description": "Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "currentSpend": {
            "description": "Output only. Estimated cost(in US dollars) that the DataLabelingJob has incurred to date.",
            "readOnly": true,
            "$ref": "GoogleTypeMoney"
          },
          "createTime": {
            "description": "Output only. Timestamp when this DataLabelingJob was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this DataLabelingJob was updated most recently.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "error": {
            "description": "Output only. DataLabelingJob errors. It is only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each DataLabelingJob: * \"aiplatform.googleapis.com/schema\": output only, its value is the inputs_schema's title.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "specialistPools": {
            "description": "The SpecialistPools' resource names associated with this job.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "activeLearningConfig": {
            "description": "Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.",
            "$ref": "GoogleCloudAiplatformV1ActiveLearningConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1DataLabelingJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.dataLabelingJobs.get",
      "resource": "projects.locations.dataLabelingJobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a DataLabelingJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the DataLabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1DataLabelingJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.dataLabelingJobs.list",
      "resource": "projects.locations.dataLabelingJobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/dataLabelingJobs",
      "description": "Lists DataLabelingJobs in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read. FieldMask represents a set of symbolic field paths. For example, the mask can be `paths: \"name\"`. The \"name\" here is a field in DataLabelingJob. If this field is not set, all fields of the DataLabelingJob are returned.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by, sorted in ascending order by default. Use `desc` after a field name for descending.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListDataLabelingJobsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.dataLabelingJobs.delete",
      "resource": "projects.locations.dataLabelingJobs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a DataLabelingJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the DataLabelingJob to be deleted. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.dataLabelingJobs.cancel",
      "resource": "projects.locations.dataLabelingJobs",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Cancels a DataLabelingJob. Success of cancellation is not guaranteed.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the DataLabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CancelDataLabelingJobRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CancelDataLabelingJobRequest",
        "description": "Request message for JobService.CancelDataLabelingJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.dataLabelingJobs.operations.list",
      "resource": "projects.locations.dataLabelingJobs.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.dataLabelingJobs.operations.get",
      "resource": "projects.locations.dataLabelingJobs.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.dataLabelingJobs.operations.delete",
      "resource": "projects.locations.dataLabelingJobs.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.dataLabelingJobs.operations.cancel",
      "resource": "projects.locations.dataLabelingJobs.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.dataLabelingJobs.operations.wait",
      "resource": "projects.locations.dataLabelingJobs.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/dataLabelingJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.hyperparameterTuningJobs.create",
      "resource": "projects.locations.hyperparameterTuningJobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/hyperparameterTuningJobs",
      "description": "Creates a HyperparameterTuningJob",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the HyperparameterTuningJob in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1HyperparameterTuningJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1HyperparameterTuningJob",
        "description": "Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a Study specification and multiple CustomJobs with identical CustomJob specification.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Resource name of the HyperparameterTuningJob.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the HyperparameterTuningJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "studySpec": {
            "description": "Required. Study configuration of the HyperparameterTuningJob.",
            "$ref": "GoogleCloudAiplatformV1StudySpec"
          },
          "maxTrialCount": {
            "description": "Required. The desired total number of Trials.",
            "type": "integer",
            "format": "int32"
          },
          "parallelTrialCount": {
            "description": "Required. The desired number of Trials to run in parallel.",
            "type": "integer",
            "format": "int32"
          },
          "maxFailedTrialCount": {
            "description": "The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails.",
            "type": "integer",
            "format": "int32"
          },
          "trialJobSpec": {
            "description": "Required. The spec of a trial job. The same spec applies to the CustomJobs created in all the trials.",
            "$ref": "GoogleCloudAiplatformV1CustomJobSpec"
          },
          "trials": {
            "description": "Output only. Trials of the HyperparameterTuningJob.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Trial"
            }
          },
          "state": {
            "description": "Output only. The detailed state of the job.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The job state is unspecified.",
              "The job has been just created or resumed and processing has not yet begun.",
              "The service is preparing to run the job.",
              "The job is in progress.",
              "The job completed successfully.",
              "The job failed.",
              "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
              "The job has been cancelled.",
              "The job has been stopped, and can be resumed.",
              "The job has expired.",
              "The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.",
              "The job is partially succeeded, some results may be missing due to errors."
            ],
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ]
          },
          "createTime": {
            "description": "Output only. Time when the HyperparameterTuningJob was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "startTime": {
            "description": "Output only. Time when the HyperparameterTuningJob for the first time entered the `JOB_STATE_RUNNING` state.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Output only. Time when the HyperparameterTuningJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the HyperparameterTuningJob was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "error": {
            "description": "Output only. Only populated when job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize HyperparameterTuningJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key options for a HyperparameterTuningJob. If this is set, then all resources created by the HyperparameterTuningJob will be encrypted with the provided encryption key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1HyperparameterTuningJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.hyperparameterTuningJobs.get",
      "resource": "projects.locations.hyperparameterTuningJobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a HyperparameterTuningJob",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the HyperparameterTuningJob resource. Format: `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1HyperparameterTuningJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.hyperparameterTuningJobs.list",
      "resource": "projects.locations.hyperparameterTuningJobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/hyperparameterTuningJobs",
      "description": "Lists HyperparameterTuningJobs in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the HyperparameterTuningJobs from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListHyperparameterTuningJobsResponse.next_page_token of the previous JobService.ListHyperparameterTuningJobs call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListHyperparameterTuningJobsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.hyperparameterTuningJobs.delete",
      "resource": "projects.locations.hyperparameterTuningJobs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a HyperparameterTuningJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the HyperparameterTuningJob resource to be deleted. Format: `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.hyperparameterTuningJobs.cancel",
      "resource": "projects.locations.hyperparameterTuningJobs",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Cancels a HyperparameterTuningJob. Starts asynchronous cancellation on the HyperparameterTuningJob. The server makes a best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetHyperparameterTuningJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On successful cancellation, the HyperparameterTuningJob is not deleted; instead it becomes a job with a HyperparameterTuningJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and HyperparameterTuningJob.state is set to `CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the HyperparameterTuningJob to cancel. Format: `projects/{project}/locations/{location}/hyperparameterTuningJobs/{hyperparameter_tuning_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CancelHyperparameterTuningJobRequest",
        "description": "Request message for JobService.CancelHyperparameterTuningJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.hyperparameterTuningJobs.operations.list",
      "resource": "projects.locations.hyperparameterTuningJobs.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.hyperparameterTuningJobs.operations.get",
      "resource": "projects.locations.hyperparameterTuningJobs.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.hyperparameterTuningJobs.operations.delete",
      "resource": "projects.locations.hyperparameterTuningJobs.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.hyperparameterTuningJobs.operations.cancel",
      "resource": "projects.locations.hyperparameterTuningJobs.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.hyperparameterTuningJobs.operations.wait",
      "resource": "projects.locations.hyperparameterTuningJobs.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/hyperparameterTuningJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.nasJobs.create",
      "resource": "projects.locations.nasJobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/nasJobs",
      "description": "Creates a NasJob",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the NasJob in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1NasJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1NasJob",
        "description": "Represents a Neural Architecture Search (NAS) job.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Resource name of the NasJob.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the NasJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "nasJobSpec": {
            "description": "Required. The specification of a NasJob.",
            "$ref": "GoogleCloudAiplatformV1NasJobSpec"
          },
          "nasJobOutput": {
            "description": "Output only. Output of the NasJob.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1NasJobOutput"
          },
          "state": {
            "description": "Output only. The detailed state of the job.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The job state is unspecified.",
              "The job has been just created or resumed and processing has not yet begun.",
              "The service is preparing to run the job.",
              "The job is in progress.",
              "The job completed successfully.",
              "The job failed.",
              "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
              "The job has been cancelled.",
              "The job has been stopped, and can be resumed.",
              "The job has expired.",
              "The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.",
              "The job is partially succeeded, some results may be missing due to errors."
            ],
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ]
          },
          "createTime": {
            "description": "Output only. Time when the NasJob was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "startTime": {
            "description": "Output only. Time when the NasJob for the first time entered the `JOB_STATE_RUNNING` state.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Output only. Time when the NasJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the NasJob was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "error": {
            "description": "Output only. Only populated when job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize NasJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key options for a NasJob. If this is set, then all resources created by the NasJob will be encrypted with the provided encryption key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "enableRestrictedImageTraining": {
            "description": "Optional. Enable a separation of Custom model training and restricted image training for tenant project.",
            "deprecated": true,
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1NasJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.nasJobs.get",
      "resource": "projects.locations.nasJobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a NasJob",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NasJob resource. Format: `projects/{project}/locations/{location}/nasJobs/{nas_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1NasJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.nasJobs.list",
      "resource": "projects.locations.nasJobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/nasJobs",
      "description": "Lists NasJobs in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the NasJobs from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListNasJobsResponse.next_page_token of the previous JobService.ListNasJobs call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListNasJobsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.nasJobs.delete",
      "resource": "projects.locations.nasJobs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a NasJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NasJob resource to be deleted. Format: `projects/{project}/locations/{location}/nasJobs/{nas_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.nasJobs.cancel",
      "resource": "projects.locations.nasJobs",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Cancels a NasJob. Starts asynchronous cancellation on the NasJob. The server makes a best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetNasJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On successful cancellation, the NasJob is not deleted; instead it becomes a job with a NasJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and NasJob.state is set to `CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NasJob to cancel. Format: `projects/{project}/locations/{location}/nasJobs/{nas_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CancelNasJobRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CancelNasJobRequest",
        "description": "Request message for JobService.CancelNasJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.nasJobs.nasTrialDetails.get",
      "resource": "projects.locations.nasJobs.nasTrialDetails",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a NasTrialDetail.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NasTrialDetail resource. Format: `projects/{project}/locations/{location}/nasJobs/{nas_job}/nasTrialDetails/{nas_trial_detail}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+/nasTrialDetails/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1NasTrialDetail"
    },
    {
      "operation_id": "aiplatform.projects.locations.nasJobs.nasTrialDetails.list",
      "resource": "projects.locations.nasJobs.nasTrialDetails",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/nasTrialDetails",
      "description": "List top NasTrialDetails of a NasJob.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the NasJob resource. Format: `projects/{project}/locations/{location}/nasJobs/{nas_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/nasJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListNasTrialDetailsResponse.next_page_token of the previous JobService.ListNasTrialDetails call.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListNasTrialDetailsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.batchPredictionJobs.create",
      "resource": "projects.locations.batchPredictionJobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/batchPredictionJobs",
      "description": "Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to start.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the BatchPredictionJob in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchPredictionJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchPredictionJob",
        "description": "A job that uses a Model to produce predictions on multiple input instances. If predictions for significant portion of the instances fail, the job may finish without attempting predictions for all remaining instances.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Resource name of the BatchPredictionJob.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of this BatchPredictionJob.",
            "type": "string"
          },
          "model": {
            "description": "The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`",
            "type": "string"
          },
          "modelVersionId": {
            "description": "Output only. The version ID of the Model that produces the predictions via this job.",
            "readOnly": true,
            "type": "string"
          },
          "unmanagedContainerModel": {
            "description": "Contains model information necessary to perform batch prediction without requiring uploading to model registry. Exactly one of model and unmanaged_container_model must be set.",
            "$ref": "GoogleCloudAiplatformV1UnmanagedContainerModel"
          },
          "inputConfig": {
            "description": "Required. Input configuration of the instances on which predictions are performed. The schema of any single instance may be specified via the Model's PredictSchemata's instance_schema_uri.",
            "$ref": "GoogleCloudAiplatformV1BatchPredictionJobInputConfig"
          },
          "instanceConfig": {
            "description": "Configuration for how to convert batch prediction input instances to the prediction instances that are sent to the Model.",
            "$ref": "GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig"
          },
          "modelParameters": {
            "description": "The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          },
          "outputConfig": {
            "description": "Required. The Configuration specifying where output predictions should be written. The schema of any single prediction may be specified as a concatenation of Model's PredictSchemata's instance_schema_uri and prediction_schema_uri.",
            "$ref": "GoogleCloudAiplatformV1BatchPredictionJobOutputConfig"
          },
          "dedicatedResources": {
            "description": "The config of resources used by the Model during the batch prediction. If the Model supports DEDICATED_RESOURCES this config may be provided (and the job will use these resources), if the Model doesn't support AUTOMATIC_RESOURCES, this config must be provided.",
            "$ref": "GoogleCloudAiplatformV1BatchDedicatedResources"
          },
          "serviceAccount": {
            "description": "The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.",
            "type": "string"
          },
          "manualBatchTuningParameters": {
            "description": "Immutable. Parameters configuring the batch behavior. Currently only applicable when dedicated_resources are used (in other cases Vertex AI does the tuning itself).",
            "$ref": "GoogleCloudAiplatformV1ManualBatchTuningParameters"
          },
          "generateExplanation": {
            "description": "Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated.",
            "type": "boolean"
          },
          "explanationSpec": {
            "description": "Explanation configuration for this BatchPredictionJob. Can be specified only if generate_explanation is set to `true`. This value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of the explanation_spec object is not populated, the corresponding field of the Model.explanation_spec object is inherited.",
            "$ref": "GoogleCloudAiplatformV1ExplanationSpec"
          },
          "outputInfo": {
            "description": "Output only. Information further describing the output of this job.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1BatchPredictionJobOutputInfo"
          },
          "state": {
            "description": "Output only. The detailed state of the job.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The job state is unspecified.",
              "The job has been just created or resumed and processing has not yet begun.",
              "The service is preparing to run the job.",
              "The job is in progress.",
              "The job completed successfully.",
              "The job failed.",
              "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
              "The job has been cancelled.",
              "The job has been stopped, and can be resumed.",
              "The job has expired.",
              "The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.",
              "The job is partially succeeded, some results may be missing due to errors."
            ],
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ]
          },
          "error": {
            "description": "Output only. Only populated when the job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "partialFailures": {
            "description": "Output only. Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleRpcStatus"
            }
          },
          "resourcesConsumed": {
            "description": "Output only. Information about resources that had been consumed by this job. Provided in real time at best effort basis, as well as a final value once the job completes. Note: This field currently may be not populated for batch predictions that use AutoML Models.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1ResourcesConsumed"
          },
          "completionStats": {
            "description": "Output only. Statistics on completed and failed prediction instances.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1CompletionStats"
          },
          "createTime": {
            "description": "Output only. Time when the BatchPredictionJob was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "startTime": {
            "description": "Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the BatchPredictionJob was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key options for a BatchPredictionJob. If this is set, then all resources created by the BatchPredictionJob will be encrypted with the provided encryption key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "disableContainerLogging": {
            "description": "For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.",
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1BatchPredictionJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.batchPredictionJobs.get",
      "resource": "projects.locations.batchPredictionJobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a BatchPredictionJob",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the BatchPredictionJob resource. Format: `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1BatchPredictionJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.batchPredictionJobs.list",
      "resource": "projects.locations.batchPredictionJobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/batchPredictionJobs",
      "description": "Lists BatchPredictionJobs in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the BatchPredictionJobs from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `model_display_name` supports `=`, `!=` comparisons. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListBatchPredictionJobsResponse.next_page_token of the previous JobService.ListBatchPredictionJobs call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListBatchPredictionJobsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.batchPredictionJobs.delete",
      "resource": "projects.locations.batchPredictionJobs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a BatchPredictionJob. Can only be called on jobs that already finished.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the BatchPredictionJob resource to be deleted. Format: `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.batchPredictionJobs.cancel",
      "resource": "projects.locations.batchPredictionJobs",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Cancels a BatchPredictionJob. Starts asynchronous cancellation on the BatchPredictionJob. The server makes the best effort to cancel the job, but success is not guaranteed. Clients can use JobService.GetBatchPredictionJob or other methods to check whether the cancellation succeeded or whether the job completed despite cancellation. On a successful cancellation, the BatchPredictionJob is not deleted;instead its BatchPredictionJob.state is set to `CANCELLED`. Any files already outputted by the job are not deleted.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the BatchPredictionJob to cancel. Format: `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/batchPredictionJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CancelBatchPredictionJobRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CancelBatchPredictionJobRequest",
        "description": "Request message for JobService.CancelBatchPredictionJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.create",
      "resource": "projects.locations.modelDeploymentMonitoringJobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/modelDeploymentMonitoringJobs",
      "description": "Creates a ModelDeploymentMonitoringJob. It will run periodically on a configured interval.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ModelDeploymentMonitoringJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ModelDeploymentMonitoringJob",
        "description": "Represents a job that runs periodically to monitor the deployed models in an endpoint. It will analyze the logged training & prediction data to detect any abnormal behaviors.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Resource name of a ModelDeploymentMonitoringJob.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob.",
            "type": "string"
          },
          "endpoint": {
            "description": "Required. Endpoint resource name. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
            "type": "string"
          },
          "state": {
            "description": "Output only. The detailed state of the monitoring job. When the job is still creating, the state will be 'PENDING'. Once the job is successfully created, the state will be 'RUNNING'. Pause the job, the state will be 'PAUSED'. Resume the job, the state will return to 'RUNNING'.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The job state is unspecified.",
              "The job has been just created or resumed and processing has not yet begun.",
              "The service is preparing to run the job.",
              "The job is in progress.",
              "The job completed successfully.",
              "The job failed.",
              "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
              "The job has been cancelled.",
              "The job has been stopped, and can be resumed.",
              "The job has expired.",
              "The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.",
              "The job is partially succeeded, some results may be missing due to errors."
            ],
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ]
          },
          "scheduleState": {
            "description": "Output only. Schedule state when the monitoring job is in Running state.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Unspecified state.",
              "The pipeline is picked up and wait to run.",
              "The pipeline is offline and will be scheduled for next run.",
              "The pipeline is running."
            ],
            "enum": [
              "MONITORING_SCHEDULE_STATE_UNSPECIFIED",
              "PENDING",
              "OFFLINE",
              "RUNNING"
            ]
          },
          "latestMonitoringPipelineMetadata": {
            "description": "Output only. Latest triggered monitoring pipeline metadata.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata"
          },
          "modelDeploymentMonitoringObjectiveConfigs": {
            "description": "Required. The config for monitoring objectives. This is a per DeployedModel config. Each DeployedModel needs to be configured separately.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig"
            }
          },
          "modelDeploymentMonitoringScheduleConfig": {
            "description": "Required. Schedule config for running the monitoring job.",
            "$ref": "GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig"
          },
          "loggingSamplingStrategy": {
            "description": "Required. Sample Strategy for logging.",
            "$ref": "GoogleCloudAiplatformV1SamplingStrategy"
          },
          "modelMonitoringAlertConfig": {
            "description": "Alert config for model monitoring.",
            "$ref": "GoogleCloudAiplatformV1ModelMonitoringAlertConfig"
          },
          "predictInstanceSchemaUri": {
            "description": "YAML schema file uri describing the format of a single instance, which are given to format this Endpoint's prediction (and explanation). If not set, we will generate predict schema from collected predict requests.",
            "type": "string"
          },
          "samplePredictInstance": {
            "description": "Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests.",
            "type": "any"
          },
          "analysisInstanceSchemaUri": {
            "description": "YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.",
            "type": "string"
          },
          "bigqueryTables": {
            "description": "Output only. The created bigquery tables for the job under customer project. Customer could do their own query & analysis. There could be 4 log tables in maximum: 1. Training data logging predict request/response 2. Serving data logging predict request/response",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable"
            }
          },
          "logTtl": {
            "description": "The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl = 1 day.",
            "type": "string",
            "format": "google-duration"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this ModelDeploymentMonitoringJob was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this ModelDeploymentMonitoringJob was updated most recently.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "nextScheduleTime": {
            "description": "Output only. Timestamp when this monitoring pipeline will be scheduled to run for the next round.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "statsAnomaliesBaseDirectory": {
            "description": "Stats anomalies base folder path.",
            "$ref": "GoogleCloudAiplatformV1GcsDestination"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a ModelDeploymentMonitoringJob. If set, this ModelDeploymentMonitoringJob and all sub-resources of this ModelDeploymentMonitoringJob will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "enableMonitoringPipelineLogs": {
            "description": "If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing).",
            "type": "boolean"
          },
          "error": {
            "description": "Output only. Only populated when the job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ModelDeploymentMonitoringJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.searchModelDeploymentMonitoringStatsAnomalies",
      "resource": "projects.locations.modelDeploymentMonitoringJobs",
      "action": "searchModelDeploymentMonitoringStatsAnomalies",
      "http_method": "POST",
      "path_template": "v1/{+modelDeploymentMonitoringJob}:searchModelDeploymentMonitoringStatsAnomalies",
      "description": "Searches Model Monitoring Statistics generated within a given time window.",
      "required_params": [
        "modelDeploymentMonitoringJob"
      ],
      "parameters": {
        "modelDeploymentMonitoringJob": {
          "description": "Required. ModelDeploymentMonitoring Job resource name. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequest",
        "description": "Request message for JobService.SearchModelDeploymentMonitoringStatsAnomalies.",
        "type": "object",
        "properties": {
          "deployedModelId": {
            "description": "Required. The DeployedModel ID of the [ModelDeploymentMonitoringObjectiveConfig.deployed_model_id].",
            "type": "string"
          },
          "featureDisplayName": {
            "description": "The feature display name. If specified, only return the stats belonging to this feature. Format: ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.feature_display_name, example: \"user_destination\".",
            "type": "string"
          },
          "objectives": {
            "description": "Required. Objectives of the stats to retrieve.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective"
            }
          },
          "pageSize": {
            "description": "The standard list page size.",
            "type": "integer",
            "format": "int32"
          },
          "pageToken": {
            "description": "A page token received from a previous JobService.SearchModelDeploymentMonitoringStatsAnomalies call.",
            "type": "string"
          },
          "startTime": {
            "description": "The earliest timestamp of stats being generated. If not set, indicates fetching stats till the earliest possible one.",
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "The latest timestamp of stats being generated. If not set, indicates feching stats till the latest possible one.",
            "type": "string",
            "format": "google-datetime"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1SearchModelDeploymentMonitoringStatsAnomaliesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.get",
      "resource": "projects.locations.modelDeploymentMonitoringJobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a ModelDeploymentMonitoringJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ModelDeploymentMonitoringJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.list",
      "resource": "projects.locations.modelDeploymentMonitoringJobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/modelDeploymentMonitoringJobs",
      "description": "Lists ModelDeploymentMonitoringJobs in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListModelDeploymentMonitoringJobsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.patch",
      "resource": "projects.locations.modelDeploymentMonitoringJobs",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a ModelDeploymentMonitoringJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. Resource name of a ModelDeploymentMonitoringJob.",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask is used to specify the fields to be overwritten in the ModelDeploymentMonitoringJob resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then only the non-empty fields present in the request will be overwritten. Set the update_mask to `*` to override all fields. For the objective config, the user can either provide the update mask for model_deployment_monitoring_objective_configs or any combination of its nested fields, such as: model_deployment_monitoring_objective_configs.objective_config.training_dataset. Updatable fields: * `display_name` * `model_deployment_monitoring_schedule_config` * `model_monitoring_alert_config` * `logging_sampling_strategy` * `labels` * `log_ttl` * `enable_monitoring_pipeline_logs` . and * `model_deployment_monitoring_objective_configs` . or * `model_deployment_monitoring_objective_configs.objective_config.training_dataset` * `model_deployment_monitoring_objective_configs.objective_config.training_prediction_skew_detection_config` * `model_deployment_monitoring_objective_configs.objective_config.prediction_drift_detection_config`",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ModelDeploymentMonitoringJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ModelDeploymentMonitoringJob",
        "description": "Represents a job that runs periodically to monitor the deployed models in an endpoint. It will analyze the logged training & prediction data to detect any abnormal behaviors.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Resource name of a ModelDeploymentMonitoringJob.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob.",
            "type": "string"
          },
          "endpoint": {
            "description": "Required. Endpoint resource name. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
            "type": "string"
          },
          "state": {
            "description": "Output only. The detailed state of the monitoring job. When the job is still creating, the state will be 'PENDING'. Once the job is successfully created, the state will be 'RUNNING'. Pause the job, the state will be 'PAUSED'. Resume the job, the state will return to 'RUNNING'.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The job state is unspecified.",
              "The job has been just created or resumed and processing has not yet begun.",
              "The service is preparing to run the job.",
              "The job is in progress.",
              "The job completed successfully.",
              "The job failed.",
              "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
              "The job has been cancelled.",
              "The job has been stopped, and can be resumed.",
              "The job has expired.",
              "The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.",
              "The job is partially succeeded, some results may be missing due to errors."
            ],
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ]
          },
          "scheduleState": {
            "description": "Output only. Schedule state when the monitoring job is in Running state.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Unspecified state.",
              "The pipeline is picked up and wait to run.",
              "The pipeline is offline and will be scheduled for next run.",
              "The pipeline is running."
            ],
            "enum": [
              "MONITORING_SCHEDULE_STATE_UNSPECIFIED",
              "PENDING",
              "OFFLINE",
              "RUNNING"
            ]
          },
          "latestMonitoringPipelineMetadata": {
            "description": "Output only. Latest triggered monitoring pipeline metadata.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata"
          },
          "modelDeploymentMonitoringObjectiveConfigs": {
            "description": "Required. The config for monitoring objectives. This is a per DeployedModel config. Each DeployedModel needs to be configured separately.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1ModelDeploymentMonitoringObjectiveConfig"
            }
          },
          "modelDeploymentMonitoringScheduleConfig": {
            "description": "Required. Schedule config for running the monitoring job.",
            "$ref": "GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig"
          },
          "loggingSamplingStrategy": {
            "description": "Required. Sample Strategy for logging.",
            "$ref": "GoogleCloudAiplatformV1SamplingStrategy"
          },
          "modelMonitoringAlertConfig": {
            "description": "Alert config for model monitoring.",
            "$ref": "GoogleCloudAiplatformV1ModelMonitoringAlertConfig"
          },
          "predictInstanceSchemaUri": {
            "description": "YAML schema file uri describing the format of a single instance, which are given to format this Endpoint's prediction (and explanation). If not set, we will generate predict schema from collected predict requests.",
            "type": "string"
          },
          "samplePredictInstance": {
            "description": "Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests.",
            "type": "any"
          },
          "analysisInstanceSchemaUri": {
            "description": "YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.",
            "type": "string"
          },
          "bigqueryTables": {
            "description": "Output only. The created bigquery tables for the job under customer project. Customer could do their own query & analysis. There could be 4 log tables in maximum: 1. Training data logging predict request/response 2. Serving data logging predict request/response",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1ModelDeploymentMonitoringBigQueryTable"
            }
          },
          "logTtl": {
            "description": "The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl = 1 day.",
            "type": "string",
            "format": "google-duration"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this ModelDeploymentMonitoringJob was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this ModelDeploymentMonitoringJob was updated most recently.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "nextScheduleTime": {
            "description": "Output only. Timestamp when this monitoring pipeline will be scheduled to run for the next round.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "statsAnomaliesBaseDirectory": {
            "description": "Stats anomalies base folder path.",
            "$ref": "GoogleCloudAiplatformV1GcsDestination"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a ModelDeploymentMonitoringJob. If set, this ModelDeploymentMonitoringJob and all sub-resources of this ModelDeploymentMonitoringJob will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "enableMonitoringPipelineLogs": {
            "description": "If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing).",
            "type": "boolean"
          },
          "error": {
            "description": "Output only. Only populated when the job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.delete",
      "resource": "projects.locations.modelDeploymentMonitoringJobs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a ModelDeploymentMonitoringJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the model monitoring job to delete. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.pause",
      "resource": "projects.locations.modelDeploymentMonitoringJobs",
      "action": "pause",
      "http_method": "POST",
      "path_template": "v1/{+name}:pause",
      "description": "Pauses a ModelDeploymentMonitoringJob. If the job is running, the server makes a best effort to cancel the job. Will mark ModelDeploymentMonitoringJob.state to 'PAUSED'.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the ModelDeploymentMonitoringJob to pause. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PauseModelDeploymentMonitoringJobRequest",
        "description": "Request message for JobService.PauseModelDeploymentMonitoringJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.resume",
      "resource": "projects.locations.modelDeploymentMonitoringJobs",
      "action": "resume",
      "http_method": "POST",
      "path_template": "v1/{+name}:resume",
      "description": "Resumes a paused ModelDeploymentMonitoringJob. It will start to run from next scheduled time. A deleted ModelDeploymentMonitoringJob can't be resumed.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the ModelDeploymentMonitoringJob to resume. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ResumeModelDeploymentMonitoringJobRequest",
        "description": "Request message for JobService.ResumeModelDeploymentMonitoringJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.list",
      "resource": "projects.locations.modelDeploymentMonitoringJobs.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.get",
      "resource": "projects.locations.modelDeploymentMonitoringJobs.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.delete",
      "resource": "projects.locations.modelDeploymentMonitoringJobs.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.cancel",
      "resource": "projects.locations.modelDeploymentMonitoringJobs.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.modelDeploymentMonitoringJobs.operations.wait",
      "resource": "projects.locations.modelDeploymentMonitoringJobs.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/modelDeploymentMonitoringJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.publishers.models.predict",
      "resource": "projects.locations.publishers.models",
      "action": "predict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:predict",
      "description": "Perform an online prediction.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PredictRequest",
        "description": "Request message for PredictionService.Predict.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "parameters": {
            "description": "The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1PredictResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.publishers.models.rawPredict",
      "resource": "projects.locations.publishers.models",
      "action": "rawPredict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:rawPredict",
      "description": "Perform an online prediction with an arbitrary HTTP payload. The response includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's DeployedModel that served this prediction.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1RawPredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1RawPredictRequest",
        "description": "Request message for PredictionService.RawPredict.",
        "type": "object",
        "properties": {
          "httpBody": {
            "description": "The prediction input. Supports HTTP headers and arbitrary data payload. A DeployedModel may have an upper limit on the number of instances it supports per request. When this limit it is exceeded for an AutoML model, the RawPredict method returns an error. When this limit is exceeded for a custom-trained model, the behavior varies depending on the model. You can specify the schema for each instance in the predict_schemata.instance_schema_uri field when you create a Model. This schema applies when you deploy the `Model` as a `DeployedModel` to an Endpoint and use the `RawPredict` method.",
            "$ref": "GoogleApiHttpBody"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleApiHttpBody"
    },
    {
      "operation_id": "aiplatform.projects.locations.publishers.models.streamRawPredict",
      "resource": "projects.locations.publishers.models",
      "action": "streamRawPredict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:streamRawPredict",
      "description": "Perform a streaming online prediction with an arbitrary HTTP payload.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1StreamRawPredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1StreamRawPredictRequest",
        "description": "Request message for PredictionService.StreamRawPredict.",
        "type": "object",
        "properties": {
          "httpBody": {
            "description": "The prediction input. Supports HTTP headers and arbitrary data payload.",
            "$ref": "GoogleApiHttpBody"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleApiHttpBody"
    },
    {
      "operation_id": "aiplatform.projects.locations.publishers.models.serverStreamingPredict",
      "resource": "projects.locations.publishers.models",
      "action": "serverStreamingPredict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:serverStreamingPredict",
      "description": "Perform a server-side streaming online prediction request for Vertex LLM streaming.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1StreamingPredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1StreamingPredictRequest",
        "description": "Request message for PredictionService.StreamingPredict. The first message must contain endpoint field and optionally input. The subsequent messages must contain input.",
        "type": "object",
        "properties": {
          "inputs": {
            "description": "The prediction input.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tensor"
            }
          },
          "parameters": {
            "description": "The parameters that govern the prediction.",
            "$ref": "GoogleCloudAiplatformV1Tensor"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1StreamingPredictResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.publishers.models.predictLongRunning",
      "resource": "projects.locations.publishers.models",
      "action": "predictLongRunning",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:predictLongRunning",
      "description": "",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PredictLongRunningRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PredictLongRunningRequest",
        "description": "Request message for PredictionService.PredictLongRunning.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "parameters": {
            "description": "Optional. The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.publishers.models.fetchPredictOperation",
      "resource": "projects.locations.publishers.models",
      "action": "fetchPredictOperation",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:fetchPredictOperation",
      "description": "Fetch an asynchronous online prediction operation.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FetchPredictOperationRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FetchPredictOperationRequest",
        "description": "Request message for PredictionService.FetchPredictOperation.",
        "type": "object",
        "properties": {
          "operationName": {
            "description": "Required. The server-assigned name for the operation.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.publishers.models.generateContent",
      "resource": "projects.locations.publishers.models",
      "action": "generateContent",
      "http_method": "POST",
      "path_template": "v1/{+model}:generateContent",
      "description": "Generate content with multimodal inputs.",
      "required_params": [
        "model"
      ],
      "parameters": {
        "model": {
          "description": "Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher model format: `projects/{project}/locations/{location}/publishers/*/models/*` Tuned model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1GenerateContentRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1GenerateContentRequest",
        "description": "Request message for [PredictionService.GenerateContent].",
        "type": "object",
        "properties": {
          "contents": {
            "description": "Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "cachedContent": {
            "description": "Optional. The name of the cached content used as context to serve the prediction. Note: only used in explicit caching, where users can have control over caching (e.g. what content to cache) and enjoy guaranteed cost savings. Format: `projects/{project}/locations/{location}/cachedContents/{cachedContent}`",
            "type": "string"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "toolConfig": {
            "description": "Optional. Tool config. This config is shared for all tools provided in the request.",
            "$ref": "GoogleCloudAiplatformV1ToolConfig"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata for the request. It is used for billing and reporting only. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "safetySettings": {
            "description": "Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SafetySetting"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1GenerateContentResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.publishers.models.streamGenerateContent",
      "resource": "projects.locations.publishers.models",
      "action": "streamGenerateContent",
      "http_method": "POST",
      "path_template": "v1/{+model}:streamGenerateContent",
      "description": "Generate content with multimodal inputs with streaming support.",
      "required_params": [
        "model"
      ],
      "parameters": {
        "model": {
          "description": "Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher model format: `projects/{project}/locations/{location}/publishers/*/models/*` Tuned model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1GenerateContentRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1GenerateContentRequest",
        "description": "Request message for [PredictionService.GenerateContent].",
        "type": "object",
        "properties": {
          "contents": {
            "description": "Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "cachedContent": {
            "description": "Optional. The name of the cached content used as context to serve the prediction. Note: only used in explicit caching, where users can have control over caching (e.g. what content to cache) and enjoy guaranteed cost savings. Format: `projects/{project}/locations/{location}/cachedContents/{cachedContent}`",
            "type": "string"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "toolConfig": {
            "description": "Optional. Tool config. This config is shared for all tools provided in the request.",
            "$ref": "GoogleCloudAiplatformV1ToolConfig"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata for the request. It is used for billing and reporting only. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "safetySettings": {
            "description": "Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SafetySetting"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1GenerateContentResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.publishers.models.countTokens",
      "resource": "projects.locations.publishers.models",
      "action": "countTokens",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:countTokens",
      "description": "Perform a token counting.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to perform token counting. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CountTokensRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CountTokensRequest",
        "description": "Request message for PredictionService.CountTokens.",
        "type": "object",
        "properties": {
          "model": {
            "description": "Optional. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/*/models/*`",
            "type": "string"
          },
          "instances": {
            "description": "Optional. The instances that are the input to token counting call. Schema is identical to the prediction schema of the underlying model.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "contents": {
            "description": "Optional. Input content.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config that the model will use to generate the response.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CountTokensResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.publishers.models.computeTokens",
      "resource": "projects.locations.publishers.models",
      "action": "computeTokens",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:computeTokens",
      "description": "Return a list of tokens based on the input text.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to get lists of tokens and token ids.",
          "pattern": "^projects/[^/]+/locations/[^/]+/publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ComputeTokensRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ComputeTokensRequest",
        "description": "Request message for ComputeTokens RPC call.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Optional. The instances that are the input to token computing API call. Schema is identical to the prediction schema of the text model, even for the non-text models, like chat models, or Codey models.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "model": {
            "description": "Optional. The name of the publisher model requested to serve the prediction. Format: projects/{project}/locations/{location}/publishers/*/models/*",
            "type": "string"
          },
          "contents": {
            "description": "Optional. Input content.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ComputeTokensResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.create",
      "resource": "projects.locations.metadataStores",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/metadataStores",
      "description": "Initializes a MetadataStore, including allocation of resources.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location where the MetadataStore should be created. Format: `projects/{project}/locations/{location}/`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "metadataStoreId": {
          "description": "The {metadatastore} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}` If not provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all MetadataStores in the parent Location. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting MetadataStore.)",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1MetadataStore",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1MetadataStore",
        "description": "Instance of a metadata store. Contains a set of metadata that can be queried.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the MetadataStore instance.",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this MetadataStore was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this MetadataStore was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a Metadata Store. If set, this Metadata Store and all sub-resources of this Metadata Store are secured using this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "description": {
            "description": "Description of the MetadataStore.",
            "type": "string"
          },
          "state": {
            "description": "Output only. State information of the MetadataStore.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1MetadataStoreMetadataStoreState"
          },
          "dataplexConfig": {
            "description": "Optional. Dataplex integration settings.",
            "$ref": "GoogleCloudAiplatformV1MetadataStoreDataplexConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.get",
      "resource": "projects.locations.metadataStores",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Retrieves a specific MetadataStore.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the MetadataStore to retrieve. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1MetadataStore"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.list",
      "resource": "projects.locations.metadataStores",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/metadataStores",
      "description": "Lists MetadataStores for a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The Location whose MetadataStores should be listed. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of Metadata Stores to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous MetadataService.ListMetadataStores call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListMetadataStoresResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.delete",
      "resource": "projects.locations.metadataStores",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a single MetadataStore and all its child resources (Artifacts, Executions, and Contexts).",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the MetadataStore to delete. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "Deprecated: Field is no longer supported.",
          "location": "query",
          "deprecated": true,
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.operations.list",
      "resource": "projects.locations.metadataStores.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.operations.get",
      "resource": "projects.locations.metadataStores.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.operations.delete",
      "resource": "projects.locations.metadataStores.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.operations.cancel",
      "resource": "projects.locations.metadataStores.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.operations.wait",
      "resource": "projects.locations.metadataStores.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.create",
      "resource": "projects.locations.metadataStores.artifacts",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/artifacts",
      "description": "Creates an Artifact associated with a MetadataStore.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the MetadataStore where the Artifact should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "artifactId": {
          "description": "The {artifact} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` If not provided, the Artifact's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Artifacts in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Artifact.)",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Artifact",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Artifact",
        "description": "Instance of a general artifact.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the Artifact.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "User provided display name of the Artifact. May be up to 128 Unicode characters.",
            "type": "string"
          },
          "uri": {
            "description": "The uniform resource identifier of the artifact file. May be empty if there is no actual artifact file.",
            "type": "string"
          },
          "etag": {
            "description": "An eTag used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Artifacts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Artifact (System labels are excluded).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Artifact was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Artifact was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "state": {
            "description": "The state of this Artifact. This is a property of the Artifact, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines), and the system does not prescribe or check the validity of state transitions.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified state for the Artifact.",
              "A state used by systems like Vertex AI Pipelines to indicate that the underlying data item represented by this Artifact is being created.",
              "A state indicating that the Artifact should exist, unless something external to the system deletes it."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "PENDING",
              "LIVE"
            ]
          },
          "schemaTitle": {
            "description": "The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "schemaVersion": {
            "description": "The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "metadata": {
            "description": "Properties of the Artifact. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "description": {
            "description": "Description of the Artifact",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Artifact"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.get",
      "resource": "projects.locations.metadataStores.artifacts",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Retrieves a specific Artifact.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Artifact to retrieve. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Artifact"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.list",
      "resource": "projects.locations.metadataStores.artifacts",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/artifacts",
      "description": "Lists Artifacts in the MetadataStore.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The MetadataStore whose Artifacts should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of Artifacts to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous MetadataService.ListArtifacts call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. The supported set of filters include the following: * **Attribute filtering**: For example: `display_name = \"test\"`. Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = \"2020-11-19T11:30:00-04:00\"` * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata.\"field:1\".number_value = 10.0` * **Context based filtering**: To filter Artifacts based on the contexts to which they belong, use the function operator with the full resource name `in_context()`. For example: `in_context(\"projects//locations//metadataStores//contexts/\")` Each of the above supported filter types can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = \"test\" AND metadata.field1.bool_value = true`.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a \" desc\" suffix; for example: \"foo desc, bar\". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListArtifactsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.patch",
      "resource": "projects.locations.metadataStores.artifacts",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a stored Artifact.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the Artifact.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. A FieldMask indicating which fields should be updated.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "allowMissing": {
          "description": "If set to true, and the Artifact is not found, a new Artifact is created.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Artifact",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Artifact",
        "description": "Instance of a general artifact.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the Artifact.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "User provided display name of the Artifact. May be up to 128 Unicode characters.",
            "type": "string"
          },
          "uri": {
            "description": "The uniform resource identifier of the artifact file. May be empty if there is no actual artifact file.",
            "type": "string"
          },
          "etag": {
            "description": "An eTag used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Artifacts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Artifact (System labels are excluded).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Artifact was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Artifact was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "state": {
            "description": "The state of this Artifact. This is a property of the Artifact, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines), and the system does not prescribe or check the validity of state transitions.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified state for the Artifact.",
              "A state used by systems like Vertex AI Pipelines to indicate that the underlying data item represented by this Artifact is being created.",
              "A state indicating that the Artifact should exist, unless something external to the system deletes it."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "PENDING",
              "LIVE"
            ]
          },
          "schemaTitle": {
            "description": "The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "schemaVersion": {
            "description": "The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "metadata": {
            "description": "Properties of the Artifact. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "description": {
            "description": "Description of the Artifact",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Artifact"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.delete",
      "resource": "projects.locations.metadataStores.artifacts",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes an Artifact.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Artifact to delete. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "etag": {
          "description": "Optional. The etag of the Artifact to delete. If this is provided, it must match the server's etag. Otherwise, the request will fail with a FAILED_PRECONDITION.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.purge",
      "resource": "projects.locations.metadataStores.artifacts",
      "action": "purge",
      "http_method": "POST",
      "path_template": "v1/{+parent}/artifacts:purge",
      "description": "Purges Artifacts.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The metadata store to purge Artifacts from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PurgeArtifactsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PurgeArtifactsRequest",
        "description": "Request message for MetadataService.PurgeArtifacts.",
        "type": "object",
        "properties": {
          "filter": {
            "description": "Required. A required filter matching the Artifacts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.",
            "type": "string"
          },
          "force": {
            "description": "Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Artifact names that would be deleted.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.queryArtifactLineageSubgraph",
      "resource": "projects.locations.metadataStores.artifacts",
      "action": "queryArtifactLineageSubgraph",
      "http_method": "GET",
      "path_template": "v1/{+artifact}:queryArtifactLineageSubgraph",
      "description": "Retrieves lineage of an Artifact represented through Artifacts and Executions connected by Event edges and returned as a LineageSubgraph.",
      "required_params": [
        "artifact"
      ],
      "parameters": {
        "artifact": {
          "description": "Required. The resource name of the Artifact whose Lineage needs to be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` The request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the number of Events that would be returned for the Context exceeds 1000.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "maxHops": {
          "description": "Specifies the size of the lineage graph in terms of number of hops from the specified artifact. Negative Value: INVALID_ARGUMENT error is returned 0: Only input artifact is returned. No value: Transitive closure is performed to return the complete graph.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "filter": {
          "description": "Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the Lineage Subgraph. The syntax to define filter query is based on https://google.aip.dev/160. The supported set of filters include the following: * **Attribute filtering**: For example: `display_name = \"test\"` Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = \"2020-11-19T11:30:00-04:00\"` * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata.\"field:1\".number_value = 10.0` Each of the above supported filter types can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = \"test\" AND metadata.field1.bool_value = true`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1LineageSubgraph"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.operations.list",
      "resource": "projects.locations.metadataStores.artifacts.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.operations.get",
      "resource": "projects.locations.metadataStores.artifacts.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.operations.delete",
      "resource": "projects.locations.metadataStores.artifacts.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.operations.cancel",
      "resource": "projects.locations.metadataStores.artifacts.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.artifacts.operations.wait",
      "resource": "projects.locations.metadataStores.artifacts.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/artifacts/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.create",
      "resource": "projects.locations.metadataStores.contexts",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/contexts",
      "description": "Creates a Context associated with a MetadataStore.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the MetadataStore where the Context should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "contextId": {
          "description": "The {context} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`. If not provided, the Context's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Contexts in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Context.)",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Context",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Context",
        "description": "Instance of a general context.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The resource name of the Context.",
            "type": "string"
          },
          "displayName": {
            "description": "User provided display name of the Context. May be up to 128 Unicode characters.",
            "type": "string"
          },
          "etag": {
            "description": "An eTag used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Contexts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Context (System labels are excluded).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Context was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Context was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "parentContexts": {
            "description": "Output only. A list of resource names of Contexts that are parents of this Context. A Context may have at most 10 parent_contexts.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "schemaTitle": {
            "description": "The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "schemaVersion": {
            "description": "The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "metadata": {
            "description": "Properties of the Context. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "description": {
            "description": "Description of the Context",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Context"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.get",
      "resource": "projects.locations.metadataStores.contexts",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Retrieves a specific Context.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Context to retrieve. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Context"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.list",
      "resource": "projects.locations.metadataStores.contexts",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/contexts",
      "description": "Lists Contexts on the MetadataStore.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The MetadataStore whose Contexts should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of Contexts to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous MetadataService.ListContexts call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Filter specifying the boolean condition for the Contexts to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are the supported set of filters: * **Attribute filtering**: For example: `display_name = \"test\"`. Supported fields include: `name`, `display_name`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = \"2020-11-19T11:30:00-04:00\"`. * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0`. In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata.\"field:1\".number_value = 10.0` * **Parent Child filtering**: To filter Contexts based on parent-child relationship use the HAS operator as follows: ``` parent_contexts: \"projects//locations//metadataStores//contexts/\" child_contexts: \"projects//locations//metadataStores//contexts/\" ``` Each of the above supported filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = \"test\" AND metadata.field1.bool_value = true`.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a \" desc\" suffix; for example: \"foo desc, bar\". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListContextsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.patch",
      "resource": "projects.locations.metadataStores.contexts",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a stored Context.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. The resource name of the Context.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. A FieldMask indicating which fields should be updated.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "allowMissing": {
          "description": "If set to true, and the Context is not found, a new Context is created.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Context",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Context",
        "description": "Instance of a general context.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. The resource name of the Context.",
            "type": "string"
          },
          "displayName": {
            "description": "User provided display name of the Context. May be up to 128 Unicode characters.",
            "type": "string"
          },
          "etag": {
            "description": "An eTag used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Contexts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Context (System labels are excluded).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Context was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Context was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "parentContexts": {
            "description": "Output only. A list of resource names of Contexts that are parents of this Context. A Context may have at most 10 parent_contexts.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "schemaTitle": {
            "description": "The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "schemaVersion": {
            "description": "The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "metadata": {
            "description": "Properties of the Context. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "description": {
            "description": "Description of the Context",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Context"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.delete",
      "resource": "projects.locations.metadataStores.contexts",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a stored Context.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Context to delete. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "The force deletion semantics is still undefined. Users should not use this field.",
          "location": "query",
          "type": "boolean"
        },
        "etag": {
          "description": "Optional. The etag of the Context to delete. If this is provided, it must match the server's etag. Otherwise, the request will fail with a FAILED_PRECONDITION.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.purge",
      "resource": "projects.locations.metadataStores.contexts",
      "action": "purge",
      "http_method": "POST",
      "path_template": "v1/{+parent}/contexts:purge",
      "description": "Purges Contexts.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The metadata store to purge Contexts from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PurgeContextsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PurgeContextsRequest",
        "description": "Request message for MetadataService.PurgeContexts.",
        "type": "object",
        "properties": {
          "filter": {
            "description": "Required. A required filter matching the Contexts to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.",
            "type": "string"
          },
          "force": {
            "description": "Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Context names that would be deleted.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.addContextArtifactsAndExecutions",
      "resource": "projects.locations.metadataStores.contexts",
      "action": "addContextArtifactsAndExecutions",
      "http_method": "POST",
      "path_template": "v1/{+context}:addContextArtifactsAndExecutions",
      "description": "Adds a set of Artifacts and Executions to a Context. If any of the Artifacts or Executions have already been added to a Context, they are simply skipped.",
      "required_params": [
        "context"
      ],
      "parameters": {
        "context": {
          "description": "Required. The resource name of the Context that the Artifacts and Executions belong to. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsRequest",
        "description": "Request message for MetadataService.AddContextArtifactsAndExecutions.",
        "type": "object",
        "properties": {
          "artifacts": {
            "description": "The resource names of the Artifacts to attribute to the Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}`",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "executions": {
            "description": "The resource names of the Executions to associate with the Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1AddContextArtifactsAndExecutionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.addContextChildren",
      "resource": "projects.locations.metadataStores.contexts",
      "action": "addContextChildren",
      "http_method": "POST",
      "path_template": "v1/{+context}:addContextChildren",
      "description": "Adds a set of Contexts as children to a parent Context. If any of the child Contexts have already been added to the parent Context, they are simply skipped. If this call would create a cycle or cause any Context to have more than 10 parents, the request will fail with an INVALID_ARGUMENT error.",
      "required_params": [
        "context"
      ],
      "parameters": {
        "context": {
          "description": "Required. The resource name of the parent Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1AddContextChildrenRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1AddContextChildrenRequest",
        "description": "Request message for MetadataService.AddContextChildren.",
        "type": "object",
        "properties": {
          "childContexts": {
            "description": "The resource names of the child Contexts.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1AddContextChildrenResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.removeContextChildren",
      "resource": "projects.locations.metadataStores.contexts",
      "action": "removeContextChildren",
      "http_method": "POST",
      "path_template": "v1/{+context}:removeContextChildren",
      "description": "Remove a set of children contexts from a parent Context. If any of the child Contexts were NOT added to the parent Context, they are simply skipped.",
      "required_params": [
        "context"
      ],
      "parameters": {
        "context": {
          "description": "Required. The resource name of the parent Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1RemoveContextChildrenRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1RemoveContextChildrenRequest",
        "description": "Request message for MetadataService.DeleteContextChildrenRequest.",
        "type": "object",
        "properties": {
          "childContexts": {
            "description": "The resource names of the child Contexts.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1RemoveContextChildrenResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.queryContextLineageSubgraph",
      "resource": "projects.locations.metadataStores.contexts",
      "action": "queryContextLineageSubgraph",
      "http_method": "GET",
      "path_template": "v1/{+context}:queryContextLineageSubgraph",
      "description": "Retrieves Artifacts and Executions within the specified Context, connected by Event edges and returned as a LineageSubgraph.",
      "required_params": [
        "context"
      ],
      "parameters": {
        "context": {
          "description": "Required. The resource name of the Context whose Artifacts and Executions should be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}` The request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the number of Events that would be returned for the Context exceeds 1000.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1LineageSubgraph"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.operations.list",
      "resource": "projects.locations.metadataStores.contexts.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.operations.get",
      "resource": "projects.locations.metadataStores.contexts.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.operations.delete",
      "resource": "projects.locations.metadataStores.contexts.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.operations.cancel",
      "resource": "projects.locations.metadataStores.contexts.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.contexts.operations.wait",
      "resource": "projects.locations.metadataStores.contexts.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/contexts/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.create",
      "resource": "projects.locations.metadataStores.executions",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/executions",
      "description": "Creates an Execution associated with a MetadataStore.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the MetadataStore where the Execution should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "executionId": {
          "description": "The {execution} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}` If not provided, the Execution's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Executions in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Execution.)",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Execution",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Execution",
        "description": "Instance of a general execution.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the Execution.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "User provided display name of the Execution. May be up to 128 Unicode characters.",
            "type": "string"
          },
          "state": {
            "description": "The state of this Execution. This is a property of the Execution, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines) and the system does not prescribe or check the validity of state transitions.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified Execution state",
              "The Execution is new",
              "The Execution is running",
              "The Execution has finished running",
              "The Execution has failed",
              "The Execution completed through Cache hit.",
              "The Execution was cancelled."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "NEW",
              "RUNNING",
              "COMPLETE",
              "FAILED",
              "CACHED",
              "CANCELLED"
            ]
          },
          "etag": {
            "description": "An eTag used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Executions. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Execution (System labels are excluded).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Execution was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Execution was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "schemaTitle": {
            "description": "The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "schemaVersion": {
            "description": "The version of the schema in `schema_title` to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "metadata": {
            "description": "Properties of the Execution. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "description": {
            "description": "Description of the Execution",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Execution"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.get",
      "resource": "projects.locations.metadataStores.executions",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Retrieves a specific Execution.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Execution to retrieve. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Execution"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.list",
      "resource": "projects.locations.metadataStores.executions",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/executions",
      "description": "Lists Executions in the MetadataStore.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The MetadataStore whose Executions should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of Executions to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous MetadataService.ListExecutions call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with an INVALID_ARGUMENT error.)",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Filter specifying the boolean condition for the Executions to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are the supported set of filters: * **Attribute filtering**: For example: `display_name = \"test\"`. Supported fields include: `name`, `display_name`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = \"2020-11-19T11:30:00-04:00\"`. * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..` For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata.\"field:1\".number_value = 10.0` * **Context based filtering**: To filter Executions based on the contexts to which they belong use the function operator with the full resource name: `in_context()`. For example: `in_context(\"projects//locations//metadataStores//contexts/\")` Each of the above supported filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = \"test\" AND metadata.field1.bool_value = true`.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a \" desc\" suffix; for example: \"foo desc, bar\". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListExecutionsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.patch",
      "resource": "projects.locations.metadataStores.executions",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a stored Execution.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the Execution.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. A FieldMask indicating which fields should be updated.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "allowMissing": {
          "description": "If set to true, and the Execution is not found, a new Execution is created.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Execution",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Execution",
        "description": "Instance of a general execution.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the Execution.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "User provided display name of the Execution. May be up to 128 Unicode characters.",
            "type": "string"
          },
          "state": {
            "description": "The state of this Execution. This is a property of the Execution, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines) and the system does not prescribe or check the validity of state transitions.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified Execution state",
              "The Execution is new",
              "The Execution is running",
              "The Execution has finished running",
              "The Execution has failed",
              "The Execution completed through Cache hit.",
              "The Execution was cancelled."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "NEW",
              "RUNNING",
              "COMPLETE",
              "FAILED",
              "CACHED",
              "CANCELLED"
            ]
          },
          "etag": {
            "description": "An eTag used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Executions. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Execution (System labels are excluded).",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createTime": {
            "description": "Output only. Timestamp when this Execution was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Execution was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "schemaTitle": {
            "description": "The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "schemaVersion": {
            "description": "The version of the schema in `schema_title` to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.",
            "type": "string"
          },
          "metadata": {
            "description": "Properties of the Execution. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "description": {
            "description": "Description of the Execution",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Execution"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.delete",
      "resource": "projects.locations.metadataStores.executions",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes an Execution.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the Execution to delete. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "etag": {
          "description": "Optional. The etag of the Execution to delete. If this is provided, it must match the server's etag. Otherwise, the request will fail with a FAILED_PRECONDITION.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.purge",
      "resource": "projects.locations.metadataStores.executions",
      "action": "purge",
      "http_method": "POST",
      "path_template": "v1/{+parent}/executions:purge",
      "description": "Purges Executions.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The metadata store to purge Executions from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PurgeExecutionsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PurgeExecutionsRequest",
        "description": "Request message for MetadataService.PurgeExecutions.",
        "type": "object",
        "properties": {
          "filter": {
            "description": "Required. A required filter matching the Executions to be purged. E.g., `update_time <= 2020-11-19T11:30:00-04:00`.",
            "type": "string"
          },
          "force": {
            "description": "Optional. Flag to indicate to actually perform the purge. If `force` is set to false, the method will return a sample of Execution names that would be deleted.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.addExecutionEvents",
      "resource": "projects.locations.metadataStores.executions",
      "action": "addExecutionEvents",
      "http_method": "POST",
      "path_template": "v1/{+execution}:addExecutionEvents",
      "description": "Adds Events to the specified Execution. An Event indicates whether an Artifact was used as an input or output for an Execution. If an Event already exists between the Execution and the Artifact, the Event is skipped.",
      "required_params": [
        "execution"
      ],
      "parameters": {
        "execution": {
          "description": "Required. The resource name of the Execution that the Events connect Artifacts with. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1AddExecutionEventsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1AddExecutionEventsRequest",
        "description": "Request message for MetadataService.AddExecutionEvents.",
        "type": "object",
        "properties": {
          "events": {
            "description": "The Events to create and add.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Event"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1AddExecutionEventsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.queryExecutionInputsAndOutputs",
      "resource": "projects.locations.metadataStores.executions",
      "action": "queryExecutionInputsAndOutputs",
      "http_method": "GET",
      "path_template": "v1/{+execution}:queryExecutionInputsAndOutputs",
      "description": "Obtains the set of input and output Artifacts for this Execution, in the form of LineageSubgraph that also contains the Execution and connecting Events.",
      "required_params": [
        "execution"
      ],
      "parameters": {
        "execution": {
          "description": "Required. The resource name of the Execution whose input and output Artifacts should be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1LineageSubgraph"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.operations.list",
      "resource": "projects.locations.metadataStores.executions.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.operations.get",
      "resource": "projects.locations.metadataStores.executions.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.operations.delete",
      "resource": "projects.locations.metadataStores.executions.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.operations.cancel",
      "resource": "projects.locations.metadataStores.executions.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.executions.operations.wait",
      "resource": "projects.locations.metadataStores.executions.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/executions/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.metadataSchemas.create",
      "resource": "projects.locations.metadataStores.metadataSchemas",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/metadataSchemas",
      "description": "Creates a MetadataSchema.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the MetadataStore where the MetadataSchema should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "metadataSchemaId": {
          "description": "The {metadata_schema} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}` If not provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all MetadataSchemas in the parent Location. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting MetadataSchema.)",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1MetadataSchema",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1MetadataSchema",
        "description": "Instance of a general MetadataSchema.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the MetadataSchema.",
            "readOnly": true,
            "type": "string"
          },
          "schemaVersion": {
            "description": "The version of the MetadataSchema. The version's format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc.",
            "type": "string"
          },
          "schema": {
            "description": "Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)",
            "type": "string"
          },
          "schemaType": {
            "description": "The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema.",
            "type": "string",
            "enumDescriptions": [
              "Unspecified type for the MetadataSchema.",
              "A type indicating that the MetadataSchema will be used by Artifacts.",
              "A typee indicating that the MetadataSchema will be used by Executions.",
              "A state indicating that the MetadataSchema will be used by Contexts."
            ],
            "enum": [
              "METADATA_SCHEMA_TYPE_UNSPECIFIED",
              "ARTIFACT_TYPE",
              "EXECUTION_TYPE",
              "CONTEXT_TYPE"
            ]
          },
          "createTime": {
            "description": "Output only. Timestamp when this MetadataSchema was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "description": {
            "description": "Description of the Metadata Schema",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1MetadataSchema"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.metadataSchemas.get",
      "resource": "projects.locations.metadataStores.metadataSchemas",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Retrieves a specific MetadataSchema.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the MetadataSchema to retrieve. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+/metadataSchemas/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1MetadataSchema"
    },
    {
      "operation_id": "aiplatform.projects.locations.metadataStores.metadataSchemas.list",
      "resource": "projects.locations.metadataStores.metadataSchemas",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/metadataSchemas",
      "description": "Lists MetadataSchemas.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The MetadataStore whose MetadataSchemas should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/metadataStores/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of MetadataSchemas to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous MetadataService.ListMetadataSchemas call. Provide this to retrieve the next page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "A query to filter available MetadataSchemas for matching results.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListMetadataSchemasResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.migratableResources.search",
      "resource": "projects.locations.migratableResources",
      "action": "search",
      "http_method": "POST",
      "path_template": "v1/{+parent}/migratableResources:search",
      "description": "Searches all of the resources in automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com that can be migrated to Vertex AI's given location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The location that the migratable resources should be searched from. It's the Vertex AI location that the resources can be migrated to, not the resources' original location. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1SearchMigratableResourcesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1SearchMigratableResourcesRequest",
        "description": "Request message for MigrationService.SearchMigratableResources.",
        "type": "object",
        "properties": {
          "pageSize": {
            "description": "The standard page size. The default and maximum value is 100.",
            "type": "integer",
            "format": "int32"
          },
          "pageToken": {
            "description": "The standard page token.",
            "type": "string"
          },
          "filter": {
            "description": "A filter for your search. You can use the following types of filters: * Resource type filters. The following strings filter for a specific type of MigratableResource: * `ml_engine_model_version:*` * `automl_model:*` * `automl_dataset:*` * `data_labeling_dataset:*` * \"Migrated or not\" filters. The following strings filter for resources that either have or have not already been migrated: * `last_migrate_time:*` filters for migrated resources. * `NOT last_migrate_time:*` filters for not yet migrated resources.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1SearchMigratableResourcesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.migratableResources.batchMigrate",
      "resource": "projects.locations.migratableResources",
      "action": "batchMigrate",
      "http_method": "POST",
      "path_template": "v1/{+parent}/migratableResources:batchMigrate",
      "description": "Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and datalabeling.googleapis.com to Vertex AI.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The location of the migrated resource will live in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchMigrateResourcesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchMigrateResourcesRequest",
        "description": "Request message for MigrationService.BatchMigrateResources.",
        "type": "object",
        "properties": {
          "migrateResourceRequests": {
            "description": "Required. The request messages specifying the resources to migrate. They must be in the same location as the destination. Up to 50 resources can be migrated in one batch.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1MigrateResourceRequest"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.migratableResources.operations.list",
      "resource": "projects.locations.migratableResources.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.migratableResources.operations.get",
      "resource": "projects.locations.migratableResources.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.migratableResources.operations.delete",
      "resource": "projects.locations.migratableResources.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.migratableResources.operations.cancel",
      "resource": "projects.locations.migratableResources.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.migratableResources.operations.wait",
      "resource": "projects.locations.migratableResources.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/migratableResources/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.assign",
      "resource": "projects.locations.notebookRuntimes",
      "action": "assign",
      "http_method": "POST",
      "path_template": "v1/{+parent}/notebookRuntimes:assign",
      "description": "Assigns a NotebookRuntime to a user for a particular Notebook file. This method will either returns an existing assignment or generates a new one.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to get the NotebookRuntime assignment. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1AssignNotebookRuntimeRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1AssignNotebookRuntimeRequest",
        "description": "Request message for NotebookService.AssignNotebookRuntime.",
        "type": "object",
        "properties": {
          "notebookRuntimeTemplate": {
            "description": "Required. The resource name of the NotebookRuntimeTemplate based on which a NotebookRuntime will be assigned (reuse or create a new one).",
            "type": "string"
          },
          "notebookRuntime": {
            "description": "Required. Provide runtime specific information (e.g. runtime owner, notebook id) used for NotebookRuntime assignment.",
            "$ref": "GoogleCloudAiplatformV1NotebookRuntime"
          },
          "notebookRuntimeId": {
            "description": "Optional. User specified ID for the notebook runtime.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.get",
      "resource": "projects.locations.notebookRuntimes",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a NotebookRuntime.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NotebookRuntime resource. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1NotebookRuntime"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.list",
      "resource": "projects.locations.notebookRuntimes",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/notebookRuntimes",
      "description": "Lists NotebookRuntimes in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location from which to list the NotebookRuntimes. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookRuntime` supports = and !=. `notebookRuntime` represents the NotebookRuntime ID, i.e. the last segment of the NotebookRuntime's resource name. * `displayName` supports = and != and regex. * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's resource name. * `healthState` supports = and !=. healthState enum: [HEALTHY, UNHEALTHY, HEALTH_STATE_UNSPECIFIED]. * `runtimeState` supports = and !=. runtimeState enum: [RUNTIME_STATE_UNSPECIFIED, RUNNING, BEING_STARTED, BEING_STOPPED, STOPPED, BEING_UPGRADED, ERROR, INVALID]. * `runtimeUser` supports = and !=. * API version is UI only: `uiState` supports = and !=. uiState enum: [UI_RESOURCE_STATE_UNSPECIFIED, UI_RESOURCE_STATE_BEING_CREATED, UI_RESOURCE_STATE_ACTIVE, UI_RESOURCE_STATE_BEING_DELETED, UI_RESOURCE_STATE_CREATION_FAILED]. * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. * `machineType` supports = and !=. * `acceleratorType` supports = and !=. Some examples: * `notebookRuntime=\"notebookRuntime123\"` * `displayName=\"myDisplayName\"` and `displayName=~\"myDisplayNameRegex\"` * `notebookRuntimeTemplate=\"notebookRuntimeTemplate321\"` * `healthState=HEALTHY` * `runtimeState=RUNNING` * `runtimeUser=\"test@google.com\"` * `uiState=UI_RESOURCE_STATE_BEING_DELETED` * `notebookRuntimeType=USER_DEFINED` * `machineType=e2-standard-4` * `acceleratorType=NVIDIA_TESLA_T4`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token. Typically obtained via ListNotebookRuntimesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimes call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Optional. Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        },
        "orderBy": {
          "description": "Optional. A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListNotebookRuntimesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.delete",
      "resource": "projects.locations.notebookRuntimes",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a NotebookRuntime.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NotebookRuntime resource to be deleted. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.upgrade",
      "resource": "projects.locations.notebookRuntimes",
      "action": "upgrade",
      "http_method": "POST",
      "path_template": "v1/{+name}:upgrade",
      "description": "Upgrades a NotebookRuntime.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NotebookRuntime resource to be upgrade. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1UpgradeNotebookRuntimeRequest",
        "description": "Request message for NotebookService.UpgradeNotebookRuntime.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.start",
      "resource": "projects.locations.notebookRuntimes",
      "action": "start",
      "http_method": "POST",
      "path_template": "v1/{+name}:start",
      "description": "Starts a NotebookRuntime.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NotebookRuntime resource to be started. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1StartNotebookRuntimeRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1StartNotebookRuntimeRequest",
        "description": "Request message for NotebookService.StartNotebookRuntime.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.stop",
      "resource": "projects.locations.notebookRuntimes",
      "action": "stop",
      "http_method": "POST",
      "path_template": "v1/{+name}:stop",
      "description": "Stops a NotebookRuntime.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NotebookRuntime resource to be stopped. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1StopNotebookRuntimeRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1StopNotebookRuntimeRequest",
        "description": "Request message for NotebookService.StopNotebookRuntime.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.operations.list",
      "resource": "projects.locations.notebookRuntimes.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.operations.get",
      "resource": "projects.locations.notebookRuntimes.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.operations.delete",
      "resource": "projects.locations.notebookRuntimes.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.operations.cancel",
      "resource": "projects.locations.notebookRuntimes.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookRuntimes.operations.wait",
      "resource": "projects.locations.notebookRuntimes.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookRuntimes/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookExecutionJobs.create",
      "resource": "projects.locations.notebookExecutionJobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/notebookExecutionJobs",
      "description": "Creates a NotebookExecutionJob.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the NotebookExecutionJob. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "notebookExecutionJobId": {
          "description": "Optional. User specified ID for the NotebookExecutionJob.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1NotebookExecutionJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1NotebookExecutionJob",
        "description": "NotebookExecutionJob represents an instance of a notebook execution.",
        "type": "object",
        "properties": {
          "dataformRepositorySource": {
            "description": "The Dataform Repository pointing to a single file notebook repository.",
            "$ref": "GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource"
          },
          "gcsNotebookSource": {
            "description": "The Cloud Storage url pointing to the ipynb file. Format: `gs://bucket/notebook_file.ipynb`",
            "$ref": "GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource"
          },
          "directNotebookSource": {
            "description": "The contents of an input notebook file.",
            "$ref": "GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource"
          },
          "notebookRuntimeTemplateResourceName": {
            "description": "The NotebookRuntimeTemplate to source compute configuration from.",
            "type": "string"
          },
          "customEnvironmentSpec": {
            "description": "The custom compute configuration for an execution job.",
            "$ref": "GoogleCloudAiplatformV1NotebookExecutionJobCustomEnvironmentSpec"
          },
          "gcsOutputUri": {
            "description": "The Cloud Storage location to upload the result to. Format: `gs://bucket-name`",
            "type": "string"
          },
          "executionUser": {
            "description": "The user email to run the execution as. Only supported by Colab runtimes.",
            "type": "string"
          },
          "serviceAccount": {
            "description": "The service account to run the execution as.",
            "type": "string"
          },
          "workbenchRuntime": {
            "description": "The Workbench runtime configuration to use for the notebook execution.",
            "$ref": "GoogleCloudAiplatformV1NotebookExecutionJobWorkbenchRuntime"
          },
          "name": {
            "description": "Output only. The resource name of this NotebookExecutionJob. Format: `projects/{project_id}/locations/{location}/notebookExecutionJobs/{job_id}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the NotebookExecutionJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "executionTimeout": {
            "description": "Max running time of the execution job in seconds (default 86400s / 24 hrs).",
            "type": "string",
            "format": "google-duration"
          },
          "scheduleResourceName": {
            "description": "The Schedule resource name if this job is triggered by one. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`",
            "type": "string"
          },
          "jobState": {
            "description": "Output only. The state of the NotebookExecutionJob.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The job state is unspecified.",
              "The job has been just created or resumed and processing has not yet begun.",
              "The service is preparing to run the job.",
              "The job is in progress.",
              "The job completed successfully.",
              "The job failed.",
              "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
              "The job has been cancelled.",
              "The job has been stopped, and can be resumed.",
              "The job has expired.",
              "The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.",
              "The job is partially succeeded, some results may be missing due to errors."
            ],
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ]
          },
          "status": {
            "description": "Output only. Populated when the NotebookExecutionJob is completed. When there is an error during notebook execution, the error details are populated.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "createTime": {
            "description": "Output only. Timestamp when this NotebookExecutionJob was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this NotebookExecutionJob was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize NotebookExecutionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "kernelName": {
            "description": "The name of the kernel to use during notebook execution. If unset, the default kernel is used.",
            "type": "string"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for the notebook execution job. This field is auto-populated if the NotebookRuntimeTemplate has an encryption spec.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookExecutionJobs.get",
      "resource": "projects.locations.notebookExecutionJobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a NotebookExecutionJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NotebookExecutionJob resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "view": {
          "description": "Optional. The NotebookExecutionJob view. Defaults to BASIC.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "When unspecified, the API defaults to the BASIC view.",
            "Includes all fields except for direct notebook inputs.",
            "Includes all fields."
          ],
          "enum": [
            "NOTEBOOK_EXECUTION_JOB_VIEW_UNSPECIFIED",
            "NOTEBOOK_EXECUTION_JOB_VIEW_BASIC",
            "NOTEBOOK_EXECUTION_JOB_VIEW_FULL"
          ]
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1NotebookExecutionJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookExecutionJobs.list",
      "resource": "projects.locations.notebookExecutionJobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/notebookExecutionJobs",
      "description": "Lists NotebookExecutionJobs in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location from which to list the NotebookExecutionJobs. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookExecutionJob` supports = and !=. `notebookExecutionJob` represents the NotebookExecutionJob ID. * `displayName` supports = and != and regex. * `schedule` supports = and != and regex. Some examples: * `notebookExecutionJob=\"123\"` * `notebookExecutionJob=\"my-execution-job\"` * `displayName=\"myDisplayName\"` and `displayName=~\"myDisplayNameRegex\"`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token. Typically obtained via ListNotebookExecutionJobsResponse.next_page_token of the previous NotebookService.ListNotebookExecutionJobs call.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Optional. A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.",
          "location": "query",
          "type": "string"
        },
        "view": {
          "description": "Optional. The NotebookExecutionJob view. Defaults to BASIC.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "When unspecified, the API defaults to the BASIC view.",
            "Includes all fields except for direct notebook inputs.",
            "Includes all fields."
          ],
          "enum": [
            "NOTEBOOK_EXECUTION_JOB_VIEW_UNSPECIFIED",
            "NOTEBOOK_EXECUTION_JOB_VIEW_BASIC",
            "NOTEBOOK_EXECUTION_JOB_VIEW_FULL"
          ]
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListNotebookExecutionJobsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookExecutionJobs.delete",
      "resource": "projects.locations.notebookExecutionJobs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a NotebookExecutionJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the NotebookExecutionJob resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookExecutionJobs.operations.list",
      "resource": "projects.locations.notebookExecutionJobs.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookExecutionJobs.operations.get",
      "resource": "projects.locations.notebookExecutionJobs.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookExecutionJobs.operations.delete",
      "resource": "projects.locations.notebookExecutionJobs.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookExecutionJobs.operations.cancel",
      "resource": "projects.locations.notebookExecutionJobs.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.notebookExecutionJobs.operations.wait",
      "resource": "projects.locations.notebookExecutionJobs.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/notebookExecutionJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.create",
      "resource": "projects.locations.persistentResources",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/persistentResources",
      "description": "Creates a PersistentResource.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the PersistentResource in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "persistentResourceId": {
          "description": "Required. The ID to use for the PersistentResource, which become the final component of the PersistentResource's resource name. The maximum length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PersistentResource",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PersistentResource",
        "description": "Represents long-lasting resources that are dedicated to users to runs custom workloads. A PersistentResource can have multiple node pools and each node pool can have its own machine spec.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Resource name of a PersistentResource.",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. The display name of the PersistentResource. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "resourcePools": {
            "description": "Required. The spec of the pools of different resources.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1ResourcePool"
            }
          },
          "state": {
            "description": "Output only. The detailed state of a Study.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "The PROVISIONING state indicates the persistent resources is being created.",
              "The RUNNING state indicates the persistent resource is healthy and fully usable.",
              "The STOPPING state indicates the persistent resource is being deleted.",
              "The ERROR state indicates the persistent resource may be unusable. Details can be found in the `error` field.",
              "The REBOOTING state indicates the persistent resource is being rebooted (PR is not available right now but is expected to be ready again later).",
              "The UPDATING state indicates the persistent resource is being updated."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "PROVISIONING",
              "RUNNING",
              "STOPPING",
              "ERROR",
              "REBOOTING",
              "UPDATING"
            ]
          },
          "error": {
            "description": "Output only. Only populated when persistent resource's state is `STOPPING` or `ERROR`.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "createTime": {
            "description": "Output only. Time when the PersistentResource was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "startTime": {
            "description": "Output only. Time when the PersistentResource for the first time entered the `RUNNING` state.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the PersistentResource was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize PersistentResource. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "network": {
            "description": "Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to peered with Vertex AI to host the persistent resources. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the resources aren't peered with any network.",
            "type": "string"
          },
          "pscInterfaceConfig": {
            "description": "Optional. Configuration for PSC-I for PersistentResource.",
            "$ref": "GoogleCloudAiplatformV1PscInterfaceConfig"
          },
          "encryptionSpec": {
            "description": "Optional. Customer-managed encryption key spec for a PersistentResource. If set, this PersistentResource and all sub-resources of this PersistentResource will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "resourceRuntimeSpec": {
            "description": "Optional. Persistent Resource runtime spec. For example, used for Ray cluster configuration.",
            "$ref": "GoogleCloudAiplatformV1ResourceRuntimeSpec"
          },
          "resourceRuntime": {
            "description": "Output only. Runtime information of the Persistent Resource.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1ResourceRuntime"
          },
          "reservedIpRanges": {
            "description": "Optional. A list of names for the reserved IP ranges under the VPC network that can be used for this persistent resource. If set, we will deploy the persistent resource within the provided IP ranges. Otherwise, the persistent resource is deployed to any IP ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.get",
      "resource": "projects.locations.persistentResources",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a PersistentResource.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the PersistentResource resource. Format: `projects/{project_id_or_number}/locations/{location_id}/persistentResources/{persistent_resource_id}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1PersistentResource"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.list",
      "resource": "projects.locations.persistentResources",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/persistentResources",
      "description": "Lists PersistentResources in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the PersistentResources from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token. Typically obtained via ListPersistentResourcesResponse.next_page_token of the previous PersistentResourceService.ListPersistentResource call.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListPersistentResourcesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.delete",
      "resource": "projects.locations.persistentResources",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a PersistentResource.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the PersistentResource to be deleted. Format: `projects/{project}/locations/{location}/persistentResources/{persistent_resource}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.patch",
      "resource": "projects.locations.persistentResources",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a PersistentResource.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. Resource name of a PersistentResource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. Specify the fields to be overwritten in the PersistentResource by the update method.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PersistentResource",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PersistentResource",
        "description": "Represents long-lasting resources that are dedicated to users to runs custom workloads. A PersistentResource can have multiple node pools and each node pool can have its own machine spec.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Immutable. Resource name of a PersistentResource.",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. The display name of the PersistentResource. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "resourcePools": {
            "description": "Required. The spec of the pools of different resources.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1ResourcePool"
            }
          },
          "state": {
            "description": "Output only. The detailed state of a Study.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "The PROVISIONING state indicates the persistent resources is being created.",
              "The RUNNING state indicates the persistent resource is healthy and fully usable.",
              "The STOPPING state indicates the persistent resource is being deleted.",
              "The ERROR state indicates the persistent resource may be unusable. Details can be found in the `error` field.",
              "The REBOOTING state indicates the persistent resource is being rebooted (PR is not available right now but is expected to be ready again later).",
              "The UPDATING state indicates the persistent resource is being updated."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "PROVISIONING",
              "RUNNING",
              "STOPPING",
              "ERROR",
              "REBOOTING",
              "UPDATING"
            ]
          },
          "error": {
            "description": "Output only. Only populated when persistent resource's state is `STOPPING` or `ERROR`.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "createTime": {
            "description": "Output only. Time when the PersistentResource was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "startTime": {
            "description": "Output only. Time when the PersistentResource for the first time entered the `RUNNING` state.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the PersistentResource was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata to organize PersistentResource. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "network": {
            "description": "Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to peered with Vertex AI to host the persistent resources. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the resources aren't peered with any network.",
            "type": "string"
          },
          "pscInterfaceConfig": {
            "description": "Optional. Configuration for PSC-I for PersistentResource.",
            "$ref": "GoogleCloudAiplatformV1PscInterfaceConfig"
          },
          "encryptionSpec": {
            "description": "Optional. Customer-managed encryption key spec for a PersistentResource. If set, this PersistentResource and all sub-resources of this PersistentResource will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "resourceRuntimeSpec": {
            "description": "Optional. Persistent Resource runtime spec. For example, used for Ray cluster configuration.",
            "$ref": "GoogleCloudAiplatformV1ResourceRuntimeSpec"
          },
          "resourceRuntime": {
            "description": "Output only. Runtime information of the Persistent Resource.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1ResourceRuntime"
          },
          "reservedIpRanges": {
            "description": "Optional. A list of names for the reserved IP ranges under the VPC network that can be used for this persistent resource. If set, we will deploy the persistent resource within the provided IP ranges. Otherwise, the persistent resource is deployed to any IP ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.reboot",
      "resource": "projects.locations.persistentResources",
      "action": "reboot",
      "http_method": "POST",
      "path_template": "v1/{+name}:reboot",
      "description": "Reboots a PersistentResource.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the PersistentResource resource. Format: `projects/{project_id_or_number}/locations/{location_id}/persistentResources/{persistent_resource_id}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1RebootPersistentResourceRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1RebootPersistentResourceRequest",
        "description": "Request message for PersistentResourceService.RebootPersistentResource.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.operations.list",
      "resource": "projects.locations.persistentResources.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.operations.get",
      "resource": "projects.locations.persistentResources.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.operations.delete",
      "resource": "projects.locations.persistentResources.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.operations.cancel",
      "resource": "projects.locations.persistentResources.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.persistentResources.operations.wait",
      "resource": "projects.locations.persistentResources.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/persistentResources/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.trainingPipelines.create",
      "resource": "projects.locations.trainingPipelines",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/trainingPipelines",
      "description": "Creates a TrainingPipeline. A created TrainingPipeline right away will be attempted to be run.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the TrainingPipeline in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1TrainingPipeline",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1TrainingPipeline",
        "description": "The TrainingPipeline orchestrates tasks associated with training a Model. It always executes the training task, and optionally may also export data from Vertex AI's Dataset which becomes the training input, upload the Model to Vertex AI, and evaluate the Model.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Resource name of the TrainingPipeline.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of this TrainingPipeline.",
            "type": "string"
          },
          "inputDataConfig": {
            "description": "Specifies Vertex AI owned input data that may be used for training the Model. The TrainingPipeline's training_task_definition should make clear whether this config is used and if there are any special requirements on how it should be filled. If nothing about this config is mentioned in the training_task_definition, then it should be assumed that the TrainingPipeline does not depend on this configuration.",
            "$ref": "GoogleCloudAiplatformV1InputDataConfig"
          },
          "trainingTaskDefinition": {
            "description": "Required. A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
            "type": "string"
          },
          "trainingTaskInputs": {
            "description": "Required. The training task's parameter(s), as specified in the training_task_definition's `inputs`.",
            "type": "any"
          },
          "trainingTaskMetadata": {
            "description": "Output only. The metadata information as specified in the training_task_definition's `metadata`. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline's training_task_definition contains `metadata` object.",
            "readOnly": true,
            "type": "any"
          },
          "modelToUpload": {
            "description": "Describes the Model that may be uploaded (via ModelService.UploadModel) by this TrainingPipeline. The TrainingPipeline's training_task_definition should make clear whether this Model description should be populated, and if there are any special requirements regarding how it should be filled. If nothing is mentioned in the training_task_definition, then it should be assumed that this field should not be filled and the training task either uploads the Model without a need of this information, or that training task does not support uploading a Model as part of the pipeline. When the Pipeline's state becomes `PIPELINE_STATE_SUCCEEDED` and the trained Model had been uploaded into Vertex AI, then the model_to_upload's resource name is populated. The Model is always uploaded into the Project and Location in which this pipeline is.",
            "$ref": "GoogleCloudAiplatformV1Model"
          },
          "modelId": {
            "description": "Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.",
            "type": "string"
          },
          "parentModel": {
            "description": "Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model, instead, it will become a new version of this `parent_model`.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The detailed state of the pipeline.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The pipeline state is unspecified.",
              "The pipeline has been created or resumed, and processing has not yet begun.",
              "The service is preparing to run the pipeline.",
              "The pipeline is in progress.",
              "The pipeline completed successfully.",
              "The pipeline failed.",
              "The pipeline is being cancelled. From this state, the pipeline may only go to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED or PIPELINE_STATE_CANCELLED.",
              "The pipeline has been cancelled.",
              "The pipeline has been stopped, and can be resumed."
            ],
            "enum": [
              "PIPELINE_STATE_UNSPECIFIED",
              "PIPELINE_STATE_QUEUED",
              "PIPELINE_STATE_PENDING",
              "PIPELINE_STATE_RUNNING",
              "PIPELINE_STATE_SUCCEEDED",
              "PIPELINE_STATE_FAILED",
              "PIPELINE_STATE_CANCELLING",
              "PIPELINE_STATE_CANCELLED",
              "PIPELINE_STATE_PAUSED"
            ]
          },
          "error": {
            "description": "Output only. Only populated when the pipeline's state is `PIPELINE_STATE_FAILED` or `PIPELINE_STATE_CANCELLED`.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "createTime": {
            "description": "Output only. Time when the TrainingPipeline was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "startTime": {
            "description": "Output only. Time when the TrainingPipeline for the first time entered the `PIPELINE_STATE_RUNNING` state.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Output only. Time when the TrainingPipeline entered any of the following states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the TrainingPipeline was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a TrainingPipeline. If set, this TrainingPipeline will be secured by this key. Note: Model trained by this TrainingPipeline is also secured by this key if model_to_upload is not set separately.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1TrainingPipeline"
    },
    {
      "operation_id": "aiplatform.projects.locations.trainingPipelines.get",
      "resource": "projects.locations.trainingPipelines",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a TrainingPipeline.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TrainingPipeline resource. Format: `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1TrainingPipeline"
    },
    {
      "operation_id": "aiplatform.projects.locations.trainingPipelines.list",
      "resource": "projects.locations.trainingPipelines",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/trainingPipelines",
      "description": "Lists TrainingPipelines in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the TrainingPipelines from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `training_task_definition` `=`, `!=` comparisons, and `:` wildcard. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"PIPELINE_STATE_SUCCEEDED\" AND display_name:\"my_pipeline_*\"` * `state!=\"PIPELINE_STATE_FAILED\" OR display_name=\"my_pipeline\"` * `NOT display_name=\"my_pipeline\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `training_task_definition:\"*automl_text_classification*\"`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListTrainingPipelinesResponse.next_page_token of the previous PipelineService.ListTrainingPipelines call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListTrainingPipelinesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.trainingPipelines.delete",
      "resource": "projects.locations.trainingPipelines",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a TrainingPipeline.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TrainingPipeline resource to be deleted. Format: `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.trainingPipelines.cancel",
      "resource": "projects.locations.trainingPipelines",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Cancels a TrainingPipeline. Starts asynchronous cancellation on the TrainingPipeline. The server makes a best effort to cancel the pipeline, but success is not guaranteed. Clients can use PipelineService.GetTrainingPipeline or other methods to check whether the cancellation succeeded or whether the pipeline completed despite cancellation. On successful cancellation, the TrainingPipeline is not deleted; instead it becomes a pipeline with a TrainingPipeline.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and TrainingPipeline.state is set to `CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TrainingPipeline to cancel. Format: `projects/{project}/locations/{location}/trainingPipelines/{training_pipeline}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CancelTrainingPipelineRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CancelTrainingPipelineRequest",
        "description": "Request message for PipelineService.CancelTrainingPipeline.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.trainingPipelines.operations.list",
      "resource": "projects.locations.trainingPipelines.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.trainingPipelines.operations.get",
      "resource": "projects.locations.trainingPipelines.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.trainingPipelines.operations.delete",
      "resource": "projects.locations.trainingPipelines.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.trainingPipelines.operations.cancel",
      "resource": "projects.locations.trainingPipelines.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.trainingPipelines.operations.wait",
      "resource": "projects.locations.trainingPipelines.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/trainingPipelines/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.create",
      "resource": "projects.locations.pipelineJobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/pipelineJobs",
      "description": "Creates a PipelineJob. A PipelineJob will run immediately when created.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the PipelineJob in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pipelineJobId": {
          "description": "The ID to use for the PipelineJob, which will become the final component of the PipelineJob name. If not provided, an ID will be automatically generated. This value should be less than 128 characters, and valid characters are `/a-z-/`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PipelineJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PipelineJob",
        "description": "An instance of a machine learning PipelineJob.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The resource name of the PipelineJob.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the Pipeline. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Pipeline creation time.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "startTime": {
            "description": "Output only. Pipeline start time.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Output only. Pipeline end time.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this PipelineJob was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "pipelineSpec": {
            "description": "The spec of the pipeline.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "state": {
            "description": "Output only. The detailed state of the job.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The pipeline state is unspecified.",
              "The pipeline has been created or resumed, and processing has not yet begun.",
              "The service is preparing to run the pipeline.",
              "The pipeline is in progress.",
              "The pipeline completed successfully.",
              "The pipeline failed.",
              "The pipeline is being cancelled. From this state, the pipeline may only go to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED or PIPELINE_STATE_CANCELLED.",
              "The pipeline has been cancelled.",
              "The pipeline has been stopped, and can be resumed."
            ],
            "enum": [
              "PIPELINE_STATE_UNSPECIFIED",
              "PIPELINE_STATE_QUEUED",
              "PIPELINE_STATE_PENDING",
              "PIPELINE_STATE_RUNNING",
              "PIPELINE_STATE_SUCCEEDED",
              "PIPELINE_STATE_FAILED",
              "PIPELINE_STATE_CANCELLING",
              "PIPELINE_STATE_CANCELLED",
              "PIPELINE_STATE_PAUSED"
            ]
          },
          "jobDetail": {
            "description": "Output only. The details of pipeline run. Not available in the list view.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1PipelineJobDetail"
          },
          "error": {
            "description": "Output only. The error that occurred during pipeline execution. Only populated when the pipeline's state is FAILED or CANCELLED.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize PipelineJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. Note there is some reserved label key for Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set value will get overrided.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "runtimeConfig": {
            "description": "Runtime config of the pipeline.",
            "$ref": "GoogleCloudAiplatformV1PipelineJobRuntimeConfig"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a pipelineJob. If set, this PipelineJob and all of its sub-resources will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "serviceAccount": {
            "description": "The service account that the pipeline workload runs as. If not specified, the Compute Engine default service account in the project will be used. See https://cloud.google.com/compute/docs/access/service-accounts#default_service_account Users starting the pipeline must have the `iam.serviceAccounts.actAs` permission on this service account.",
            "type": "string"
          },
          "network": {
            "description": "The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Pipeline Job's workload should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. Pipeline job will apply the network configuration to the Google Cloud resources being launched, if applied, such as Vertex AI Training or Dataflow job. If left unspecified, the workload is not peered with any network.",
            "type": "string"
          },
          "reservedIpRanges": {
            "description": "A list of names for the reserved ip ranges under the VPC network that can be used for this Pipeline Job's workload. If set, we will deploy the Pipeline Job's workload within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pscInterfaceConfig": {
            "description": "Optional. Configuration for PSC-I for PipelineJob.",
            "$ref": "GoogleCloudAiplatformV1PscInterfaceConfig"
          },
          "templateUri": {
            "description": "A template uri from where the PipelineJob.pipeline_spec, if empty, will be downloaded. Currently, only uri from Vertex Template Registry & Gallery is supported. Reference to https://cloud.google.com/vertex-ai/docs/pipelines/create-pipeline-template.",
            "type": "string"
          },
          "templateMetadata": {
            "description": "Output only. Pipeline template metadata. Will fill up fields if PipelineJob.template_uri is from supported template registry.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1PipelineTemplateMetadata"
          },
          "scheduleName": {
            "description": "Output only. The schedule resource name. Only returned if the Pipeline is created by Schedule API.",
            "readOnly": true,
            "type": "string"
          },
          "preflightValidations": {
            "description": "Optional. Whether to do component level validations before job creation.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1PipelineJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.get",
      "resource": "projects.locations.pipelineJobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a PipelineJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the PipelineJob resource. Format: `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1PipelineJob"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.list",
      "resource": "projects.locations.pipelineJobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/pipelineJobs",
      "description": "Lists PipelineJobs in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the PipelineJobs from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the PipelineJobs that match the filter expression. The following fields are supported: * `pipeline_name`: Supports `=` and `!=` comparisons. * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `pipeline_job_user_id`: Supports `=`, `!=` comparisons, and `:` wildcard. for example, can check if pipeline's display_name contains *step* by doing display_name:\\\"*step*\\\" * `state`: Supports `=` and `!=` comparisons. * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. * `template_uri`: Supports `=`, `!=` comparisons, and `:` wildcard. * `template_metadata.version`: Supports `=`, `!=` comparisons, and `:` wildcard. Filter expressions can be combined together using logical operators (`AND` & `OR`). For example: `pipeline_name=\"test\" AND create_time>\"2020-05-18T13:30:00Z\"`. The syntax to define filter expression is based on https://google.aip.dev/160. Examples: * `create_time>\"2021-05-18T00:00:00Z\" OR update_time>\"2020-05-18T00:00:00Z\"` PipelineJobs created or updated after 2020-05-18 00:00:00 UTC. * `labels.env = \"prod\"` PipelineJobs with label \"env\" set to \"prod\".",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListPipelineJobsResponse.next_page_token of the previous PipelineService.ListPipelineJobs call.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by. The default sort order is in ascending order. Use \"desc\" after a field name for descending. You can have multiple order_by fields provided e.g. \"create_time desc, end_time\", \"end_time, start_time, update_time\" For example, using \"create_time desc, end_time\" will order results by create time in descending order, and if there are multiple jobs having the same create time, order them by the end time in ascending order. if order_by is not specified, it will order by default order is create time in descending order. Supported fields: * `create_time` * `update_time` * `end_time` * `start_time`",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListPipelineJobsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.delete",
      "resource": "projects.locations.pipelineJobs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a PipelineJob.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the PipelineJob resource to be deleted. Format: `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.batchDelete",
      "resource": "projects.locations.pipelineJobs",
      "action": "batchDelete",
      "http_method": "POST",
      "path_template": "v1/{+parent}/pipelineJobs:batchDelete",
      "description": "Batch deletes PipelineJobs The Operation is atomic. If it fails, none of the PipelineJobs are deleted. If it succeeds, all of the PipelineJobs are deleted.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the PipelineJobs' parent resource. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchDeletePipelineJobsRequest",
        "description": "Request message for PipelineService.BatchDeletePipelineJobs.",
        "type": "object",
        "properties": {
          "names": {
            "description": "Required. The names of the PipelineJobs to delete. A maximum of 32 PipelineJobs can be deleted in a batch. Format: `projects/{project}/locations/{location}/pipelineJobs/{pipelineJob}`",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.cancel",
      "resource": "projects.locations.pipelineJobs",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Cancels a PipelineJob. Starts asynchronous cancellation on the PipelineJob. The server makes a best effort to cancel the pipeline, but success is not guaranteed. Clients can use PipelineService.GetPipelineJob or other methods to check whether the cancellation succeeded or whether the pipeline completed despite cancellation. On successful cancellation, the PipelineJob is not deleted; instead it becomes a pipeline with a PipelineJob.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`, and PipelineJob.state is set to `CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the PipelineJob to cancel. Format: `projects/{project}/locations/{location}/pipelineJobs/{pipeline_job}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CancelPipelineJobRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CancelPipelineJobRequest",
        "description": "Request message for PipelineService.CancelPipelineJob.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.batchCancel",
      "resource": "projects.locations.pipelineJobs",
      "action": "batchCancel",
      "http_method": "POST",
      "path_template": "v1/{+parent}/pipelineJobs:batchCancel",
      "description": "Batch cancel PipelineJobs. Firstly the server will check if all the jobs are in non-terminal states, and skip the jobs that are already terminated. If the operation failed, none of the pipeline jobs are cancelled. The server will poll the states of all the pipeline jobs periodically to check the cancellation status. This operation will return an LRO.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the PipelineJobs' parent resource. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchCancelPipelineJobsRequest",
        "description": "Request message for PipelineService.BatchCancelPipelineJobs.",
        "type": "object",
        "properties": {
          "names": {
            "description": "Required. The names of the PipelineJobs to cancel. A maximum of 32 PipelineJobs can be cancelled in a batch. Format: `projects/{project}/locations/{location}/pipelineJobs/{pipelineJob}`",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.operations.list",
      "resource": "projects.locations.pipelineJobs.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.operations.get",
      "resource": "projects.locations.pipelineJobs.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.operations.delete",
      "resource": "projects.locations.pipelineJobs.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.operations.cancel",
      "resource": "projects.locations.pipelineJobs.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.pipelineJobs.operations.wait",
      "resource": "projects.locations.pipelineJobs.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/pipelineJobs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.query",
      "resource": "projects.locations.reasoningEngines",
      "action": "query",
      "http_method": "POST",
      "path_template": "v1/{+name}:query",
      "description": "Queries using a reasoning engine.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ReasoningEngine resource to use. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1QueryReasoningEngineRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1QueryReasoningEngineRequest",
        "description": "Request message for ReasoningEngineExecutionService.Query.",
        "type": "object",
        "properties": {
          "input": {
            "description": "Optional. Input content provided by users in JSON object format. Examples include text query, function calling parameters, media bytes, etc.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "classMethod": {
            "description": "Optional. Class method to be used for the query. It is optional and defaults to \"query\" if unspecified.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1QueryReasoningEngineResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.streamQuery",
      "resource": "projects.locations.reasoningEngines",
      "action": "streamQuery",
      "http_method": "POST",
      "path_template": "v1/{+name}:streamQuery",
      "description": "Streams queries using a reasoning engine.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ReasoningEngine resource to use. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1StreamQueryReasoningEngineRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1StreamQueryReasoningEngineRequest",
        "description": "Request message for ReasoningEngineExecutionService.StreamQuery.",
        "type": "object",
        "properties": {
          "input": {
            "description": "Optional. Input content provided by users in JSON object format. Examples include text query, function calling parameters, media bytes, etc.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "classMethod": {
            "description": "Optional. Class method to be used for the stream query. It is optional and defaults to \"stream_query\" if unspecified.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleApiHttpBody"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.create",
      "resource": "projects.locations.reasoningEngines",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/reasoningEngines",
      "description": "Creates a reasoning engine.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the ReasoningEngine in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ReasoningEngine",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ReasoningEngine",
        "description": "ReasoningEngine provides a customizable runtime for models to determine which actions to take and in which order.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The resource name of the ReasoningEngine. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the ReasoningEngine.",
            "type": "string"
          },
          "description": {
            "description": "Optional. The description of the ReasoningEngine.",
            "type": "string"
          },
          "spec": {
            "description": "Optional. Configurations of the ReasoningEngine",
            "$ref": "GoogleCloudAiplatformV1ReasoningEngineSpec"
          },
          "createTime": {
            "description": "Output only. Timestamp when this ReasoningEngine was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this ReasoningEngine was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.get",
      "resource": "projects.locations.reasoningEngines",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a reasoning engine.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ReasoningEngine resource. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ReasoningEngine"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.list",
      "resource": "projects.locations.reasoningEngines",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/reasoningEngines",
      "description": "Lists reasoning engines in a location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the ReasoningEngines from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Optional. The standard list filter. More detail in [AIP-160](https://google.aip.dev/160).",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListReasoningEnginesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.patch",
      "resource": "projects.locations.reasoningEngines",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a reasoning engine.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. The resource name of the ReasoningEngine. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. Mask specifying which fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ReasoningEngine",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ReasoningEngine",
        "description": "ReasoningEngine provides a customizable runtime for models to determine which actions to take and in which order.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The resource name of the ReasoningEngine. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the ReasoningEngine.",
            "type": "string"
          },
          "description": {
            "description": "Optional. The description of the ReasoningEngine.",
            "type": "string"
          },
          "spec": {
            "description": "Optional. Configurations of the ReasoningEngine",
            "$ref": "GoogleCloudAiplatformV1ReasoningEngineSpec"
          },
          "createTime": {
            "description": "Output only. Timestamp when this ReasoningEngine was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this ReasoningEngine was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.delete",
      "resource": "projects.locations.reasoningEngines",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a reasoning engine.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ReasoningEngine resource to be deleted. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "Optional. If set to true, child resources of this reasoning engine will also be deleted. Otherwise, the request will fail with FAILED_PRECONDITION error when the reasoning engine has undeleted child resources.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.operations.list",
      "resource": "projects.locations.reasoningEngines.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.operations.get",
      "resource": "projects.locations.reasoningEngines.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/reasoningEngines/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.operations.delete",
      "resource": "projects.locations.reasoningEngines.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/reasoningEngines/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.operations.cancel",
      "resource": "projects.locations.reasoningEngines.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/reasoningEngines/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.reasoningEngines.operations.wait",
      "resource": "projects.locations.reasoningEngines.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/reasoningEngines/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.create",
      "resource": "projects.locations.schedules",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/schedules",
      "description": "Creates a Schedule.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the Schedule in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Schedule",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Schedule",
        "description": "An instance of a Schedule periodically schedules runs to make API calls based on user specified time specification and API request type.",
        "type": "object",
        "properties": {
          "cron": {
            "description": "Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or \"TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, \"CRON_TZ=America/New_York 1 * * * *\", or \"TZ=America/New_York 1 * * * *\".",
            "type": "string"
          },
          "createPipelineJobRequest": {
            "description": "Request for PipelineService.CreatePipelineJob. CreatePipelineJobRequest.parent field is required (format: projects/{project}/locations/{location}).",
            "$ref": "GoogleCloudAiplatformV1CreatePipelineJobRequest"
          },
          "createNotebookExecutionJobRequest": {
            "description": "Request for NotebookService.CreateNotebookExecutionJob.",
            "$ref": "GoogleCloudAiplatformV1CreateNotebookExecutionJobRequest"
          },
          "name": {
            "description": "Immutable. The resource name of the Schedule.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. User provided name of the Schedule. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "startTime": {
            "description": "Optional. Timestamp after which the first run can be scheduled. Default to Schedule create time if not specified.",
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Optional. Timestamp after which no new runs can be scheduled. If specified, The schedule will be completed when either end_time is reached or when scheduled_run_count >= max_run_count. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified.",
            "type": "string",
            "format": "google-datetime"
          },
          "maxRunCount": {
            "description": "Optional. Maximum run count of the schedule. If specified, The schedule will be completed when either started_run_count >= max_run_count or when end_time is reached. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified.",
            "type": "string",
            "format": "int64"
          },
          "startedRunCount": {
            "description": "Output only. The number of runs started by this schedule.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "state": {
            "description": "Output only. The state of this Schedule.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Unspecified.",
              "The Schedule is active. Runs are being scheduled on the user-specified timespec.",
              "The schedule is paused. No new runs will be created until the schedule is resumed. Already started runs will be allowed to complete.",
              "The Schedule is completed. No new runs will be scheduled. Already started runs will be allowed to complete. Schedules in completed state cannot be paused or resumed."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "PAUSED",
              "COMPLETED"
            ]
          },
          "createTime": {
            "description": "Output only. Timestamp when this Schedule was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Schedule was updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "nextRunTime": {
            "description": "Output only. Timestamp when this Schedule should schedule the next run. Having a next_run_time in the past means the runs are being started behind schedule.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "lastPauseTime": {
            "description": "Output only. Timestamp when this Schedule was last paused. Unset if never paused.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "lastResumeTime": {
            "description": "Output only. Timestamp when this Schedule was last resumed. Unset if never resumed from pause.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "maxConcurrentRunCount": {
            "description": "Required. Maximum number of runs that can be started concurrently for this Schedule. This is the limit for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable).",
            "type": "string",
            "format": "int64"
          },
          "allowQueueing": {
            "description": "Optional. Whether new scheduled runs can be queued when max_concurrent_runs limit is reached. If set to true, new runs will be queued instead of skipped. Default to false.",
            "type": "boolean"
          },
          "catchUp": {
            "description": "Output only. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. Default to false.",
            "readOnly": true,
            "type": "boolean"
          },
          "lastScheduledRunResponse": {
            "description": "Output only. Response of the last scheduled run. This is the response for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable). Unset if no run has been scheduled yet.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1ScheduleRunResponse"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Schedule"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.delete",
      "resource": "projects.locations.schedules",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Schedule.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Schedule resource to be deleted. Format: `projects/{project}/locations/{location}/schedules/{schedule}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.get",
      "resource": "projects.locations.schedules",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a Schedule.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Schedule resource. Format: `projects/{project}/locations/{location}/schedules/{schedule}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Schedule"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.list",
      "resource": "projects.locations.schedules",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/schedules",
      "description": "Lists Schedules in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the Schedules from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the Schedules that match the filter expression. The following fields are supported: * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `state`: Supports `=` and `!=` comparisons. * `request`: Supports existence of the check. (e.g. `create_pipeline_job_request:*` --> Schedule has create_pipeline_job_request). * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `start_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*` existence check. Values must be in RFC 3339 format. * `next_run_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. Filter expressions can be combined together using logical operators (`NOT`, `AND` & `OR`). The syntax to define filter expression is based on https://google.aip.dev/160. Examples: * `state=\"ACTIVE\" AND display_name:\"my_schedule_*\"` * `NOT display_name=\"my_schedule\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `end_time>\"2021-05-18T00:00:00Z\" OR NOT end_time:*` * `create_pipeline_job_request:*`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size. Default to 100 if not specified.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListSchedulesResponse.next_page_token of the previous ScheduleService.ListSchedules call.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "A comma-separated list of fields to order by. The default sort order is in ascending order. Use \"desc\" after a field name for descending. You can have multiple order_by fields provided. For example, using \"create_time desc, end_time\" will order results by create time in descending order, and if there are multiple schedules having the same create time, order them by the end time in ascending order. If order_by is not specified, it will order by default with create_time in descending order. Supported fields: * `create_time` * `start_time` * `end_time` * `next_run_time`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListSchedulesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.pause",
      "resource": "projects.locations.schedules",
      "action": "pause",
      "http_method": "POST",
      "path_template": "v1/{+name}:pause",
      "description": "Pauses a Schedule. Will mark Schedule.state to 'PAUSED'. If the schedule is paused, no new runs will be created. Already created runs will NOT be paused or canceled.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Schedule resource to be paused. Format: `projects/{project}/locations/{location}/schedules/{schedule}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PauseScheduleRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PauseScheduleRequest",
        "description": "Request message for ScheduleService.PauseSchedule.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.resume",
      "resource": "projects.locations.schedules",
      "action": "resume",
      "http_method": "POST",
      "path_template": "v1/{+name}:resume",
      "description": "Resumes a paused Schedule to start scheduling new runs. Will mark Schedule.state to 'ACTIVE'. Only paused Schedule can be resumed. When the Schedule is resumed, new runs will be scheduled starting from the next execution time after the current time based on the time_specification in the Schedule. If Schedule.catch_up is set up true, all missed runs will be scheduled for backfill first.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Schedule resource to be resumed. Format: `projects/{project}/locations/{location}/schedules/{schedule}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ResumeScheduleRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ResumeScheduleRequest",
        "description": "Request message for ScheduleService.ResumeSchedule.",
        "type": "object",
        "properties": {
          "catchUp": {
            "description": "Optional. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. This will also update Schedule.catch_up field. Default to false.",
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.patch",
      "resource": "projects.locations.schedules",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates an active or paused Schedule. When the Schedule is updated, new runs will be scheduled starting from the updated next execution time after the update time based on the time_specification in the updated Schedule. All unstarted runs before the update time will be skipped while already created runs will NOT be paused or canceled.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Immutable. The resource name of the Schedule.",
          "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource. See google.protobuf.FieldMask.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Schedule",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Schedule",
        "description": "An instance of a Schedule periodically schedules runs to make API calls based on user specified time specification and API request type.",
        "type": "object",
        "properties": {
          "cron": {
            "description": "Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or \"TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, \"CRON_TZ=America/New_York 1 * * * *\", or \"TZ=America/New_York 1 * * * *\".",
            "type": "string"
          },
          "createPipelineJobRequest": {
            "description": "Request for PipelineService.CreatePipelineJob. CreatePipelineJobRequest.parent field is required (format: projects/{project}/locations/{location}).",
            "$ref": "GoogleCloudAiplatformV1CreatePipelineJobRequest"
          },
          "createNotebookExecutionJobRequest": {
            "description": "Request for NotebookService.CreateNotebookExecutionJob.",
            "$ref": "GoogleCloudAiplatformV1CreateNotebookExecutionJobRequest"
          },
          "name": {
            "description": "Immutable. The resource name of the Schedule.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. User provided name of the Schedule. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "startTime": {
            "description": "Optional. Timestamp after which the first run can be scheduled. Default to Schedule create time if not specified.",
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Optional. Timestamp after which no new runs can be scheduled. If specified, The schedule will be completed when either end_time is reached or when scheduled_run_count >= max_run_count. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified.",
            "type": "string",
            "format": "google-datetime"
          },
          "maxRunCount": {
            "description": "Optional. Maximum run count of the schedule. If specified, The schedule will be completed when either started_run_count >= max_run_count or when end_time is reached. If not specified, new runs will keep getting scheduled until this Schedule is paused or deleted. Already scheduled runs will be allowed to complete. Unset if not specified.",
            "type": "string",
            "format": "int64"
          },
          "startedRunCount": {
            "description": "Output only. The number of runs started by this schedule.",
            "readOnly": true,
            "type": "string",
            "format": "int64"
          },
          "state": {
            "description": "Output only. The state of this Schedule.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "Unspecified.",
              "The Schedule is active. Runs are being scheduled on the user-specified timespec.",
              "The schedule is paused. No new runs will be created until the schedule is resumed. Already started runs will be allowed to complete.",
              "The Schedule is completed. No new runs will be scheduled. Already started runs will be allowed to complete. Schedules in completed state cannot be paused or resumed."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "PAUSED",
              "COMPLETED"
            ]
          },
          "createTime": {
            "description": "Output only. Timestamp when this Schedule was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Schedule was updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "nextRunTime": {
            "description": "Output only. Timestamp when this Schedule should schedule the next run. Having a next_run_time in the past means the runs are being started behind schedule.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "lastPauseTime": {
            "description": "Output only. Timestamp when this Schedule was last paused. Unset if never paused.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "lastResumeTime": {
            "description": "Output only. Timestamp when this Schedule was last resumed. Unset if never resumed from pause.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "maxConcurrentRunCount": {
            "description": "Required. Maximum number of runs that can be started concurrently for this Schedule. This is the limit for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable).",
            "type": "string",
            "format": "int64"
          },
          "allowQueueing": {
            "description": "Optional. Whether new scheduled runs can be queued when max_concurrent_runs limit is reached. If set to true, new runs will be queued instead of skipped. Default to false.",
            "type": "boolean"
          },
          "catchUp": {
            "description": "Output only. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. Default to false.",
            "readOnly": true,
            "type": "boolean"
          },
          "lastScheduledRunResponse": {
            "description": "Output only. Response of the last scheduled run. This is the response for starting the scheduled requests and not the execution of the operations/jobs created by the requests (if applicable). Unset if no run has been scheduled yet.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1ScheduleRunResponse"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Schedule"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.operations.list",
      "resource": "projects.locations.schedules.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.operations.get",
      "resource": "projects.locations.schedules.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.operations.delete",
      "resource": "projects.locations.schedules.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.operations.cancel",
      "resource": "projects.locations.schedules.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.schedules.operations.wait",
      "resource": "projects.locations.schedules.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.specialistPools.create",
      "resource": "projects.locations.specialistPools",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/specialistPools",
      "description": "Creates a SpecialistPool.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The parent Project name for the new SpecialistPool. The form is `projects/{project}/locations/{location}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1SpecialistPool",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1SpecialistPool",
        "description": "SpecialistPool represents customers' own workforce to work on their data labeling jobs. It includes a group of specialist managers and workers. Managers are responsible for managing the workers in this pool as well as customers' data labeling jobs associated with this pool. Customers create specialist pool as well as start data labeling jobs on Cloud, managers and workers handle the jobs using CrowdCompute console.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the SpecialistPool.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level.",
            "type": "string"
          },
          "specialistManagersCount": {
            "description": "Output only. The number of managers in this SpecialistPool.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "specialistManagerEmails": {
            "description": "The email addresses of the managers in the SpecialistPool.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pendingDataLabelingJobs": {
            "description": "Output only. The resource name of the pending data labeling jobs.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "specialistWorkerEmails": {
            "description": "The email addresses of workers in the SpecialistPool.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.specialistPools.get",
      "resource": "projects.locations.specialistPools",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a SpecialistPool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the SpecialistPool resource. The form is `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`.",
          "pattern": "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1SpecialistPool"
    },
    {
      "operation_id": "aiplatform.projects.locations.specialistPools.list",
      "resource": "projects.locations.specialistPools",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/specialistPools",
      "description": "Lists SpecialistPools in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the SpecialistPool's parent resource. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained by ListSpecialistPoolsResponse.next_page_token of the previous SpecialistPoolService.ListSpecialistPools call. Return first page if empty.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read. FieldMask represents a set of",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListSpecialistPoolsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.specialistPools.delete",
      "resource": "projects.locations.specialistPools",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a SpecialistPool as well as all Specialists in the pool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the SpecialistPool to delete. Format: `projects/{project}/locations/{location}/specialistPools/{specialist_pool}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "If set to true, any specialist managers in this SpecialistPool will also be deleted. (Otherwise, the request will only work if the SpecialistPool has no specialist managers.)",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.specialistPools.patch",
      "resource": "projects.locations.specialistPools",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a SpecialistPool.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The resource name of the SpecialistPool.",
          "pattern": "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. The update mask applies to the resource.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1SpecialistPool",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1SpecialistPool",
        "description": "SpecialistPool represents customers' own workforce to work on their data labeling jobs. It includes a group of specialist managers and workers. Managers are responsible for managing the workers in this pool as well as customers' data labeling jobs associated with this pool. Customers create specialist pool as well as start data labeling jobs on Cloud, managers and workers handle the jobs using CrowdCompute console.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Required. The resource name of the SpecialistPool.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level.",
            "type": "string"
          },
          "specialistManagersCount": {
            "description": "Output only. The number of managers in this SpecialistPool.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "specialistManagerEmails": {
            "description": "The email addresses of the managers in the SpecialistPool.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pendingDataLabelingJobs": {
            "description": "Output only. The resource name of the pending data labeling jobs.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "specialistWorkerEmails": {
            "description": "The email addresses of workers in the SpecialistPool.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.specialistPools.operations.list",
      "resource": "projects.locations.specialistPools.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.specialistPools.operations.get",
      "resource": "projects.locations.specialistPools.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.specialistPools.operations.delete",
      "resource": "projects.locations.specialistPools.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.specialistPools.operations.cancel",
      "resource": "projects.locations.specialistPools.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.specialistPools.operations.wait",
      "resource": "projects.locations.specialistPools.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/specialistPools/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.create",
      "resource": "projects.locations.tensorboards",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/tensorboards",
      "description": "Creates a Tensorboard.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the Tensorboard in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Tensorboard",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Tensorboard",
        "description": "Tensorboard is a physical database that stores users' training metrics. A default Tensorboard is provided in each region of a Google Cloud project. If needed users can also create extra Tensorboards in their projects.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. User provided name of this Tensorboard.",
            "type": "string"
          },
          "description": {
            "description": "Description of this Tensorboard.",
            "type": "string"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "blobStoragePathPrefix": {
            "description": "Output only. Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.",
            "readOnly": true,
            "type": "string"
          },
          "runCount": {
            "description": "Output only. The number of Runs stored in this Tensorboard.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "createTime": {
            "description": "Output only. Timestamp when this Tensorboard was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Tensorboard was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "isDefault": {
            "description": "Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.",
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.get",
      "resource": "projects.locations.tensorboards",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a Tensorboard.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1Tensorboard"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.patch",
      "resource": "projects.locations.tensorboards",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a Tensorboard.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. Field mask is used to specify the fields to be overwritten in the Tensorboard resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it's in the mask. If the user does not provide a mask then all fields are overwritten if new values are specified.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Tensorboard",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Tensorboard",
        "description": "Tensorboard is a physical database that stores users' training metrics. A default Tensorboard is provided in each region of a Google Cloud project. If needed users can also create extra Tensorboards in their projects.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. User provided name of this Tensorboard.",
            "type": "string"
          },
          "description": {
            "description": "Description of this Tensorboard.",
            "type": "string"
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "blobStoragePathPrefix": {
            "description": "Output only. Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.",
            "readOnly": true,
            "type": "string"
          },
          "runCount": {
            "description": "Output only. The number of Runs stored in this Tensorboard.",
            "readOnly": true,
            "type": "integer",
            "format": "int32"
          },
          "createTime": {
            "description": "Output only. Timestamp when this Tensorboard was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Tensorboard was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "isDefault": {
            "description": "Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.",
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.list",
      "resource": "projects.locations.tensorboards",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/tensorboards",
      "description": "Lists Tensorboards in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list Tensorboards. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the Tensorboards that match the filter expression.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of Tensorboards to return. The service may return fewer than this value. If unspecified, at most 100 Tensorboards are returned. The maximum value is 100; values above 100 are coerced to 100.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous TensorboardService.ListTensorboards call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboards must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Field to use to sort the list.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1ListTensorboardsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.delete",
      "resource": "projects.locations.tensorboards",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Tensorboard.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Tensorboard to be deleted. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.readUsage",
      "resource": "projects.locations.tensorboards",
      "action": "readUsage",
      "http_method": "GET",
      "path_template": "v1/{+tensorboard}:readUsage",
      "description": "Returns a list of monthly active users for a given TensorBoard instance.",
      "required_params": [
        "tensorboard"
      ],
      "parameters": {
        "tensorboard": {
          "description": "Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ReadTensorboardUsageResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.readSize",
      "resource": "projects.locations.tensorboards",
      "action": "readSize",
      "http_method": "GET",
      "path_template": "v1/{+tensorboard}:readSize",
      "description": "Returns the storage size for a given TensorBoard instance.",
      "required_params": [
        "tensorboard"
      ],
      "parameters": {
        "tensorboard": {
          "description": "Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ReadTensorboardSizeResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.batchRead",
      "resource": "projects.locations.tensorboards",
      "action": "batchRead",
      "http_method": "GET",
      "path_template": "v1/{+tensorboard}:batchRead",
      "description": "Reads multiple TensorboardTimeSeries' data. The data point number limit is 1000 for scalars, 100 for tensors and blob references. If the number of data points stored is less than the limit, all data is returned. Otherwise, the number limit of data points is randomly selected from this time series and returned.",
      "required_params": [
        "tensorboard"
      ],
      "parameters": {
        "tensorboard": {
          "description": "Required. The resource name of the Tensorboard containing TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The TensorboardTimeSeries referenced by time_series must be sub resources of this Tensorboard.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeSeries": {
          "description": "Required. The resource names of the TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1BatchReadTensorboardTimeSeriesDataResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.operations.list",
      "resource": "projects.locations.tensorboards.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.operations.get",
      "resource": "projects.locations.tensorboards.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.operations.delete",
      "resource": "projects.locations.tensorboards.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.operations.cancel",
      "resource": "projects.locations.tensorboards.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.operations.wait",
      "resource": "projects.locations.tensorboards.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.create",
      "resource": "projects.locations.tensorboards.experiments",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/experiments",
      "description": "Creates a TensorboardExperiment.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Tensorboard to create the TensorboardExperiment in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "tensorboardExperimentId": {
          "description": "Required. The ID to use for the Tensorboard experiment, which becomes the final component of the Tensorboard experiment's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1TensorboardExperiment",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1TensorboardExperiment",
        "description": "A TensorboardExperiment is a group of TensorboardRuns, that are typically the results of a training job run, in a Tensorboard.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Name of the TensorboardExperiment. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "User provided name of this TensorboardExperiment.",
            "type": "string"
          },
          "description": {
            "description": "Description of this TensorboardExperiment.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this TensorboardExperiment was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this TensorboardExperiment was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your TensorboardExperiment. Label keys and values cannot be longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `aiplatform.googleapis.com/` and are immutable. The following system labels exist for each Dataset: * `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value is the metadata_schema's title.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "source": {
            "description": "Immutable. Source of the TensorboardExperiment. Example: a custom training job.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1TensorboardExperiment"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.get",
      "resource": "projects.locations.tensorboards.experiments",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a TensorboardExperiment.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TensorboardExperiment resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1TensorboardExperiment"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.patch",
      "resource": "projects.locations.tensorboards.experiments",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a TensorboardExperiment.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. Name of the TensorboardExperiment. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. Field mask is used to specify the fields to be overwritten in the TensorboardExperiment resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it's in the mask. If the user does not provide a mask then all fields are overwritten if new values are specified.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1TensorboardExperiment",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1TensorboardExperiment",
        "description": "A TensorboardExperiment is a group of TensorboardRuns, that are typically the results of a training job run, in a Tensorboard.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Name of the TensorboardExperiment. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "User provided name of this TensorboardExperiment.",
            "type": "string"
          },
          "description": {
            "description": "Description of this TensorboardExperiment.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this TensorboardExperiment was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this TensorboardExperiment was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your TensorboardExperiment. Label keys and values cannot be longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `aiplatform.googleapis.com/` and are immutable. The following system labels exist for each Dataset: * `aiplatform.googleapis.com/dataset_metadata_schema`: output only. Its value is the metadata_schema's title.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "source": {
            "description": "Immutable. Source of the TensorboardExperiment. Example: a custom training job.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1TensorboardExperiment"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.list",
      "resource": "projects.locations.tensorboards.experiments",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/experiments",
      "description": "Lists TensorboardExperiments in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Tensorboard to list TensorboardExperiments. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the TensorboardExperiments that match the filter expression.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of TensorboardExperiments to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardExperiments are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous TensorboardService.ListTensorboardExperiments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardExperiments must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Field to use to sort the list.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1ListTensorboardExperimentsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.delete",
      "resource": "projects.locations.tensorboards.experiments",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a TensorboardExperiment.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TensorboardExperiment to be deleted. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.batchCreate",
      "resource": "projects.locations.tensorboards.experiments",
      "action": "batchCreate",
      "http_method": "POST",
      "path_template": "v1/{+parent}:batchCreate",
      "description": "Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the TensorboardExperiment to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The TensorboardRuns referenced by the parent fields in the CreateTensorboardTimeSeriesRequest messages must be sub resources of this TensorboardExperiment.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesRequest",
        "description": "Request message for TensorboardService.BatchCreateTensorboardTimeSeries.",
        "type": "object",
        "properties": {
          "requests": {
            "description": "Required. The request message specifying the TensorboardTimeSeries to create. A maximum of 1000 TensorboardTimeSeries can be created in a batch.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1CreateTensorboardTimeSeriesRequest"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.write",
      "resource": "projects.locations.tensorboards.experiments",
      "action": "write",
      "http_method": "POST",
      "path_template": "v1/{+tensorboardExperiment}:write",
      "description": "Write time series data points of multiple TensorboardTimeSeries in multiple TensorboardRun's. If any data fail to be ingested, an error is returned.",
      "required_params": [
        "tensorboardExperiment"
      ],
      "parameters": {
        "tensorboardExperiment": {
          "description": "Required. The resource name of the TensorboardExperiment to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1WriteTensorboardExperimentDataRequest",
        "description": "Request message for TensorboardService.WriteTensorboardExperimentData.",
        "type": "object",
        "properties": {
          "writeRunDataRequests": {
            "description": "Required. Requests containing per-run TensorboardTimeSeries data to write.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1WriteTensorboardRunDataRequest"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1WriteTensorboardExperimentDataResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.operations.list",
      "resource": "projects.locations.tensorboards.experiments.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.operations.get",
      "resource": "projects.locations.tensorboards.experiments.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.operations.delete",
      "resource": "projects.locations.tensorboards.experiments.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.operations.cancel",
      "resource": "projects.locations.tensorboards.experiments.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.operations.wait",
      "resource": "projects.locations.tensorboards.experiments.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.create",
      "resource": "projects.locations.tensorboards.experiments.runs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/runs",
      "description": "Creates a TensorboardRun.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "tensorboardRunId": {
          "description": "Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1TensorboardRun",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1TensorboardRun",
        "description": "TensorboardRun maps to a specific execution of a training job with a given set of hyperparameter values, model definition, dataset, etc",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment.",
            "type": "string"
          },
          "description": {
            "description": "Description of this TensorboardRun.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this TensorboardRun was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this TensorboardRun was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1TensorboardRun"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.batchCreate",
      "resource": "projects.locations.tensorboards.experiments.runs",
      "action": "batchCreate",
      "http_method": "POST",
      "path_template": "v1/{+parent}/runs:batchCreate",
      "description": "Batch create TensorboardRuns.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the TensorboardExperiment to create the TensorboardRuns in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The parent field in the CreateTensorboardRunRequest messages must match this field.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchCreateTensorboardRunsRequest",
        "description": "Request message for TensorboardService.BatchCreateTensorboardRuns.",
        "type": "object",
        "properties": {
          "requests": {
            "description": "Required. The request message specifying the TensorboardRuns to create. A maximum of 1000 TensorboardRuns can be created in a batch.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1CreateTensorboardRunRequest"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1BatchCreateTensorboardRunsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.get",
      "resource": "projects.locations.tensorboards.experiments.runs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a TensorboardRun.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TensorboardRun resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1TensorboardRun"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.patch",
      "resource": "projects.locations.tensorboards.experiments.runs",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a TensorboardRun.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. Field mask is used to specify the fields to be overwritten in the TensorboardRun resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it's in the mask. If the user does not provide a mask then all fields are overwritten if new values are specified.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1TensorboardRun",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1TensorboardRun",
        "description": "TensorboardRun maps to a specific execution of a training job with a given set of hyperparameter values, model definition, dataset, etc",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment.",
            "type": "string"
          },
          "description": {
            "description": "Description of this TensorboardRun.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this TensorboardRun was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this TensorboardRun was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1TensorboardRun"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.list",
      "resource": "projects.locations.tensorboards.experiments.runs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/runs",
      "description": "Lists TensorboardRuns in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the TensorboardExperiment to list TensorboardRuns. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the TensorboardRuns that match the filter expression.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of TensorboardRuns to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardRuns are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous TensorboardService.ListTensorboardRuns call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardRuns must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Field to use to sort the list.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1ListTensorboardRunsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.delete",
      "resource": "projects.locations.tensorboards.experiments.runs",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a TensorboardRun.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TensorboardRun to be deleted. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.write",
      "resource": "projects.locations.tensorboards.experiments.runs",
      "action": "write",
      "http_method": "POST",
      "path_template": "v1/{+tensorboardRun}:write",
      "description": "Write time series data points into multiple TensorboardTimeSeries under a TensorboardRun. If any data fail to be ingested, an error is returned.",
      "required_params": [
        "tensorboardRun"
      ],
      "parameters": {
        "tensorboardRun": {
          "description": "Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1WriteTensorboardRunDataRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1WriteTensorboardRunDataRequest",
        "description": "Request message for TensorboardService.WriteTensorboardRunData.",
        "type": "object",
        "properties": {
          "tensorboardRun": {
            "description": "Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`",
            "type": "string"
          },
          "timeSeriesData": {
            "description": "Required. The TensorboardTimeSeries data to write. Values with in a time series are indexed by their step value. Repeated writes to the same step will overwrite the existing value for that step. The upper limit of data points per write request is 5000.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1TimeSeriesData"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1WriteTensorboardRunDataResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.operations.list",
      "resource": "projects.locations.tensorboards.experiments.runs.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.operations.get",
      "resource": "projects.locations.tensorboards.experiments.runs.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.operations.delete",
      "resource": "projects.locations.tensorboards.experiments.runs.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.operations.cancel",
      "resource": "projects.locations.tensorboards.experiments.runs.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.operations.wait",
      "resource": "projects.locations.tensorboards.experiments.runs.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.create",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/timeSeries",
      "description": "Creates a TensorboardTimeSeries.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "tensorboardTimeSeriesId": {
          "description": "Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries's resource name. This value should match \"a-z0-9{0, 127}\"",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1TensorboardTimeSeries",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1TensorboardTimeSeries",
        "description": "TensorboardTimeSeries maps to times series produced in training runs",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Name of the TensorboardTimeSeries.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).",
            "type": "string"
          },
          "description": {
            "description": "Description of this TensorboardTimeSeries.",
            "type": "string"
          },
          "valueType": {
            "description": "Required. Immutable. Type of TensorboardTimeSeries value.",
            "type": "string",
            "enumDescriptions": [
              "The value type is unspecified.",
              "Used for TensorboardTimeSeries that is a list of scalars. E.g. accuracy of a model over epochs/time.",
              "Used for TensorboardTimeSeries that is a list of tensors. E.g. histograms of weights of layer in a model over epoch/time.",
              "Used for TensorboardTimeSeries that is a list of blob sequences. E.g. set of sample images with labels over epochs/time."
            ],
            "enum": [
              "VALUE_TYPE_UNSPECIFIED",
              "SCALAR",
              "TENSOR",
              "BLOB_SEQUENCE"
            ]
          },
          "createTime": {
            "description": "Output only. Timestamp when this TensorboardTimeSeries was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this TensorboardTimeSeries was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "pluginName": {
            "description": "Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob",
            "type": "string"
          },
          "pluginData": {
            "description": "Data of the current plugin, with the size limited to 65KB.",
            "type": "string",
            "format": "byte"
          },
          "metadata": {
            "description": "Output only. Scalar, Tensor, or Blob metadata for this TensorboardTimeSeries.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1TensorboardTimeSeries"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.get",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a TensorboardTimeSeries.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TensorboardTimeSeries resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1TensorboardTimeSeries"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.patch",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a TensorboardTimeSeries.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. Name of the TensorboardTimeSeries.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Required. Field mask is used to specify the fields to be overwritten in the TensorboardTimeSeries resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it's in the mask. If the user does not provide a mask then all fields are overwritten if new values are specified.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1TensorboardTimeSeries",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1TensorboardTimeSeries",
        "description": "TensorboardTimeSeries maps to times series produced in training runs",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Name of the TensorboardTimeSeries.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).",
            "type": "string"
          },
          "description": {
            "description": "Description of this TensorboardTimeSeries.",
            "type": "string"
          },
          "valueType": {
            "description": "Required. Immutable. Type of TensorboardTimeSeries value.",
            "type": "string",
            "enumDescriptions": [
              "The value type is unspecified.",
              "Used for TensorboardTimeSeries that is a list of scalars. E.g. accuracy of a model over epochs/time.",
              "Used for TensorboardTimeSeries that is a list of tensors. E.g. histograms of weights of layer in a model over epoch/time.",
              "Used for TensorboardTimeSeries that is a list of blob sequences. E.g. set of sample images with labels over epochs/time."
            ],
            "enum": [
              "VALUE_TYPE_UNSPECIFIED",
              "SCALAR",
              "TENSOR",
              "BLOB_SEQUENCE"
            ]
          },
          "createTime": {
            "description": "Output only. Timestamp when this TensorboardTimeSeries was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this TensorboardTimeSeries was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "pluginName": {
            "description": "Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob",
            "type": "string"
          },
          "pluginData": {
            "description": "Data of the current plugin, with the size limited to 65KB.",
            "type": "string",
            "format": "byte"
          },
          "metadata": {
            "description": "Output only. Scalar, Tensor, or Blob metadata for this TensorboardTimeSeries.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1TensorboardTimeSeries"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.list",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/timeSeries",
      "description": "Lists TensorboardTimeSeries in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the TensorboardRun to list TensorboardTimeSeries. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "Lists the TensorboardTimeSeries that match the filter expression.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of TensorboardTimeSeries to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardTimeSeries are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "A page token, received from a previous TensorboardService.ListTensorboardTimeSeries call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardTimeSeries must match the call that provided the page token.",
          "location": "query",
          "type": "string"
        },
        "orderBy": {
          "description": "Field to use to sort the list.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1ListTensorboardTimeSeriesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.delete",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a TensorboardTimeSeries.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the TensorboardTimeSeries to be deleted. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.read",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries",
      "action": "read",
      "http_method": "GET",
      "path_template": "v1/{+tensorboardTimeSeries}:read",
      "description": "Reads a TensorboardTimeSeries' data. By default, if the number of data points stored is less than 1000, all data is returned. Otherwise, 1000 data points is randomly selected from this time series and returned. This value can be changed by changing max_data_points, which can't be greater than 10k.",
      "required_params": [
        "tensorboardTimeSeries"
      ],
      "parameters": {
        "tensorboardTimeSeries": {
          "description": "Required. The resource name of the TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "maxDataPoints": {
          "description": "The maximum number of TensorboardTimeSeries' data to return. This value should be a positive integer. This value can be set to -1 to return all data.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "filter": {
          "description": "Reads the TensorboardTimeSeries' data that match the filter expression.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1ReadTensorboardTimeSeriesDataResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.readBlobData",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries",
      "action": "readBlobData",
      "http_method": "GET",
      "path_template": "v1/{+timeSeries}:readBlobData",
      "description": "Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in consumer project's Cloud Storage bucket without users having to obtain Cloud Storage access permission.",
      "required_params": [
        "timeSeries"
      ],
      "parameters": {
        "timeSeries": {
          "description": "Required. The resource name of the TensorboardTimeSeries to list Blobs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "blobIds": {
          "description": "IDs of the blobs to read.",
          "location": "query",
          "repeated": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1ReadTensorboardBlobDataResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.exportTensorboardTimeSeries",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries",
      "action": "exportTensorboardTimeSeries",
      "http_method": "POST",
      "path_template": "v1/{+tensorboardTimeSeries}:exportTensorboardTimeSeries",
      "description": "Exports a TensorboardTimeSeries' data. Data is returned in paginated responses.",
      "required_params": [
        "tensorboardTimeSeries"
      ],
      "parameters": {
        "tensorboardTimeSeries": {
          "description": "Required. The resource name of the TensorboardTimeSeries to export data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataRequest",
        "description": "Request message for TensorboardService.ExportTensorboardTimeSeriesData.",
        "type": "object",
        "properties": {
          "filter": {
            "description": "Exports the TensorboardTimeSeries' data that match the filter expression.",
            "type": "string"
          },
          "pageSize": {
            "description": "The maximum number of data points to return per page. The default page_size is 1000. Values must be between 1 and 10000. Values above 10000 are coerced to 10000.",
            "type": "integer",
            "format": "int32"
          },
          "pageToken": {
            "description": "A page token, received from a previous ExportTensorboardTimeSeriesData call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ExportTensorboardTimeSeriesData must match the call that provided the page token.",
            "type": "string"
          },
          "orderBy": {
            "description": "Field to use to sort the TensorboardTimeSeries' data. By default, TensorboardTimeSeries' data is returned in a pseudo random order.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ExportTensorboardTimeSeriesDataResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.list",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.get",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.delete",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.cancel",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.tensorboards.experiments.runs.timeSeries.operations.wait",
      "resource": "projects.locations.tensorboards.experiments.runs.timeSeries.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/tensorboards/[^/]+/experiments/[^/]+/runs/[^/]+/timeSeries/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.create",
      "resource": "projects.locations.studies",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/studies",
      "description": "Creates a Study. A resource name will be generated after creation of the Study.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the CustomJob in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Study",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Study",
        "description": "A message representing a Study.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. The name of a study. The study's globally unique identifier. Format: `projects/{project}/locations/{location}/studies/{study}`",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. Describes the Study, default value is empty string.",
            "type": "string"
          },
          "studySpec": {
            "description": "Required. Configuration of the Study.",
            "$ref": "GoogleCloudAiplatformV1StudySpec"
          },
          "state": {
            "description": "Output only. The detailed state of a Study.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The study state is unspecified.",
              "The study is active.",
              "The study is stopped due to an internal error.",
              "The study is done when the service exhausts the parameter search space or max_trial_count is reached."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "INACTIVE",
              "COMPLETED"
            ]
          },
          "createTime": {
            "description": "Output only. Time at which the study was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "inactiveReason": {
            "description": "Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Study"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.get",
      "resource": "projects.locations.studies",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a Study by name.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Study resource. Format: `projects/{project}/locations/{location}/studies/{study}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Study"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.list",
      "resource": "projects.locations.studies",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/studies",
      "description": "Lists all the studies in a region for an associated project.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the Study from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageToken": {
          "description": "Optional. A page token to request the next page of results. If unspecified, there are no subsequent pages.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The maximum number of studies to return per \"page\" of results. If unspecified, service will pick an appropriate default.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListStudiesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.delete",
      "resource": "projects.locations.studies",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Study.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Study resource to be deleted. Format: `projects/{project}/locations/{location}/studies/{study}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.lookup",
      "resource": "projects.locations.studies",
      "action": "lookup",
      "http_method": "POST",
      "path_template": "v1/{+parent}/studies:lookup",
      "description": "Looks a study up using the user-defined display_name field instead of the fully qualified resource name.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to get the Study from. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1LookupStudyRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1LookupStudyRequest",
        "description": "Request message for VizierService.LookupStudy.",
        "type": "object",
        "properties": {
          "displayName": {
            "description": "Required. The user-defined display name of the Study",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Study"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.operations.list",
      "resource": "projects.locations.studies.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.operations.get",
      "resource": "projects.locations.studies.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.operations.delete",
      "resource": "projects.locations.studies.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.operations.cancel",
      "resource": "projects.locations.studies.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.operations.wait",
      "resource": "projects.locations.studies.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.suggest",
      "resource": "projects.locations.studies.trials",
      "action": "suggest",
      "http_method": "POST",
      "path_template": "v1/{+parent}/trials:suggest",
      "description": "Adds one or more Trials to a Study, with parameter values suggested by Vertex AI Vizier. Returns a long-running operation associated with the generation of Trial suggestions. When this long-running operation succeeds, it will contain a SuggestTrialsResponse.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The project and location that the Study belongs to. Format: `projects/{project}/locations/{location}/studies/{study}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1SuggestTrialsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1SuggestTrialsRequest",
        "description": "Request message for VizierService.SuggestTrials.",
        "type": "object",
        "properties": {
          "suggestionCount": {
            "description": "Required. The number of suggestions requested. It must be positive.",
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "description": "Required. The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed.",
            "type": "string"
          },
          "contexts": {
            "description": "Optional. This allows you to specify the \"context\" for a Trial; a context is a slice (a subspace) of the search space. Typical uses for contexts: 1) You are using Vizier to tune a server for best performance, but there's a strong weekly cycle. The context specifies the day-of-week. This allows Tuesday to generalize from Wednesday without assuming that everything is identical. 2) Imagine you're optimizing some medical treatment for people. As they walk in the door, you know certain facts about them (e.g. sex, weight, height, blood-pressure). Put that information in the context, and Vizier will adapt its suggestions to the patient. 3) You want to do a fair A/B test efficiently. Specify the \"A\" and \"B\" conditions as contexts, and Vizier will generalize between \"A\" and \"B\" conditions. If they are similar, this will allow Vizier to converge to the optimum faster than if \"A\" and \"B\" were separate Studies. NOTE: You can also enter contexts as REQUESTED Trials, e.g. via the CreateTrial() RPC; that's the asynchronous option where you don't need a close association between contexts and suggestions. NOTE: All the Parameters you set in a context MUST be defined in the Study. NOTE: You must supply 0 or $suggestion_count contexts. If you don't supply any contexts, Vizier will make suggestions from the full search space specified in the StudySpec; if you supply a full set of context, each suggestion will match the corresponding context. NOTE: A Context with no features set matches anything, and allows suggestions from the full search space. NOTE: Contexts MUST lie within the search space specified in the StudySpec. It's an error if they don't. NOTE: Contexts preferentially match ACTIVE then REQUESTED trials before new suggestions are generated. NOTE: Generation of suggestions involves a match between a Context and (optionally) a REQUESTED trial; if that match is not fully specified, a suggestion will be geneated in the merged subspace.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1TrialContext"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.create",
      "resource": "projects.locations.studies.trials",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/trials",
      "description": "Adds a user provided Trial to a Study.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Study to create the Trial in. Format: `projects/{project}/locations/{location}/studies/{study}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1Trial",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1Trial",
        "description": "A message representing a Trial. A Trial contains a unique set of Parameters that has been or will be evaluated, along with the objective metrics got by running the Trial.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Resource name of the Trial assigned by the service.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Output only. The identifier of the Trial assigned by the service.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The detailed state of the Trial.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The Trial state is unspecified.",
              "Indicates that a specific Trial has been requested, but it has not yet been suggested by the service.",
              "Indicates that the Trial has been suggested.",
              "Indicates that the Trial should stop according to the service.",
              "Indicates that the Trial is completed successfully.",
              "Indicates that the Trial should not be attempted again. The service will set a Trial to INFEASIBLE when it's done but missing the final_measurement."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "REQUESTED",
              "ACTIVE",
              "STOPPING",
              "SUCCEEDED",
              "INFEASIBLE"
            ]
          },
          "parameters": {
            "description": "Output only. The parameters of the Trial.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1TrialParameter"
            }
          },
          "finalMeasurement": {
            "description": "Output only. The final measurement containing the objective value.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1Measurement"
          },
          "measurements": {
            "description": "Output only. A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_duration). These are used for early stopping computations.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Measurement"
            }
          },
          "startTime": {
            "description": "Output only. Time when the Trial was started.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Output only. Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "clientId": {
            "description": "Output only. The identifier of the client that originally requested this Trial. Each client is identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the same Trial will be returned. Multiple clients with different client_ids can ask for suggestions simultaneously, each of them will get their own Trial.",
            "readOnly": true,
            "type": "string"
          },
          "infeasibleReason": {
            "description": "Output only. A human readable string describing why the Trial is infeasible. This is set only if Trial state is `INFEASIBLE`.",
            "readOnly": true,
            "type": "string"
          },
          "customJob": {
            "description": "Output only. The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's Trial.",
            "readOnly": true,
            "type": "string"
          },
          "webAccessUris": {
            "description": "Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.",
            "readOnly": true,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Trial"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.get",
      "resource": "projects.locations.studies.trials",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a Trial.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the Trial resource. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Trial"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.list",
      "resource": "projects.locations.studies.trials",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/trials",
      "description": "Lists the Trials associated with a Study.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Study to list the Trial from. Format: `projects/{project}/locations/{location}/studies/{study}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageToken": {
          "description": "Optional. A page token to request the next page of results. If unspecified, there are no subsequent pages.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The number of Trials to retrieve per \"page\" of results. If unspecified, the service will pick an appropriate default.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListTrialsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.addTrialMeasurement",
      "resource": "projects.locations.studies.trials",
      "action": "addTrialMeasurement",
      "http_method": "POST",
      "path_template": "v1/{+trialName}:addTrialMeasurement",
      "description": "Adds a measurement of the objective metrics to a Trial. This measurement is assumed to have been taken before the Trial is complete.",
      "required_params": [
        "trialName"
      ],
      "parameters": {
        "trialName": {
          "description": "Required. The name of the trial to add measurement. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1AddTrialMeasurementRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1AddTrialMeasurementRequest",
        "description": "Request message for VizierService.AddTrialMeasurement.",
        "type": "object",
        "properties": {
          "measurement": {
            "description": "Required. The measurement to be added to a Trial.",
            "$ref": "GoogleCloudAiplatformV1Measurement"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Trial"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.complete",
      "resource": "projects.locations.studies.trials",
      "action": "complete",
      "http_method": "POST",
      "path_template": "v1/{+name}:complete",
      "description": "Marks a Trial as complete.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CompleteTrialRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CompleteTrialRequest",
        "description": "Request message for VizierService.CompleteTrial.",
        "type": "object",
        "properties": {
          "finalMeasurement": {
            "description": "Optional. If provided, it will be used as the completed Trial's final_measurement; Otherwise, the service will auto-select a previously reported measurement as the final-measurement",
            "$ref": "GoogleCloudAiplatformV1Measurement"
          },
          "trialInfeasible": {
            "description": "Optional. True if the Trial cannot be run with the given Parameter, and final_measurement will be ignored.",
            "type": "boolean"
          },
          "infeasibleReason": {
            "description": "Optional. A human readable reason why the trial was infeasible. This should only be provided if `trial_infeasible` is true.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Trial"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.delete",
      "resource": "projects.locations.studies.trials",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a Trial.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.checkTrialEarlyStoppingState",
      "resource": "projects.locations.studies.trials",
      "action": "checkTrialEarlyStoppingState",
      "http_method": "POST",
      "path_template": "v1/{+trialName}:checkTrialEarlyStoppingState",
      "description": "Checks whether a Trial should stop or not. Returns a long-running operation. When the operation is successful, it will contain a CheckTrialEarlyStoppingStateResponse.",
      "required_params": [
        "trialName"
      ],
      "parameters": {
        "trialName": {
          "description": "Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CheckTrialEarlyStoppingStateRequest",
        "description": "Request message for VizierService.CheckTrialEarlyStoppingState.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.stop",
      "resource": "projects.locations.studies.trials",
      "action": "stop",
      "http_method": "POST",
      "path_template": "v1/{+name}:stop",
      "description": "Stops a Trial.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1StopTrialRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1StopTrialRequest",
        "description": "Request message for VizierService.StopTrial.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1Trial"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.listOptimalTrials",
      "resource": "projects.locations.studies.trials",
      "action": "listOptimalTrials",
      "http_method": "POST",
      "path_template": "v1/{+parent}/trials:listOptimalTrials",
      "description": "Lists the pareto-optimal Trials for multi-objective Study or the optimal Trials for single-objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the Study that the optimal Trial belongs to.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ListOptimalTrialsRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ListOptimalTrialsRequest",
        "description": "Request message for VizierService.ListOptimalTrials.",
        "type": "object",
        "properties": {}
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListOptimalTrialsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.operations.list",
      "resource": "projects.locations.studies.trials.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.operations.get",
      "resource": "projects.locations.studies.trials.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.operations.delete",
      "resource": "projects.locations.studies.trials.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.operations.cancel",
      "resource": "projects.locations.studies.trials.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.studies.trials.operations.wait",
      "resource": "projects.locations.studies.trials.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/studies/[^/]+/trials/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.create",
      "resource": "projects.locations.ragCorpora",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/{+parent}/ragCorpora",
      "description": "Creates a RagCorpus.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the RagCorpus in. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1RagCorpus",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1RagCorpus",
        "description": "A RagCorpus is a RagFile container and a project can have multiple RagCorpora.",
        "type": "object",
        "properties": {
          "vectorDbConfig": {
            "description": "Optional. Immutable. The config for the Vector DBs.",
            "$ref": "GoogleCloudAiplatformV1RagVectorDbConfig"
          },
          "vertexAiSearchConfig": {
            "description": "Optional. Immutable. The config for the Vertex AI Search.",
            "$ref": "GoogleCloudAiplatformV1VertexAiSearchConfig"
          },
          "name": {
            "description": "Output only. The resource name of the RagCorpus.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the RagCorpus. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. The description of the RagCorpus.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this RagCorpus was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this RagCorpus was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "corpusStatus": {
            "description": "Output only. RagCorpus state.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1CorpusStatus"
          },
          "encryptionSpec": {
            "description": "Optional. Immutable. The CMEK key name used to encrypt at-rest data related to this Corpus. Only applicable to RagManagedDb option for Vector DB. This field can only be set at corpus creation time, and cannot be updated or deleted.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.patch",
      "resource": "projects.locations.ragCorpora",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a RagCorpus.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Output only. The resource name of the RagCorpus.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1RagCorpus",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1RagCorpus",
        "description": "A RagCorpus is a RagFile container and a project can have multiple RagCorpora.",
        "type": "object",
        "properties": {
          "vectorDbConfig": {
            "description": "Optional. Immutable. The config for the Vector DBs.",
            "$ref": "GoogleCloudAiplatformV1RagVectorDbConfig"
          },
          "vertexAiSearchConfig": {
            "description": "Optional. Immutable. The config for the Vertex AI Search.",
            "$ref": "GoogleCloudAiplatformV1VertexAiSearchConfig"
          },
          "name": {
            "description": "Output only. The resource name of the RagCorpus.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the RagCorpus. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. The description of the RagCorpus.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Timestamp when this RagCorpus was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this RagCorpus was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "corpusStatus": {
            "description": "Output only. RagCorpus state.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1CorpusStatus"
          },
          "encryptionSpec": {
            "description": "Optional. Immutable. The CMEK key name used to encrypt at-rest data related to this Corpus. Only applicable to RagManagedDb option for Vector DB. This field can only be set at corpus creation time, and cannot be updated or deleted.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.get",
      "resource": "projects.locations.ragCorpora",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a RagCorpus.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the RagCorpus resource. Format: `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1RagCorpus"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.list",
      "resource": "projects.locations.ragCorpora",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/ragCorpora",
      "description": "Lists RagCorpora in a Location.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location from which to list the RagCorpora. Format: `projects/{project}/locations/{location}`",
          "pattern": "^projects/[^/]+/locations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token. Typically obtained via ListRagCorporaResponse.next_page_token of the previous VertexRagDataService.ListRagCorpora call.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListRagCorporaResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.delete",
      "resource": "projects.locations.ragCorpora",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a RagCorpus.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the RagCorpus resource to be deleted. Format: `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "Optional. If set to true, any RagFiles in this RagCorpus will also be deleted. Otherwise, the request will only work if the RagCorpus has no RagFiles.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.operations.list",
      "resource": "projects.locations.ragCorpora.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.operations.get",
      "resource": "projects.locations.ragCorpora.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.operations.delete",
      "resource": "projects.locations.ragCorpora.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.operations.cancel",
      "resource": "projects.locations.ragCorpora.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.operations.wait",
      "resource": "projects.locations.ragCorpora.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.ragFiles.import",
      "resource": "projects.locations.ragCorpora.ragFiles",
      "action": "import",
      "http_method": "POST",
      "path_template": "v1/{+parent}/ragFiles:import",
      "description": "Import files from Google Cloud Storage or Google Drive into a RagCorpus.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the RagCorpus resource into which to import files. Format: `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ImportRagFilesRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ImportRagFilesRequest",
        "description": "Request message for VertexRagDataService.ImportRagFiles.",
        "type": "object",
        "properties": {
          "importRagFilesConfig": {
            "description": "Required. The config for the RagFiles to be synced and imported into the RagCorpus. VertexRagDataService.ImportRagFiles.",
            "$ref": "GoogleCloudAiplatformV1ImportRagFilesConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.ragFiles.get",
      "resource": "projects.locations.ragCorpora.ragFiles",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a RagFile.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the RagFile resource. Format: `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}/ragFiles/{rag_file}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/ragFiles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1RagFile"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.ragFiles.list",
      "resource": "projects.locations.ragCorpora.ragFiles",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+parent}/ragFiles",
      "description": "Lists RagFiles in a RagCorpus.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the RagCorpus from which to list the RagFiles. Format: `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token. Typically obtained via ListRagFilesResponse.next_page_token of the previous VertexRagDataService.ListRagFiles call.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListRagFilesResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.ragFiles.delete",
      "resource": "projects.locations.ragCorpora.ragFiles",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a RagFile.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the RagFile resource to be deleted. Format: `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}/ragFiles/{rag_file}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/ragFiles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.ragFiles.operations.list",
      "resource": "projects.locations.ragCorpora.ragFiles.operations",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/{+name}/operations",
      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation's parent resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/ragFiles/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter.",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningListOperationsResponse"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.ragFiles.operations.get",
      "resource": "projects.locations.ragCorpora.ragFiles.operations",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/ragFiles/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.ragFiles.operations.delete",
      "resource": "projects.locations.ragCorpora.ragFiles.operations",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be deleted.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/ragFiles/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.ragFiles.operations.cancel",
      "resource": "projects.locations.ragCorpora.ragFiles.operations",
      "action": "cancel",
      "http_method": "POST",
      "path_template": "v1/{+name}:cancel",
      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to be cancelled.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/ragFiles/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleProtobufEmpty"
    },
    {
      "operation_id": "aiplatform.projects.locations.ragCorpora.ragFiles.operations.wait",
      "resource": "projects.locations.ragCorpora.ragFiles.operations",
      "action": "wait",
      "http_method": "POST",
      "path_template": "v1/{+name}:wait",
      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "The name of the operation resource to wait on.",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+/ragFiles/[^/]+/operations/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "location": "query",
          "type": "string",
          "format": "google-duration"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.batchPredictionJobs.create",
      "resource": "batchPredictionJobs",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/batchPredictionJobs",
      "description": "Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to start.",
      "required_params": [],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the BatchPredictionJob in. Format: `projects/{project}/locations/{location}`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1BatchPredictionJob",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1BatchPredictionJob",
        "description": "A job that uses a Model to produce predictions on multiple input instances. If predictions for significant portion of the instances fail, the job may finish without attempting predictions for all remaining instances.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Output only. Resource name of the BatchPredictionJob.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-defined name of this BatchPredictionJob.",
            "type": "string"
          },
          "model": {
            "description": "The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`",
            "type": "string"
          },
          "modelVersionId": {
            "description": "Output only. The version ID of the Model that produces the predictions via this job.",
            "readOnly": true,
            "type": "string"
          },
          "unmanagedContainerModel": {
            "description": "Contains model information necessary to perform batch prediction without requiring uploading to model registry. Exactly one of model and unmanaged_container_model must be set.",
            "$ref": "GoogleCloudAiplatformV1UnmanagedContainerModel"
          },
          "inputConfig": {
            "description": "Required. Input configuration of the instances on which predictions are performed. The schema of any single instance may be specified via the Model's PredictSchemata's instance_schema_uri.",
            "$ref": "GoogleCloudAiplatformV1BatchPredictionJobInputConfig"
          },
          "instanceConfig": {
            "description": "Configuration for how to convert batch prediction input instances to the prediction instances that are sent to the Model.",
            "$ref": "GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig"
          },
          "modelParameters": {
            "description": "The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          },
          "outputConfig": {
            "description": "Required. The Configuration specifying where output predictions should be written. The schema of any single prediction may be specified as a concatenation of Model's PredictSchemata's instance_schema_uri and prediction_schema_uri.",
            "$ref": "GoogleCloudAiplatformV1BatchPredictionJobOutputConfig"
          },
          "dedicatedResources": {
            "description": "The config of resources used by the Model during the batch prediction. If the Model supports DEDICATED_RESOURCES this config may be provided (and the job will use these resources), if the Model doesn't support AUTOMATIC_RESOURCES, this config must be provided.",
            "$ref": "GoogleCloudAiplatformV1BatchDedicatedResources"
          },
          "serviceAccount": {
            "description": "The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.",
            "type": "string"
          },
          "manualBatchTuningParameters": {
            "description": "Immutable. Parameters configuring the batch behavior. Currently only applicable when dedicated_resources are used (in other cases Vertex AI does the tuning itself).",
            "$ref": "GoogleCloudAiplatformV1ManualBatchTuningParameters"
          },
          "generateExplanation": {
            "description": "Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated.",
            "type": "boolean"
          },
          "explanationSpec": {
            "description": "Explanation configuration for this BatchPredictionJob. Can be specified only if generate_explanation is set to `true`. This value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of the explanation_spec object is not populated, the corresponding field of the Model.explanation_spec object is inherited.",
            "$ref": "GoogleCloudAiplatformV1ExplanationSpec"
          },
          "outputInfo": {
            "description": "Output only. Information further describing the output of this job.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1BatchPredictionJobOutputInfo"
          },
          "state": {
            "description": "Output only. The detailed state of the job.",
            "readOnly": true,
            "type": "string",
            "enumDescriptions": [
              "The job state is unspecified.",
              "The job has been just created or resumed and processing has not yet begun.",
              "The service is preparing to run the job.",
              "The job is in progress.",
              "The job completed successfully.",
              "The job failed.",
              "The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.",
              "The job has been cancelled.",
              "The job has been stopped, and can be resumed.",
              "The job has expired.",
              "The job is being updated. Only jobs in the `RUNNING` state can be updated. After updating, the job goes back to the `RUNNING` state.",
              "The job is partially succeeded, some results may be missing due to errors."
            ],
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ]
          },
          "error": {
            "description": "Output only. Only populated when the job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.",
            "readOnly": true,
            "$ref": "GoogleRpcStatus"
          },
          "partialFailures": {
            "description": "Output only. Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "GoogleRpcStatus"
            }
          },
          "resourcesConsumed": {
            "description": "Output only. Information about resources that had been consumed by this job. Provided in real time at best effort basis, as well as a final value once the job completes. Note: This field currently may be not populated for batch predictions that use AutoML Models.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1ResourcesConsumed"
          },
          "completionStats": {
            "description": "Output only. Statistics on completed and failed prediction instances.",
            "readOnly": true,
            "$ref": "GoogleCloudAiplatformV1CompletionStats"
          },
          "createTime": {
            "description": "Output only. Time when the BatchPredictionJob was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "startTime": {
            "description": "Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "endTime": {
            "description": "Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Time when the BatchPredictionJob was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "labels": {
            "description": "The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "encryptionSpec": {
            "description": "Customer-managed encryption key options for a BatchPredictionJob. If this is set, then all resources created by the BatchPredictionJob will be encrypted with the provided encryption key.",
            "$ref": "GoogleCloudAiplatformV1EncryptionSpec"
          },
          "disableContainerLogging": {
            "description": "For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.",
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1BatchPredictionJob"
    },
    {
      "operation_id": "aiplatform.batchPredictionJobs.get",
      "resource": "batchPredictionJobs",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a BatchPredictionJob",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the BatchPredictionJob resource. Format: `projects/{project}/locations/{location}/batchPredictionJobs/{batch_prediction_job}`",
          "pattern": "^batchPredictionJobs/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1BatchPredictionJob"
    },
    {
      "operation_id": "aiplatform.batchPredictionJobs.list",
      "resource": "batchPredictionJobs",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/batchPredictionJobs",
      "description": "Lists BatchPredictionJobs in a Location.",
      "required_params": [],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the BatchPredictionJobs from. Format: `projects/{project}/locations/{location}`",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `model_display_name` supports `=`, `!=` comparisons. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The standard list page token. Typically obtained via ListBatchPredictionJobsResponse.next_page_token of the previous JobService.ListBatchPredictionJobs call.",
          "location": "query",
          "type": "string"
        },
        "readMask": {
          "description": "Mask specifying which fields to read.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListBatchPredictionJobsResponse"
    },
    {
      "operation_id": "aiplatform.endpoints.predict",
      "resource": "endpoints",
      "action": "predict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:predict",
      "description": "Perform an online prediction.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PredictRequest",
        "description": "Request message for PredictionService.Predict.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "parameters": {
            "description": "The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1PredictResponse"
    },
    {
      "operation_id": "aiplatform.endpoints.predictLongRunning",
      "resource": "endpoints",
      "action": "predictLongRunning",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:predictLongRunning",
      "description": "",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`",
          "pattern": "^endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PredictLongRunningRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PredictLongRunningRequest",
        "description": "Request message for PredictionService.PredictLongRunning.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "parameters": {
            "description": "Optional. The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.endpoints.fetchPredictOperation",
      "resource": "endpoints",
      "action": "fetchPredictOperation",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:fetchPredictOperation",
      "description": "Fetch an asynchronous online prediction operation.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`",
          "pattern": "^endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FetchPredictOperationRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FetchPredictOperationRequest",
        "description": "Request message for PredictionService.FetchPredictOperation.",
        "type": "object",
        "properties": {
          "operationName": {
            "description": "Required. The server-assigned name for the operation.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.endpoints.generateContent",
      "resource": "endpoints",
      "action": "generateContent",
      "http_method": "POST",
      "path_template": "v1/{+model}:generateContent",
      "description": "Generate content with multimodal inputs.",
      "required_params": [
        "model"
      ],
      "parameters": {
        "model": {
          "description": "Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher model format: `projects/{project}/locations/{location}/publishers/*/models/*` Tuned model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1GenerateContentRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1GenerateContentRequest",
        "description": "Request message for [PredictionService.GenerateContent].",
        "type": "object",
        "properties": {
          "contents": {
            "description": "Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "cachedContent": {
            "description": "Optional. The name of the cached content used as context to serve the prediction. Note: only used in explicit caching, where users can have control over caching (e.g. what content to cache) and enjoy guaranteed cost savings. Format: `projects/{project}/locations/{location}/cachedContents/{cachedContent}`",
            "type": "string"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "toolConfig": {
            "description": "Optional. Tool config. This config is shared for all tools provided in the request.",
            "$ref": "GoogleCloudAiplatformV1ToolConfig"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata for the request. It is used for billing and reporting only. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "safetySettings": {
            "description": "Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SafetySetting"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1GenerateContentResponse"
    },
    {
      "operation_id": "aiplatform.endpoints.streamGenerateContent",
      "resource": "endpoints",
      "action": "streamGenerateContent",
      "http_method": "POST",
      "path_template": "v1/{+model}:streamGenerateContent",
      "description": "Generate content with multimodal inputs with streaming support.",
      "required_params": [
        "model"
      ],
      "parameters": {
        "model": {
          "description": "Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher model format: `projects/{project}/locations/{location}/publishers/*/models/*` Tuned model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1GenerateContentRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1GenerateContentRequest",
        "description": "Request message for [PredictionService.GenerateContent].",
        "type": "object",
        "properties": {
          "contents": {
            "description": "Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "cachedContent": {
            "description": "Optional. The name of the cached content used as context to serve the prediction. Note: only used in explicit caching, where users can have control over caching (e.g. what content to cache) and enjoy guaranteed cost savings. Format: `projects/{project}/locations/{location}/cachedContents/{cachedContent}`",
            "type": "string"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "toolConfig": {
            "description": "Optional. Tool config. This config is shared for all tools provided in the request.",
            "$ref": "GoogleCloudAiplatformV1ToolConfig"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata for the request. It is used for billing and reporting only. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "safetySettings": {
            "description": "Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SafetySetting"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1GenerateContentResponse"
    },
    {
      "operation_id": "aiplatform.endpoints.countTokens",
      "resource": "endpoints",
      "action": "countTokens",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:countTokens",
      "description": "Perform a token counting.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to perform token counting. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CountTokensRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CountTokensRequest",
        "description": "Request message for PredictionService.CountTokens.",
        "type": "object",
        "properties": {
          "model": {
            "description": "Optional. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/*/models/*`",
            "type": "string"
          },
          "instances": {
            "description": "Optional. The instances that are the input to token counting call. Schema is identical to the prediction schema of the underlying model.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "contents": {
            "description": "Optional. Input content.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config that the model will use to generate the response.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CountTokensResponse"
    },
    {
      "operation_id": "aiplatform.endpoints.computeTokens",
      "resource": "endpoints",
      "action": "computeTokens",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:computeTokens",
      "description": "Return a list of tokens based on the input text.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to get lists of tokens and token ids.",
          "pattern": "^endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ComputeTokensRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ComputeTokensRequest",
        "description": "Request message for ComputeTokens RPC call.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Optional. The instances that are the input to token computing API call. Schema is identical to the prediction schema of the text model, even for the non-text models, like chat models, or Codey models.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "model": {
            "description": "Optional. The name of the publisher model requested to serve the prediction. Format: projects/{project}/locations/{location}/publishers/*/models/*",
            "type": "string"
          },
          "contents": {
            "description": "Optional. Input content.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ComputeTokensResponse"
    },
    {
      "operation_id": "aiplatform.endpoints.chat.completions",
      "resource": "endpoints.chat",
      "action": "completions",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}/chat/completions",
      "description": "Exposes an OpenAI-compatible endpoint for chat completions.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^endpoints/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleApiHttpBody",
      "body_schema": {
        "id": "GoogleApiHttpBody",
        "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
        "type": "object",
        "properties": {
          "contentType": {
            "description": "The HTTP Content-Type header value specifying the content type of the body.",
            "type": "string"
          },
          "data": {
            "description": "The HTTP request/response body as raw binary.",
            "type": "string",
            "format": "byte"
          },
          "extensions": {
            "description": "Application specific response metadata. Must be set in the first response for streaming APIs.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleApiHttpBody"
    },
    {
      "operation_id": "aiplatform.publishers.models.predict",
      "resource": "publishers.models",
      "action": "predict",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:predict",
      "description": "Perform an online prediction.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PredictRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PredictRequest",
        "description": "Request message for PredictionService.Predict.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "parameters": {
            "description": "The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1PredictResponse"
    },
    {
      "operation_id": "aiplatform.publishers.models.predictLongRunning",
      "resource": "publishers.models",
      "action": "predictLongRunning",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:predictLongRunning",
      "description": "",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`",
          "pattern": "^publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1PredictLongRunningRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1PredictLongRunningRequest",
        "description": "Request message for PredictionService.PredictLongRunning.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Required. The instances that are the input to the prediction call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the prediction call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "parameters": {
            "description": "Optional. The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint's DeployedModels' Model's PredictSchemata's parameters_schema_uri.",
            "type": "any"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.publishers.models.fetchPredictOperation",
      "resource": "publishers.models",
      "action": "fetchPredictOperation",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:fetchPredictOperation",
      "description": "Fetch an asynchronous online prediction operation.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`",
          "pattern": "^publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1FetchPredictOperationRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1FetchPredictOperationRequest",
        "description": "Request message for PredictionService.FetchPredictOperation.",
        "type": "object",
        "properties": {
          "operationName": {
            "description": "Required. The server-assigned name for the operation.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.publishers.models.generateContent",
      "resource": "publishers.models",
      "action": "generateContent",
      "http_method": "POST",
      "path_template": "v1/{+model}:generateContent",
      "description": "Generate content with multimodal inputs.",
      "required_params": [
        "model"
      ],
      "parameters": {
        "model": {
          "description": "Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher model format: `projects/{project}/locations/{location}/publishers/*/models/*` Tuned model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1GenerateContentRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1GenerateContentRequest",
        "description": "Request message for [PredictionService.GenerateContent].",
        "type": "object",
        "properties": {
          "contents": {
            "description": "Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "cachedContent": {
            "description": "Optional. The name of the cached content used as context to serve the prediction. Note: only used in explicit caching, where users can have control over caching (e.g. what content to cache) and enjoy guaranteed cost savings. Format: `projects/{project}/locations/{location}/cachedContents/{cachedContent}`",
            "type": "string"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "toolConfig": {
            "description": "Optional. Tool config. This config is shared for all tools provided in the request.",
            "$ref": "GoogleCloudAiplatformV1ToolConfig"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata for the request. It is used for billing and reporting only. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "safetySettings": {
            "description": "Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SafetySetting"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1GenerateContentResponse"
    },
    {
      "operation_id": "aiplatform.publishers.models.streamGenerateContent",
      "resource": "publishers.models",
      "action": "streamGenerateContent",
      "http_method": "POST",
      "path_template": "v1/{+model}:streamGenerateContent",
      "description": "Generate content with multimodal inputs with streaming support.",
      "required_params": [
        "model"
      ],
      "parameters": {
        "model": {
          "description": "Required. The fully qualified name of the publisher model or tuned model endpoint to use. Publisher model format: `projects/{project}/locations/{location}/publishers/*/models/*` Tuned model endpoint format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1GenerateContentRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1GenerateContentRequest",
        "description": "Request message for [PredictionService.GenerateContent].",
        "type": "object",
        "properties": {
          "contents": {
            "description": "Required. The content of the current conversation with the model. For single-turn queries, this is a single instance. For multi-turn queries, this is a repeated field that contains conversation history + latest request.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "cachedContent": {
            "description": "Optional. The name of the cached content used as context to serve the prediction. Note: only used in explicit caching, where users can have control over caching (e.g. what content to cache) and enjoy guaranteed cost savings. Format: `projects/{project}/locations/{location}/cachedContents/{cachedContent}`",
            "type": "string"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "toolConfig": {
            "description": "Optional. Tool config. This config is shared for all tools provided in the request.",
            "$ref": "GoogleCloudAiplatformV1ToolConfig"
          },
          "labels": {
            "description": "Optional. The labels with user-defined metadata for the request. It is used for billing and reporting only. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "safetySettings": {
            "description": "Optional. Per request settings for blocking unsafe content. Enforced on GenerateContentResponse.candidates.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1SafetySetting"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform",
        "https://www.googleapis.com/auth/cloud-platform.read-only"
      ],
      "response_type": "GoogleCloudAiplatformV1GenerateContentResponse"
    },
    {
      "operation_id": "aiplatform.publishers.models.countTokens",
      "resource": "publishers.models",
      "action": "countTokens",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:countTokens",
      "description": "Perform a token counting.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to perform token counting. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`",
          "pattern": "^publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1CountTokensRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1CountTokensRequest",
        "description": "Request message for PredictionService.CountTokens.",
        "type": "object",
        "properties": {
          "model": {
            "description": "Optional. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/*/models/*`",
            "type": "string"
          },
          "instances": {
            "description": "Optional. The instances that are the input to token counting call. Schema is identical to the prediction schema of the underlying model.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "contents": {
            "description": "Optional. Input content.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          },
          "systemInstruction": {
            "description": "Optional. The user provided system instructions for the model. Note: only text should be used in parts and content in each part will be in a separate paragraph.",
            "$ref": "GoogleCloudAiplatformV1Content"
          },
          "tools": {
            "description": "Optional. A list of `Tools` the model may use to generate the next response. A `Tool` is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Tool"
            }
          },
          "generationConfig": {
            "description": "Optional. Generation config that the model will use to generate the response.",
            "$ref": "GoogleCloudAiplatformV1GenerationConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1CountTokensResponse"
    },
    {
      "operation_id": "aiplatform.publishers.models.computeTokens",
      "resource": "publishers.models",
      "action": "computeTokens",
      "http_method": "POST",
      "path_template": "v1/{+endpoint}:computeTokens",
      "description": "Return a list of tokens based on the input text.",
      "required_params": [
        "endpoint"
      ],
      "parameters": {
        "endpoint": {
          "description": "Required. The name of the Endpoint requested to get lists of tokens and token ids.",
          "pattern": "^publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ComputeTokensRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ComputeTokensRequest",
        "description": "Request message for ComputeTokens RPC call.",
        "type": "object",
        "properties": {
          "instances": {
            "description": "Optional. The instances that are the input to token computing API call. Schema is identical to the prediction schema of the text model, even for the non-text models, like chat models, or Codey models.",
            "type": "array",
            "items": {
              "type": "any"
            }
          },
          "model": {
            "description": "Optional. The name of the publisher model requested to serve the prediction. Format: projects/{project}/locations/{location}/publishers/*/models/*",
            "type": "string"
          },
          "contents": {
            "description": "Optional. Input content.",
            "type": "array",
            "items": {
              "$ref": "GoogleCloudAiplatformV1Content"
            }
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ComputeTokensResponse"
    },
    {
      "operation_id": "aiplatform.publishers.models.get",
      "resource": "publishers.models",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a Model Garden publisher model.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the PublisherModel resource. Format: `publishers/{publisher}/models/{publisher_model}`",
          "pattern": "^publishers/[^/]+/models/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "languageCode": {
          "description": "Optional. The IETF BCP-47 language code representing the language in which the publisher model's text information should be written in.",
          "location": "query",
          "type": "string"
        },
        "view": {
          "description": "Optional. PublisherModel view specifying which fields to read.",
          "location": "query",
          "type": "string",
          "enumDescriptions": [
            "The default / unset value. The API will default to the BASIC view.",
            "Include basic metadata about the publisher model, but not the full contents.",
            "Include everything.",
            "Include: VersionId, ModelVersionExternalName, and SupportedActions."
          ],
          "enum": [
            "PUBLISHER_MODEL_VIEW_UNSPECIFIED",
            "PUBLISHER_MODEL_VIEW_BASIC",
            "PUBLISHER_MODEL_VIEW_FULL",
            "PUBLISHER_MODEL_VERSION_VIEW_BASIC"
          ]
        },
        "isHuggingFaceModel": {
          "description": "Optional. Boolean indicates whether the requested model is a Hugging Face model.",
          "location": "query",
          "type": "boolean"
        },
        "huggingFaceToken": {
          "description": "Optional. Token used to access Hugging Face gated models.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1PublisherModel"
    },
    {
      "operation_id": "aiplatform.reasoningEngines.query",
      "resource": "reasoningEngines",
      "action": "query",
      "http_method": "POST",
      "path_template": "v1/{+name}:query",
      "description": "Queries using a reasoning engine.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ReasoningEngine resource to use. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
          "pattern": "^reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1QueryReasoningEngineRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1QueryReasoningEngineRequest",
        "description": "Request message for ReasoningEngineExecutionService.Query.",
        "type": "object",
        "properties": {
          "input": {
            "description": "Optional. Input content provided by users in JSON object format. Examples include text query, function calling parameters, media bytes, etc.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "classMethod": {
            "description": "Optional. Class method to be used for the query. It is optional and defaults to \"query\" if unspecified.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1QueryReasoningEngineResponse"
    },
    {
      "operation_id": "aiplatform.reasoningEngines.streamQuery",
      "resource": "reasoningEngines",
      "action": "streamQuery",
      "http_method": "POST",
      "path_template": "v1/{+name}:streamQuery",
      "description": "Streams queries using a reasoning engine.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ReasoningEngine resource to use. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
          "pattern": "^reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1StreamQueryReasoningEngineRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1StreamQueryReasoningEngineRequest",
        "description": "Request message for ReasoningEngineExecutionService.StreamQuery.",
        "type": "object",
        "properties": {
          "input": {
            "description": "Optional. Input content provided by users in JSON object format. Examples include text query, function calling parameters, media bytes, etc.",
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "classMethod": {
            "description": "Optional. Class method to be used for the stream query. It is optional and defaults to \"stream_query\" if unspecified.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleApiHttpBody"
    },
    {
      "operation_id": "aiplatform.reasoningEngines.create",
      "resource": "reasoningEngines",
      "action": "create",
      "http_method": "POST",
      "path_template": "v1/reasoningEngines",
      "description": "Creates a reasoning engine.",
      "required_params": [],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to create the ReasoningEngine in. Format: `projects/{project}/locations/{location}`",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ReasoningEngine",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ReasoningEngine",
        "description": "ReasoningEngine provides a customizable runtime for models to determine which actions to take and in which order.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The resource name of the ReasoningEngine. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the ReasoningEngine.",
            "type": "string"
          },
          "description": {
            "description": "Optional. The description of the ReasoningEngine.",
            "type": "string"
          },
          "spec": {
            "description": "Optional. Configurations of the ReasoningEngine",
            "$ref": "GoogleCloudAiplatformV1ReasoningEngineSpec"
          },
          "createTime": {
            "description": "Output only. Timestamp when this ReasoningEngine was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this ReasoningEngine was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.reasoningEngines.get",
      "resource": "reasoningEngines",
      "action": "get",
      "http_method": "GET",
      "path_template": "v1/{+name}",
      "description": "Gets a reasoning engine.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ReasoningEngine resource. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
          "pattern": "^reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ReasoningEngine"
    },
    {
      "operation_id": "aiplatform.reasoningEngines.list",
      "resource": "reasoningEngines",
      "action": "list",
      "http_method": "GET",
      "path_template": "v1/reasoningEngines",
      "description": "Lists reasoning engines in a location.",
      "required_params": [],
      "parameters": {
        "parent": {
          "description": "Required. The resource name of the Location to list the ReasoningEngines from. Format: `projects/{project}/locations/{location}`",
          "location": "query",
          "type": "string"
        },
        "filter": {
          "description": "Optional. The standard list filter. More detail in [AIP-160](https://google.aip.dev/160).",
          "location": "query",
          "type": "string"
        },
        "pageSize": {
          "description": "Optional. The standard list page size.",
          "location": "query",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "Optional. The standard list page token.",
          "location": "query",
          "type": "string"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1ListReasoningEnginesResponse"
    },
    {
      "operation_id": "aiplatform.reasoningEngines.patch",
      "resource": "reasoningEngines",
      "action": "patch",
      "http_method": "PATCH",
      "path_template": "v1/{+name}",
      "description": "Updates a reasoning engine.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Identifier. The resource name of the ReasoningEngine. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
          "pattern": "^reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. Mask specifying which fields to update.",
          "location": "query",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1ReasoningEngine",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1ReasoningEngine",
        "description": "ReasoningEngine provides a customizable runtime for models to determine which actions to take and in which order.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Identifier. The resource name of the ReasoningEngine. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the ReasoningEngine.",
            "type": "string"
          },
          "description": {
            "description": "Optional. The description of the ReasoningEngine.",
            "type": "string"
          },
          "spec": {
            "description": "Optional. Configurations of the ReasoningEngine",
            "$ref": "GoogleCloudAiplatformV1ReasoningEngineSpec"
          },
          "createTime": {
            "description": "Output only. Timestamp when this ReasoningEngine was created.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this ReasoningEngine was most recently updated.",
            "readOnly": true,
            "type": "string",
            "format": "google-datetime"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.reasoningEngines.delete",
      "resource": "reasoningEngines",
      "action": "delete",
      "http_method": "DELETE",
      "path_template": "v1/{+name}",
      "description": "Deletes a reasoning engine.",
      "required_params": [
        "name"
      ],
      "parameters": {
        "name": {
          "description": "Required. The name of the ReasoningEngine resource to be deleted. Format: `projects/{project}/locations/{location}/reasoningEngines/{reasoning_engine}`",
          "pattern": "^reasoningEngines/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        },
        "force": {
          "description": "Optional. If set to true, child resources of this reasoning engine will also be deleted. Otherwise, the request will fail with FAILED_PRECONDITION error when the reasoning engine has undeleted child resources.",
          "location": "query",
          "type": "boolean"
        }
      },
      "body_schema_ref": null,
      "body_schema": {},
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleLongrunningOperation"
    },
    {
      "operation_id": "aiplatform.media.upload",
      "resource": "media",
      "action": "upload",
      "http_method": "POST",
      "path_template": "v1/{+parent}/ragFiles:upload",
      "description": "Upload a file into a RagCorpus.",
      "required_params": [
        "parent"
      ],
      "parameters": {
        "parent": {
          "description": "Required. The name of the RagCorpus resource into which to upload the file. Format: `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`",
          "pattern": "^projects/[^/]+/locations/[^/]+/ragCorpora/[^/]+$",
          "location": "path",
          "required": true,
          "type": "string"
        }
      },
      "body_schema_ref": "GoogleCloudAiplatformV1UploadRagFileRequest",
      "body_schema": {
        "id": "GoogleCloudAiplatformV1UploadRagFileRequest",
        "description": "Request message for VertexRagDataService.UploadRagFile.",
        "type": "object",
        "properties": {
          "ragFile": {
            "description": "Required. The RagFile to upload.",
            "$ref": "GoogleCloudAiplatformV1RagFile"
          },
          "uploadRagFileConfig": {
            "description": "Required. The config for the RagFiles to be uploaded into the RagCorpus. VertexRagDataService.UploadRagFile.",
            "$ref": "GoogleCloudAiplatformV1UploadRagFileConfig"
          }
        }
      },
      "scopes_required": [
        "https://www.googleapis.com/auth/cloud-platform"
      ],
      "response_type": "GoogleCloudAiplatformV1UploadRagFileResponse"
    }
  ]
}